!function(){"use strict";
/**
	 * @license
	 * Copyright 2010-2022 Three.js Authors
	 * SPDX-License-Identifier: MIT
	 */const t="141",e=100,A=301,i=302,n=306,r=1e3,s=1001,a=1002,o=1003,l=1006,c=1008,h=1009,u=1014,d=1015,g=1016,p=1020,f=1023,m=1026,v=1027,C=33776,I=33777,_=33778,M=33779,y=2300,x=2301,E=2302,w=2400,b=2401,S=2402,B=2500,D=3e3,Q=3001,T="srgb",L="srgb-linear",N=7680,R=35044,P="300 es",k=1035;class U{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const A=this._listeners;void 0===A[t]&&(A[t]=[]),-1===A[t].indexOf(e)&&A[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const A=this._listeners;return void 0!==A[t]&&-1!==A[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const A=this._listeners[t];if(void 0!==A){const t=A.indexOf(e);-1!==t&&A.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const A=e.slice(0);for(let e=0,i=A.length;e<i;e++)A[e].call(this,t);t.target=null}}}const z=[];for(let t=0;t<256;t++)z[t]=(t<16?"0":"")+t.toString(16);let F=1234567;const G=Math.PI/180,O=180/Math.PI;function V(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,A=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(z[255&t]+z[t>>8&255]+z[t>>16&255]+z[t>>24&255]+"-"+z[255&e]+z[e>>8&255]+"-"+z[e>>16&15|64]+z[e>>24&255]+"-"+z[63&A|128]+z[A>>8&255]+"-"+z[A>>16&255]+z[A>>24&255]+z[255&i]+z[i>>8&255]+z[i>>16&255]+z[i>>24&255]).toLowerCase()}function H(t,e,A){return Math.max(e,Math.min(A,t))}function W(t,e){return(t%e+e)%e}function Y(t,e,A){return(1-A)*t+A*e}function J(t){return 0==(t&t-1)&&0!==t}function K(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))}function Z(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}var q=Object.freeze({__proto__:null,DEG2RAD:G,RAD2DEG:O,generateUUID:V,clamp:H,euclideanModulo:W,mapLinear:function(t,e,A,i,n){return i+(t-e)*(n-i)/(A-e)},inverseLerp:function(t,e,A){return t!==e?(A-t)/(e-t):0},lerp:Y,damp:function(t,e,A,i){return Y(t,e,1-Math.exp(-A*i))},pingpong:function(t,e=1){return e-Math.abs(W(t,2*e)-e)},smoothstep:function(t,e,A){return t<=e?0:t>=A?1:(t=(t-e)/(A-e))*t*(3-2*t)},smootherstep:function(t,e,A){return t<=e?0:t>=A?1:(t=(t-e)/(A-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){void 0!==t&&(F=t);let e=F+=1831565813;return e=Math.imul(e^e>>>15,1|e),e^=e+Math.imul(e^e>>>7,61|e),((e^e>>>14)>>>0)/4294967296},degToRad:function(t){return t*G},radToDeg:function(t){return t*O},isPowerOfTwo:J,ceilPowerOfTwo:K,floorPowerOfTwo:Z,setQuaternionFromProperEuler:function(t,e,A,i,n){const r=Math.cos,s=Math.sin,a=r(A/2),o=s(A/2),l=r((e+i)/2),c=s((e+i)/2),h=r((e-i)/2),u=s((e-i)/2),d=r((i-e)/2),g=s((i-e)/2);switch(n){case"XYX":t.set(a*c,o*h,o*u,a*l);break;case"YZY":t.set(o*u,a*c,o*h,a*l);break;case"ZXZ":t.set(o*h,o*u,a*c,a*l);break;case"XZX":t.set(a*c,o*g,o*d,a*l);break;case"YXY":t.set(o*d,a*c,o*g,a*l);break;case"ZYZ":t.set(o*g,o*d,a*c,a*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+n)}},normalize:function(t,e){switch(e.constructor){case Float32Array:return t;case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw new Error("Invalid component type.")}},denormalize:function(t,e){switch(e.constructor){case Float32Array:return t;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}});class X{constructor(t=0,e=0){this.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,A=this.y,i=t.elements;return this.x=i[0]*e+i[3]*A+i[6],this.y=i[1]*e+i[4]*A+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const A=this.length();return this.divideScalar(A||1).multiplyScalar(Math.max(t,Math.min(e,A)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,A=this.y-t.y;return e*e+A*A}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,A){return this.x=t.x+(e.x-t.x)*A,this.y=t.y+(e.y-t.y)*A,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,A){return void 0!==A&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const A=Math.cos(e),i=Math.sin(e),n=this.x-t.x,r=this.y-t.y;return this.x=n*A-r*i+t.x,this.y=n*i+r*A+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class j{constructor(){this.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,A,i,n,r,s,a,o){const l=this.elements;return l[0]=t,l[1]=i,l[2]=s,l[3]=e,l[4]=n,l[5]=a,l[6]=A,l[7]=r,l[8]=o,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,A=t.elements;return e[0]=A[0],e[1]=A[1],e[2]=A[2],e[3]=A[3],e[4]=A[4],e[5]=A[5],e[6]=A[6],e[7]=A[7],e[8]=A[8],this}extractBasis(t,e,A){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),A.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const A=t.elements,i=e.elements,n=this.elements,r=A[0],s=A[3],a=A[6],o=A[1],l=A[4],c=A[7],h=A[2],u=A[5],d=A[8],g=i[0],p=i[3],f=i[6],m=i[1],v=i[4],C=i[7],I=i[2],_=i[5],M=i[8];return n[0]=r*g+s*m+a*I,n[3]=r*p+s*v+a*_,n[6]=r*f+s*C+a*M,n[1]=o*g+l*m+c*I,n[4]=o*p+l*v+c*_,n[7]=o*f+l*C+c*M,n[2]=h*g+u*m+d*I,n[5]=h*p+u*v+d*_,n[8]=h*f+u*C+d*M,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],A=t[1],i=t[2],n=t[3],r=t[4],s=t[5],a=t[6],o=t[7],l=t[8];return e*r*l-e*s*o-A*n*l+A*s*a+i*n*o-i*r*a}invert(){const t=this.elements,e=t[0],A=t[1],i=t[2],n=t[3],r=t[4],s=t[5],a=t[6],o=t[7],l=t[8],c=l*r-s*o,h=s*a-l*n,u=o*n-r*a,d=e*c+A*h+i*u;if(0===d)return this.set(0,0,0,0,0,0,0,0,0);const g=1/d;return t[0]=c*g,t[1]=(i*o-l*A)*g,t[2]=(s*A-i*r)*g,t[3]=h*g,t[4]=(l*e-i*a)*g,t[5]=(i*n-s*e)*g,t[6]=u*g,t[7]=(A*a-o*e)*g,t[8]=(r*e-A*n)*g,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,A,i,n,r,s){const a=Math.cos(n),o=Math.sin(n);return this.set(A*a,A*o,-A*(a*r+o*s)+r+t,-i*o,i*a,-i*(-o*r+a*s)+s+e,0,0,1),this}scale(t,e){const A=this.elements;return A[0]*=t,A[3]*=t,A[6]*=t,A[1]*=e,A[4]*=e,A[7]*=e,this}rotate(t){const e=Math.cos(t),A=Math.sin(t),i=this.elements,n=i[0],r=i[3],s=i[6],a=i[1],o=i[4],l=i[7];return i[0]=e*n+A*a,i[3]=e*r+A*o,i[6]=e*s+A*l,i[1]=-A*n+e*a,i[4]=-A*r+e*o,i[7]=-A*s+e*l,this}translate(t,e){const A=this.elements;return A[0]+=t*A[2],A[3]+=t*A[5],A[6]+=t*A[8],A[1]+=e*A[2],A[4]+=e*A[5],A[7]+=e*A[8],this}equals(t){const e=this.elements,A=t.elements;for(let t=0;t<9;t++)if(e[t]!==A[t])return!1;return!0}fromArray(t,e=0){for(let A=0;A<9;A++)this.elements[A]=t[A+e];return this}toArray(t=[],e=0){const A=this.elements;return t[e]=A[0],t[e+1]=A[1],t[e+2]=A[2],t[e+3]=A[3],t[e+4]=A[4],t[e+5]=A[5],t[e+6]=A[6],t[e+7]=A[7],t[e+8]=A[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}function $(t){for(let e=t.length-1;e>=0;--e)if(t[e]>65535)return!0;return!1}function tt(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function et(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function At(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}const it={[T]:{[L]:et},[L]:{[T]:At}},nt={legacyMode:!0,get workingColorSpace(){return L},set workingColorSpace(t){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(t,e,A){if(this.legacyMode||e===A||!e||!A)return t;if(it[e]&&void 0!==it[e][A]){const i=it[e][A];return t.r=i(t.r),t.g=i(t.g),t.b=i(t.b),t}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(t,e){return this.convert(t,this.workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this.workingColorSpace)}},rt={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},st={r:0,g:0,b:0},at={h:0,s:0,l:0},ot={h:0,s:0,l:0};function lt(t,e,A){return A<0&&(A+=1),A>1&&(A-=1),A<1/6?t+6*(e-t)*A:A<.5?e:A<2/3?t+6*(e-t)*(2/3-A):t}function ct(t,e){return e.r=t.r,e.g=t.g,e.b=t.b,e}class ht{constructor(t,e,A){return this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===e&&void 0===A?this.set(t):this.setRGB(t,e,A)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e="srgb"){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,nt.toWorkingColorSpace(this,e),this}setRGB(t,e,A,i="srgb-linear"){return this.r=t,this.g=e,this.b=A,nt.toWorkingColorSpace(this,i),this}setHSL(t,e,A,i="srgb-linear"){if(t=W(t,1),e=H(e,0,1),A=H(A,0,1),0===e)this.r=this.g=this.b=A;else{const i=A<=.5?A*(1+e):A+e-A*e,n=2*A-i;this.r=lt(n,i,t+1/3),this.g=lt(n,i,t),this.b=lt(n,i,t-1/3)}return nt.toWorkingColorSpace(this,i),this}setStyle(t,e="srgb"){function A(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const n=i[1],r=i[2];switch(n){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,nt.toWorkingColorSpace(this,e),A(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,nt.toWorkingColorSpace(this,e),A(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r)){const i=parseFloat(t[1])/360,n=parseInt(t[2],10)/100,r=parseInt(t[3],10)/100;return A(t[4]),this.setHSL(i,n,r,e)}}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=i[1],A=t.length;if(3===A)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,nt.toWorkingColorSpace(this,e),this;if(6===A)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,nt.toWorkingColorSpace(this,e),this}return t&&t.length>0?this.setColorName(t,e):this}setColorName(t,e="srgb"){const A=rt[t.toLowerCase()];return void 0!==A?this.setHex(A,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=et(t.r),this.g=et(t.g),this.b=et(t.b),this}copyLinearToSRGB(t){return this.r=At(t.r),this.g=At(t.g),this.b=At(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t="srgb"){return nt.fromWorkingColorSpace(ct(this,st),t),H(255*st.r,0,255)<<16^H(255*st.g,0,255)<<8^H(255*st.b,0,255)<<0}getHexString(t="srgb"){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e="srgb-linear"){nt.fromWorkingColorSpace(ct(this,st),e);const A=st.r,i=st.g,n=st.b,r=Math.max(A,i,n),s=Math.min(A,i,n);let a,o;const l=(s+r)/2;if(s===r)a=0,o=0;else{const t=r-s;switch(o=l<=.5?t/(r+s):t/(2-r-s),r){case A:a=(i-n)/t+(i<n?6:0);break;case i:a=(n-A)/t+2;break;case n:a=(A-i)/t+4}a/=6}return t.h=a,t.s=o,t.l=l,t}getRGB(t,e="srgb-linear"){return nt.fromWorkingColorSpace(ct(this,st),e),t.r=st.r,t.g=st.g,t.b=st.b,t}getStyle(t="srgb"){return nt.fromWorkingColorSpace(ct(this,st),t),t!==T?`color(${t} ${st.r} ${st.g} ${st.b})`:`rgb(${255*st.r|0},${255*st.g|0},${255*st.b|0})`}offsetHSL(t,e,A){return this.getHSL(at),at.h+=t,at.s+=e,at.l+=A,this.setHSL(at.h,at.s,at.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,A){return this.r=t.r+(e.r-t.r)*A,this.g=t.g+(e.g-t.g)*A,this.b=t.b+(e.b-t.b)*A,this}lerpHSL(t,e){this.getHSL(at),t.getHSL(ot);const A=Y(at.h,ot.h,e),i=Y(at.s,ot.s,e),n=Y(at.l,ot.l,e);return this.setHSL(A,i,n),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}let ut;ht.NAMES=rt;class dt{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===ut&&(ut=tt("canvas")),ut.width=t.width,ut.height=t.height;const A=ut.getContext("2d");t instanceof ImageData?A.putImageData(t,0,0):A.drawImage(t,0,0,t.width,t.height),e=ut}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const e=tt("canvas");e.width=t.width,e.height=t.height;const A=e.getContext("2d");A.drawImage(t,0,0,t.width,t.height);const i=A.getImageData(0,0,t.width,t.height),n=i.data;for(let t=0;t<n.length;t++)n[t]=255*et(n[t]/255);return A.putImageData(i,0,0),e}if(t.data){const e=t.data.slice(0);for(let t=0;t<e.length;t++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[t]=Math.floor(255*et(e[t]/255)):e[t]=et(e[t]);return{data:e,width:t.width,height:t.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}class gt{constructor(t=null){this.isSource=!0,this.uuid=V(),this.data=t,this.version=0}set needsUpdate(t){!0===t&&this.version++}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.images[this.uuid])return t.images[this.uuid];const A={uuid:this.uuid,url:""},i=this.data;if(null!==i){let t;if(Array.isArray(i)){t=[];for(let e=0,A=i.length;e<A;e++)i[e].isDataTexture?t.push(pt(i[e].image)):t.push(pt(i[e]))}else t=pt(i);A.url=t}return e||(t.images[this.uuid]=A),A}}function pt(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?dt.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let ft=0;class mt extends U{constructor(t=mt.DEFAULT_IMAGE,e=mt.DEFAULT_MAPPING,A=1001,i=1001,n=1006,r=1008,s=1023,a=1009,o=1,l=3e3){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:ft++}),this.uuid=V(),this.name="",this.source=new gt(t),this.mipmaps=[],this.mapping=e,this.wrapS=A,this.wrapT=i,this.magFilter=n,this.minFilter=r,this.anisotropy=o,this.format=s,this.internalFormat=null,this.type=a,this.offset=new X(0,0),this.repeat=new X(1,1),this.center=new X(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new j,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=l,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const A={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(A.userData=this.userData),e||(t.textures[this.uuid]=A),A}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case r:t.x=t.x-Math.floor(t.x);break;case s:t.x=t.x<0?0:1;break;case a:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case r:t.y=t.y-Math.floor(t.y);break;case s:t.y=t.y<0?0:1;break;case a:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}}mt.DEFAULT_IMAGE=null,mt.DEFAULT_MAPPING=300;class vt{constructor(t=0,e=0,A=0,i=1){this.isVector4=!0,this.x=t,this.y=e,this.z=A,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,A,i){return this.x=t,this.y=e,this.z=A,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,A=this.y,i=this.z,n=this.w,r=t.elements;return this.x=r[0]*e+r[4]*A+r[8]*i+r[12]*n,this.y=r[1]*e+r[5]*A+r[9]*i+r[13]*n,this.z=r[2]*e+r[6]*A+r[10]*i+r[14]*n,this.w=r[3]*e+r[7]*A+r[11]*i+r[15]*n,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,A,i,n;const r=.01,s=.1,a=t.elements,o=a[0],l=a[4],c=a[8],h=a[1],u=a[5],d=a[9],g=a[2],p=a[6],f=a[10];if(Math.abs(l-h)<r&&Math.abs(c-g)<r&&Math.abs(d-p)<r){if(Math.abs(l+h)<s&&Math.abs(c+g)<s&&Math.abs(d+p)<s&&Math.abs(o+u+f-3)<s)return this.set(1,0,0,0),this;e=Math.PI;const t=(o+1)/2,a=(u+1)/2,m=(f+1)/2,v=(l+h)/4,C=(c+g)/4,I=(d+p)/4;return t>a&&t>m?t<r?(A=0,i=.707106781,n=.707106781):(A=Math.sqrt(t),i=v/A,n=C/A):a>m?a<r?(A=.707106781,i=0,n=.707106781):(i=Math.sqrt(a),A=v/i,n=I/i):m<r?(A=.707106781,i=.707106781,n=0):(n=Math.sqrt(m),A=C/n,i=I/n),this.set(A,i,n,e),this}let m=Math.sqrt((p-d)*(p-d)+(c-g)*(c-g)+(h-l)*(h-l));return Math.abs(m)<.001&&(m=1),this.x=(p-d)/m,this.y=(c-g)/m,this.z=(h-l)/m,this.w=Math.acos((o+u+f-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const A=this.length();return this.divideScalar(A||1).multiplyScalar(Math.max(t,Math.min(e,A)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,A){return this.x=t.x+(e.x-t.x)*A,this.y=t.y+(e.y-t.y)*A,this.z=t.z+(e.z-t.z)*A,this.w=t.w+(e.w-t.w)*A,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,A){return void 0!==A&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Ct extends U{constructor(t,e,A={}){super(),this.isWebGLRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new vt(0,0,t,e),this.scissorTest=!1,this.viewport=new vt(0,0,t,e);const i={width:t,height:e,depth:1};this.texture=new mt(i,A.mapping,A.wrapS,A.wrapT,A.magFilter,A.minFilter,A.format,A.type,A.anisotropy,A.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==A.generateMipmaps&&A.generateMipmaps,this.texture.internalFormat=void 0!==A.internalFormat?A.internalFormat:null,this.texture.minFilter=void 0!==A.minFilter?A.minFilter:l,this.depthBuffer=void 0===A.depthBuffer||A.depthBuffer,this.stencilBuffer=void 0!==A.stencilBuffer&&A.stencilBuffer,this.depthTexture=void 0!==A.depthTexture?A.depthTexture:null,this.samples=void 0!==A.samples?A.samples:0}setSize(t,e,A=1){this.width===t&&this.height===e&&this.depth===A||(this.width=t,this.height=e,this.depth=A,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=A,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new gt(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class It extends mt{constructor(t=null,e=1,A=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:A,depth:i},this.magFilter=o,this.minFilter=o,this.wrapR=s,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class _t{constructor(t=0,e=0,A=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=A,this._w=i}static slerp(t,e,A,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),A.slerpQuaternions(t,e,i)}static slerpFlat(t,e,A,i,n,r,s){let a=A[i+0],o=A[i+1],l=A[i+2],c=A[i+3];const h=n[r+0],u=n[r+1],d=n[r+2],g=n[r+3];if(0===s)return t[e+0]=a,t[e+1]=o,t[e+2]=l,void(t[e+3]=c);if(1===s)return t[e+0]=h,t[e+1]=u,t[e+2]=d,void(t[e+3]=g);if(c!==g||a!==h||o!==u||l!==d){let t=1-s;const e=a*h+o*u+l*d+c*g,A=e>=0?1:-1,i=1-e*e;if(i>Number.EPSILON){const n=Math.sqrt(i),r=Math.atan2(n,e*A);t=Math.sin(t*r)/n,s=Math.sin(s*r)/n}const n=s*A;if(a=a*t+h*n,o=o*t+u*n,l=l*t+d*n,c=c*t+g*n,t===1-s){const t=1/Math.sqrt(a*a+o*o+l*l+c*c);a*=t,o*=t,l*=t,c*=t}}t[e]=a,t[e+1]=o,t[e+2]=l,t[e+3]=c}static multiplyQuaternionsFlat(t,e,A,i,n,r){const s=A[i],a=A[i+1],o=A[i+2],l=A[i+3],c=n[r],h=n[r+1],u=n[r+2],d=n[r+3];return t[e]=s*d+l*c+a*u-o*h,t[e+1]=a*d+l*h+o*c-s*u,t[e+2]=o*d+l*u+s*h-a*c,t[e+3]=l*d-s*c-a*h-o*u,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,A,i){return this._x=t,this._y=e,this._z=A,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const A=t._x,i=t._y,n=t._z,r=t._order,s=Math.cos,a=Math.sin,o=s(A/2),l=s(i/2),c=s(n/2),h=a(A/2),u=a(i/2),d=a(n/2);switch(r){case"XYZ":this._x=h*l*c+o*u*d,this._y=o*u*c-h*l*d,this._z=o*l*d+h*u*c,this._w=o*l*c-h*u*d;break;case"YXZ":this._x=h*l*c+o*u*d,this._y=o*u*c-h*l*d,this._z=o*l*d-h*u*c,this._w=o*l*c+h*u*d;break;case"ZXY":this._x=h*l*c-o*u*d,this._y=o*u*c+h*l*d,this._z=o*l*d+h*u*c,this._w=o*l*c-h*u*d;break;case"ZYX":this._x=h*l*c-o*u*d,this._y=o*u*c+h*l*d,this._z=o*l*d-h*u*c,this._w=o*l*c+h*u*d;break;case"YZX":this._x=h*l*c+o*u*d,this._y=o*u*c+h*l*d,this._z=o*l*d-h*u*c,this._w=o*l*c-h*u*d;break;case"XZY":this._x=h*l*c-o*u*d,this._y=o*u*c-h*l*d,this._z=o*l*d+h*u*c,this._w=o*l*c+h*u*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const A=e/2,i=Math.sin(A);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(A),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,A=e[0],i=e[4],n=e[8],r=e[1],s=e[5],a=e[9],o=e[2],l=e[6],c=e[10],h=A+s+c;if(h>0){const t=.5/Math.sqrt(h+1);this._w=.25/t,this._x=(l-a)*t,this._y=(n-o)*t,this._z=(r-i)*t}else if(A>s&&A>c){const t=2*Math.sqrt(1+A-s-c);this._w=(l-a)/t,this._x=.25*t,this._y=(i+r)/t,this._z=(n+o)/t}else if(s>c){const t=2*Math.sqrt(1+s-A-c);this._w=(n-o)/t,this._x=(i+r)/t,this._y=.25*t,this._z=(a+l)/t}else{const t=2*Math.sqrt(1+c-A-s);this._w=(r-i)/t,this._x=(n+o)/t,this._y=(a+l)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let A=t.dot(e)+1;return A<Number.EPSILON?(A=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=A):(this._x=0,this._y=-t.z,this._z=t.y,this._w=A)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=A),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(H(this.dot(t),-1,1)))}rotateTowards(t,e){const A=this.angleTo(t);if(0===A)return this;const i=Math.min(1,e/A);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const A=t._x,i=t._y,n=t._z,r=t._w,s=e._x,a=e._y,o=e._z,l=e._w;return this._x=A*l+r*s+i*o-n*a,this._y=i*l+r*a+n*s-A*o,this._z=n*l+r*o+A*a-i*s,this._w=r*l-A*s-i*a-n*o,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const A=this._x,i=this._y,n=this._z,r=this._w;let s=r*t._w+A*t._x+i*t._y+n*t._z;if(s<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,s=-s):this.copy(t),s>=1)return this._w=r,this._x=A,this._y=i,this._z=n,this;const a=1-s*s;if(a<=Number.EPSILON){const t=1-e;return this._w=t*r+e*this._w,this._x=t*A+e*this._x,this._y=t*i+e*this._y,this._z=t*n+e*this._z,this.normalize(),this._onChangeCallback(),this}const o=Math.sqrt(a),l=Math.atan2(o,s),c=Math.sin((1-e)*l)/o,h=Math.sin(e*l)/o;return this._w=r*c+this._w*h,this._x=A*c+this._x*h,this._y=i*c+this._y*h,this._z=n*c+this._z*h,this._onChangeCallback(),this}slerpQuaternions(t,e,A){return this.copy(t).slerp(e,A)}random(){const t=Math.random(),e=Math.sqrt(1-t),A=Math.sqrt(t),i=2*Math.PI*Math.random(),n=2*Math.PI*Math.random();return this.set(e*Math.cos(i),A*Math.sin(n),A*Math.cos(n),e*Math.sin(i))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class Mt{constructor(t=0,e=0,A=0){this.isVector3=!0,this.x=t,this.y=e,this.z=A}set(t,e,A){return void 0===A&&(A=this.z),this.x=t,this.y=e,this.z=A,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(xt.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(xt.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,A=this.y,i=this.z,n=t.elements;return this.x=n[0]*e+n[3]*A+n[6]*i,this.y=n[1]*e+n[4]*A+n[7]*i,this.z=n[2]*e+n[5]*A+n[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,A=this.y,i=this.z,n=t.elements,r=1/(n[3]*e+n[7]*A+n[11]*i+n[15]);return this.x=(n[0]*e+n[4]*A+n[8]*i+n[12])*r,this.y=(n[1]*e+n[5]*A+n[9]*i+n[13])*r,this.z=(n[2]*e+n[6]*A+n[10]*i+n[14])*r,this}applyQuaternion(t){const e=this.x,A=this.y,i=this.z,n=t.x,r=t.y,s=t.z,a=t.w,o=a*e+r*i-s*A,l=a*A+s*e-n*i,c=a*i+n*A-r*e,h=-n*e-r*A-s*i;return this.x=o*a+h*-n+l*-s-c*-r,this.y=l*a+h*-r+c*-n-o*-s,this.z=c*a+h*-s+o*-r-l*-n,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,A=this.y,i=this.z,n=t.elements;return this.x=n[0]*e+n[4]*A+n[8]*i,this.y=n[1]*e+n[5]*A+n[9]*i,this.z=n[2]*e+n[6]*A+n[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const A=this.length();return this.divideScalar(A||1).multiplyScalar(Math.max(t,Math.min(e,A)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,A){return this.x=t.x+(e.x-t.x)*A,this.y=t.y+(e.y-t.y)*A,this.z=t.z+(e.z-t.z)*A,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const A=t.x,i=t.y,n=t.z,r=e.x,s=e.y,a=e.z;return this.x=i*a-n*s,this.y=n*r-A*a,this.z=A*s-i*r,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const A=t.dot(this)/e;return this.copy(t).multiplyScalar(A)}projectOnPlane(t){return yt.copy(this).projectOnVector(t),this.sub(yt)}reflect(t){return this.sub(yt.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const A=this.dot(t)/e;return Math.acos(H(A,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,A=this.y-t.y,i=this.z-t.z;return e*e+A*A+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,A){const i=Math.sin(e)*t;return this.x=i*Math.sin(A),this.y=Math.cos(e)*t,this.z=i*Math.cos(A),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,A){return this.x=t*Math.sin(e),this.y=A,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),A=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=A,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,A){return void 0!==A&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=2*(Math.random()-.5),e=Math.random()*Math.PI*2,A=Math.sqrt(1-t**2);return this.x=A*Math.cos(e),this.y=A*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const yt=new Mt,xt=new _t;class Et{constructor(t=new Mt(1/0,1/0,1/0),e=new Mt(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,A=1/0,i=1/0,n=-1/0,r=-1/0,s=-1/0;for(let a=0,o=t.length;a<o;a+=3){const o=t[a],l=t[a+1],c=t[a+2];o<e&&(e=o),l<A&&(A=l),c<i&&(i=c),o>n&&(n=o),l>r&&(r=l),c>s&&(s=c)}return this.min.set(e,A,i),this.max.set(n,r,s),this}setFromBufferAttribute(t){let e=1/0,A=1/0,i=1/0,n=-1/0,r=-1/0,s=-1/0;for(let a=0,o=t.count;a<o;a++){const o=t.getX(a),l=t.getY(a),c=t.getZ(a);o<e&&(e=o),l<A&&(A=l),c<i&&(i=c),o>n&&(n=o),l>r&&(r=l),c>s&&(s=c)}return this.min.set(e,A,i),this.max.set(n,r,s),this}setFromPoints(t){this.makeEmpty();for(let e=0,A=t.length;e<A;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const A=bt.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(A),this.max.copy(t).add(A),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const A=t.geometry;if(void 0!==A)if(e&&null!=A.attributes&&void 0!==A.attributes.position){const e=A.attributes.position;for(let A=0,i=e.count;A<i;A++)bt.fromBufferAttribute(e,A).applyMatrix4(t.matrixWorld),this.expandByPoint(bt)}else null===A.boundingBox&&A.computeBoundingBox(),St.copy(A.boundingBox),St.applyMatrix4(t.matrixWorld),this.union(St);const i=t.children;for(let t=0,A=i.length;t<A;t++)this.expandByObject(i[t],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,bt),bt.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,A;return t.normal.x>0?(e=t.normal.x*this.min.x,A=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,A=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,A+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,A+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,A+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,A+=t.normal.z*this.min.z),e<=-t.constant&&A>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Rt),Pt.subVectors(this.max,Rt),Bt.subVectors(t.a,Rt),Dt.subVectors(t.b,Rt),Qt.subVectors(t.c,Rt),Tt.subVectors(Dt,Bt),Lt.subVectors(Qt,Dt),Nt.subVectors(Bt,Qt);let e=[0,-Tt.z,Tt.y,0,-Lt.z,Lt.y,0,-Nt.z,Nt.y,Tt.z,0,-Tt.x,Lt.z,0,-Lt.x,Nt.z,0,-Nt.x,-Tt.y,Tt.x,0,-Lt.y,Lt.x,0,-Nt.y,Nt.x,0];return!!zt(e,Bt,Dt,Qt,Pt)&&(e=[1,0,0,0,1,0,0,0,1],!!zt(e,Bt,Dt,Qt,Pt)&&(kt.crossVectors(Tt,Lt),e=[kt.x,kt.y,kt.z],zt(e,Bt,Dt,Qt,Pt)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return bt.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(bt).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(wt[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),wt[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),wt[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),wt[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),wt[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),wt[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),wt[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),wt[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(wt)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const wt=[new Mt,new Mt,new Mt,new Mt,new Mt,new Mt,new Mt,new Mt],bt=new Mt,St=new Et,Bt=new Mt,Dt=new Mt,Qt=new Mt,Tt=new Mt,Lt=new Mt,Nt=new Mt,Rt=new Mt,Pt=new Mt,kt=new Mt,Ut=new Mt;function zt(t,e,A,i,n){for(let r=0,s=t.length-3;r<=s;r+=3){Ut.fromArray(t,r);const s=n.x*Math.abs(Ut.x)+n.y*Math.abs(Ut.y)+n.z*Math.abs(Ut.z),a=e.dot(Ut),o=A.dot(Ut),l=i.dot(Ut);if(Math.max(-Math.max(a,o,l),Math.min(a,o,l))>s)return!1}return!0}const Ft=new Et,Gt=new Mt,Ot=new Mt,Vt=new Mt;class Ht{constructor(t=new Mt,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const A=this.center;void 0!==e?A.copy(e):Ft.setFromPoints(t).getCenter(A);let i=0;for(let e=0,n=t.length;e<n;e++)i=Math.max(i,A.distanceToSquared(t[e]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const A=this.center.distanceToSquared(t);return e.copy(t),A>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){Vt.subVectors(t,this.center);const e=Vt.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),A=.5*(t-this.radius);this.center.add(Vt.multiplyScalar(A/t)),this.radius+=A}return this}union(t){return!0===this.center.equals(t.center)?Ot.set(0,0,1).multiplyScalar(t.radius):Ot.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(Gt.copy(t.center).add(Ot)),this.expandByPoint(Gt.copy(t.center).sub(Ot)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Wt=new Mt,Yt=new Mt,Jt=new Mt,Kt=new Mt,Zt=new Mt,qt=new Mt,Xt=new Mt;class jt{constructor(t=new Mt,e=new Mt(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Wt)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const A=e.dot(this.direction);return A<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(A).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Wt.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Wt.copy(this.direction).multiplyScalar(e).add(this.origin),Wt.distanceToSquared(t))}distanceSqToSegment(t,e,A,i){Yt.copy(t).add(e).multiplyScalar(.5),Jt.copy(e).sub(t).normalize(),Kt.copy(this.origin).sub(Yt);const n=.5*t.distanceTo(e),r=-this.direction.dot(Jt),s=Kt.dot(this.direction),a=-Kt.dot(Jt),o=Kt.lengthSq(),l=Math.abs(1-r*r);let c,h,u,d;if(l>0)if(c=r*a-s,h=r*s-a,d=n*l,c>=0)if(h>=-d)if(h<=d){const t=1/l;c*=t,h*=t,u=c*(c+r*h+2*s)+h*(r*c+h+2*a)+o}else h=n,c=Math.max(0,-(r*h+s)),u=-c*c+h*(h+2*a)+o;else h=-n,c=Math.max(0,-(r*h+s)),u=-c*c+h*(h+2*a)+o;else h<=-d?(c=Math.max(0,-(-r*n+s)),h=c>0?-n:Math.min(Math.max(-n,-a),n),u=-c*c+h*(h+2*a)+o):h<=d?(c=0,h=Math.min(Math.max(-n,-a),n),u=h*(h+2*a)+o):(c=Math.max(0,-(r*n+s)),h=c>0?n:Math.min(Math.max(-n,-a),n),u=-c*c+h*(h+2*a)+o);else h=r>0?-n:n,c=Math.max(0,-(r*h+s)),u=-c*c+h*(h+2*a)+o;return A&&A.copy(this.direction).multiplyScalar(c).add(this.origin),i&&i.copy(Jt).multiplyScalar(h).add(Yt),u}intersectSphere(t,e){Wt.subVectors(t.center,this.origin);const A=Wt.dot(this.direction),i=Wt.dot(Wt)-A*A,n=t.radius*t.radius;if(i>n)return null;const r=Math.sqrt(n-i),s=A-r,a=A+r;return s<0&&a<0?null:s<0?this.at(a,e):this.at(s,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const A=-(this.origin.dot(t.normal)+t.constant)/e;return A>=0?A:null}intersectPlane(t,e){const A=this.distanceToPlane(t);return null===A?null:this.at(A,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;return t.normal.dot(this.direction)*e<0}intersectBox(t,e){let A,i,n,r,s,a;const o=1/this.direction.x,l=1/this.direction.y,c=1/this.direction.z,h=this.origin;return o>=0?(A=(t.min.x-h.x)*o,i=(t.max.x-h.x)*o):(A=(t.max.x-h.x)*o,i=(t.min.x-h.x)*o),l>=0?(n=(t.min.y-h.y)*l,r=(t.max.y-h.y)*l):(n=(t.max.y-h.y)*l,r=(t.min.y-h.y)*l),A>r||n>i?null:((n>A||A!=A)&&(A=n),(r<i||i!=i)&&(i=r),c>=0?(s=(t.min.z-h.z)*c,a=(t.max.z-h.z)*c):(s=(t.max.z-h.z)*c,a=(t.min.z-h.z)*c),A>a||s>i?null:((s>A||A!=A)&&(A=s),(a<i||i!=i)&&(i=a),i<0?null:this.at(A>=0?A:i,e)))}intersectsBox(t){return null!==this.intersectBox(t,Wt)}intersectTriangle(t,e,A,i,n){Zt.subVectors(e,t),qt.subVectors(A,t),Xt.crossVectors(Zt,qt);let r,s=this.direction.dot(Xt);if(s>0){if(i)return null;r=1}else{if(!(s<0))return null;r=-1,s=-s}Kt.subVectors(this.origin,t);const a=r*this.direction.dot(qt.crossVectors(Kt,qt));if(a<0)return null;const o=r*this.direction.dot(Zt.cross(Kt));if(o<0)return null;if(a+o>s)return null;const l=-r*Kt.dot(Xt);return l<0?null:this.at(l/s,n)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class $t{constructor(){this.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,A,i,n,r,s,a,o,l,c,h,u,d,g,p){const f=this.elements;return f[0]=t,f[4]=e,f[8]=A,f[12]=i,f[1]=n,f[5]=r,f[9]=s,f[13]=a,f[2]=o,f[6]=l,f[10]=c,f[14]=h,f[3]=u,f[7]=d,f[11]=g,f[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new $t).fromArray(this.elements)}copy(t){const e=this.elements,A=t.elements;return e[0]=A[0],e[1]=A[1],e[2]=A[2],e[3]=A[3],e[4]=A[4],e[5]=A[5],e[6]=A[6],e[7]=A[7],e[8]=A[8],e[9]=A[9],e[10]=A[10],e[11]=A[11],e[12]=A[12],e[13]=A[13],e[14]=A[14],e[15]=A[15],this}copyPosition(t){const e=this.elements,A=t.elements;return e[12]=A[12],e[13]=A[13],e[14]=A[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,A){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),A.setFromMatrixColumn(this,2),this}makeBasis(t,e,A){return this.set(t.x,e.x,A.x,0,t.y,e.y,A.y,0,t.z,e.z,A.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,A=t.elements,i=1/te.setFromMatrixColumn(t,0).length(),n=1/te.setFromMatrixColumn(t,1).length(),r=1/te.setFromMatrixColumn(t,2).length();return e[0]=A[0]*i,e[1]=A[1]*i,e[2]=A[2]*i,e[3]=0,e[4]=A[4]*n,e[5]=A[5]*n,e[6]=A[6]*n,e[7]=0,e[8]=A[8]*r,e[9]=A[9]*r,e[10]=A[10]*r,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,A=t.x,i=t.y,n=t.z,r=Math.cos(A),s=Math.sin(A),a=Math.cos(i),o=Math.sin(i),l=Math.cos(n),c=Math.sin(n);if("XYZ"===t.order){const t=r*l,A=r*c,i=s*l,n=s*c;e[0]=a*l,e[4]=-a*c,e[8]=o,e[1]=A+i*o,e[5]=t-n*o,e[9]=-s*a,e[2]=n-t*o,e[6]=i+A*o,e[10]=r*a}else if("YXZ"===t.order){const t=a*l,A=a*c,i=o*l,n=o*c;e[0]=t+n*s,e[4]=i*s-A,e[8]=r*o,e[1]=r*c,e[5]=r*l,e[9]=-s,e[2]=A*s-i,e[6]=n+t*s,e[10]=r*a}else if("ZXY"===t.order){const t=a*l,A=a*c,i=o*l,n=o*c;e[0]=t-n*s,e[4]=-r*c,e[8]=i+A*s,e[1]=A+i*s,e[5]=r*l,e[9]=n-t*s,e[2]=-r*o,e[6]=s,e[10]=r*a}else if("ZYX"===t.order){const t=r*l,A=r*c,i=s*l,n=s*c;e[0]=a*l,e[4]=i*o-A,e[8]=t*o+n,e[1]=a*c,e[5]=n*o+t,e[9]=A*o-i,e[2]=-o,e[6]=s*a,e[10]=r*a}else if("YZX"===t.order){const t=r*a,A=r*o,i=s*a,n=s*o;e[0]=a*l,e[4]=n-t*c,e[8]=i*c+A,e[1]=c,e[5]=r*l,e[9]=-s*l,e[2]=-o*l,e[6]=A*c+i,e[10]=t-n*c}else if("XZY"===t.order){const t=r*a,A=r*o,i=s*a,n=s*o;e[0]=a*l,e[4]=-c,e[8]=o*l,e[1]=t*c+n,e[5]=r*l,e[9]=A*c-i,e[2]=i*c-A,e[6]=s*l,e[10]=n*c+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Ae,t,ie)}lookAt(t,e,A){const i=this.elements;return se.subVectors(t,e),0===se.lengthSq()&&(se.z=1),se.normalize(),ne.crossVectors(A,se),0===ne.lengthSq()&&(1===Math.abs(A.z)?se.x+=1e-4:se.z+=1e-4,se.normalize(),ne.crossVectors(A,se)),ne.normalize(),re.crossVectors(se,ne),i[0]=ne.x,i[4]=re.x,i[8]=se.x,i[1]=ne.y,i[5]=re.y,i[9]=se.y,i[2]=ne.z,i[6]=re.z,i[10]=se.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const A=t.elements,i=e.elements,n=this.elements,r=A[0],s=A[4],a=A[8],o=A[12],l=A[1],c=A[5],h=A[9],u=A[13],d=A[2],g=A[6],p=A[10],f=A[14],m=A[3],v=A[7],C=A[11],I=A[15],_=i[0],M=i[4],y=i[8],x=i[12],E=i[1],w=i[5],b=i[9],S=i[13],B=i[2],D=i[6],Q=i[10],T=i[14],L=i[3],N=i[7],R=i[11],P=i[15];return n[0]=r*_+s*E+a*B+o*L,n[4]=r*M+s*w+a*D+o*N,n[8]=r*y+s*b+a*Q+o*R,n[12]=r*x+s*S+a*T+o*P,n[1]=l*_+c*E+h*B+u*L,n[5]=l*M+c*w+h*D+u*N,n[9]=l*y+c*b+h*Q+u*R,n[13]=l*x+c*S+h*T+u*P,n[2]=d*_+g*E+p*B+f*L,n[6]=d*M+g*w+p*D+f*N,n[10]=d*y+g*b+p*Q+f*R,n[14]=d*x+g*S+p*T+f*P,n[3]=m*_+v*E+C*B+I*L,n[7]=m*M+v*w+C*D+I*N,n[11]=m*y+v*b+C*Q+I*R,n[15]=m*x+v*S+C*T+I*P,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],A=t[4],i=t[8],n=t[12],r=t[1],s=t[5],a=t[9],o=t[13],l=t[2],c=t[6],h=t[10],u=t[14];return t[3]*(+n*a*c-i*o*c-n*s*h+A*o*h+i*s*u-A*a*u)+t[7]*(+e*a*u-e*o*h+n*r*h-i*r*u+i*o*l-n*a*l)+t[11]*(+e*o*c-e*s*u-n*r*c+A*r*u+n*s*l-A*o*l)+t[15]*(-i*s*l-e*a*c+e*s*h+i*r*c-A*r*h+A*a*l)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,A){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=A),this}invert(){const t=this.elements,e=t[0],A=t[1],i=t[2],n=t[3],r=t[4],s=t[5],a=t[6],o=t[7],l=t[8],c=t[9],h=t[10],u=t[11],d=t[12],g=t[13],p=t[14],f=t[15],m=c*p*o-g*h*o+g*a*u-s*p*u-c*a*f+s*h*f,v=d*h*o-l*p*o-d*a*u+r*p*u+l*a*f-r*h*f,C=l*g*o-d*c*o+d*s*u-r*g*u-l*s*f+r*c*f,I=d*c*a-l*g*a-d*s*h+r*g*h+l*s*p-r*c*p,_=e*m+A*v+i*C+n*I;if(0===_)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/_;return t[0]=m*M,t[1]=(g*h*n-c*p*n-g*i*u+A*p*u+c*i*f-A*h*f)*M,t[2]=(s*p*n-g*a*n+g*i*o-A*p*o-s*i*f+A*a*f)*M,t[3]=(c*a*n-s*h*n-c*i*o+A*h*o+s*i*u-A*a*u)*M,t[4]=v*M,t[5]=(l*p*n-d*h*n+d*i*u-e*p*u-l*i*f+e*h*f)*M,t[6]=(d*a*n-r*p*n-d*i*o+e*p*o+r*i*f-e*a*f)*M,t[7]=(r*h*n-l*a*n+l*i*o-e*h*o-r*i*u+e*a*u)*M,t[8]=C*M,t[9]=(d*c*n-l*g*n-d*A*u+e*g*u+l*A*f-e*c*f)*M,t[10]=(r*g*n-d*s*n+d*A*o-e*g*o-r*A*f+e*s*f)*M,t[11]=(l*s*n-r*c*n-l*A*o+e*c*o+r*A*u-e*s*u)*M,t[12]=I*M,t[13]=(l*g*i-d*c*i+d*A*h-e*g*h-l*A*p+e*c*p)*M,t[14]=(d*s*i-r*g*i-d*A*a+e*g*a+r*A*p-e*s*p)*M,t[15]=(r*c*i-l*s*i+l*A*a-e*c*a-r*A*h+e*s*h)*M,this}scale(t){const e=this.elements,A=t.x,i=t.y,n=t.z;return e[0]*=A,e[4]*=i,e[8]*=n,e[1]*=A,e[5]*=i,e[9]*=n,e[2]*=A,e[6]*=i,e[10]*=n,e[3]*=A,e[7]*=i,e[11]*=n,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],A=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,A,i))}makeTranslation(t,e,A){return this.set(1,0,0,t,0,1,0,e,0,0,1,A,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),A=Math.sin(t);return this.set(1,0,0,0,0,e,-A,0,0,A,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),A=Math.sin(t);return this.set(e,0,A,0,0,1,0,0,-A,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),A=Math.sin(t);return this.set(e,-A,0,0,A,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const A=Math.cos(e),i=Math.sin(e),n=1-A,r=t.x,s=t.y,a=t.z,o=n*r,l=n*s;return this.set(o*r+A,o*s-i*a,o*a+i*s,0,o*s+i*a,l*s+A,l*a-i*r,0,o*a-i*s,l*a+i*r,n*a*a+A,0,0,0,0,1),this}makeScale(t,e,A){return this.set(t,0,0,0,0,e,0,0,0,0,A,0,0,0,0,1),this}makeShear(t,e,A,i,n,r){return this.set(1,A,n,0,t,1,r,0,e,i,1,0,0,0,0,1),this}compose(t,e,A){const i=this.elements,n=e._x,r=e._y,s=e._z,a=e._w,o=n+n,l=r+r,c=s+s,h=n*o,u=n*l,d=n*c,g=r*l,p=r*c,f=s*c,m=a*o,v=a*l,C=a*c,I=A.x,_=A.y,M=A.z;return i[0]=(1-(g+f))*I,i[1]=(u+C)*I,i[2]=(d-v)*I,i[3]=0,i[4]=(u-C)*_,i[5]=(1-(h+f))*_,i[6]=(p+m)*_,i[7]=0,i[8]=(d+v)*M,i[9]=(p-m)*M,i[10]=(1-(h+g))*M,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,A){const i=this.elements;let n=te.set(i[0],i[1],i[2]).length();const r=te.set(i[4],i[5],i[6]).length(),s=te.set(i[8],i[9],i[10]).length();this.determinant()<0&&(n=-n),t.x=i[12],t.y=i[13],t.z=i[14],ee.copy(this);const a=1/n,o=1/r,l=1/s;return ee.elements[0]*=a,ee.elements[1]*=a,ee.elements[2]*=a,ee.elements[4]*=o,ee.elements[5]*=o,ee.elements[6]*=o,ee.elements[8]*=l,ee.elements[9]*=l,ee.elements[10]*=l,e.setFromRotationMatrix(ee),A.x=n,A.y=r,A.z=s,this}makePerspective(t,e,A,i,n,r){void 0===r&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements,a=2*n/(e-t),o=2*n/(A-i),l=(e+t)/(e-t),c=(A+i)/(A-i),h=-(r+n)/(r-n),u=-2*r*n/(r-n);return s[0]=a,s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=o,s[9]=c,s[13]=0,s[2]=0,s[6]=0,s[10]=h,s[14]=u,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(t,e,A,i,n,r){const s=this.elements,a=1/(e-t),o=1/(A-i),l=1/(r-n),c=(e+t)*a,h=(A+i)*o,u=(r+n)*l;return s[0]=2*a,s[4]=0,s[8]=0,s[12]=-c,s[1]=0,s[5]=2*o,s[9]=0,s[13]=-h,s[2]=0,s[6]=0,s[10]=-2*l,s[14]=-u,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(t){const e=this.elements,A=t.elements;for(let t=0;t<16;t++)if(e[t]!==A[t])return!1;return!0}fromArray(t,e=0){for(let A=0;A<16;A++)this.elements[A]=t[A+e];return this}toArray(t=[],e=0){const A=this.elements;return t[e]=A[0],t[e+1]=A[1],t[e+2]=A[2],t[e+3]=A[3],t[e+4]=A[4],t[e+5]=A[5],t[e+6]=A[6],t[e+7]=A[7],t[e+8]=A[8],t[e+9]=A[9],t[e+10]=A[10],t[e+11]=A[11],t[e+12]=A[12],t[e+13]=A[13],t[e+14]=A[14],t[e+15]=A[15],t}}const te=new Mt,ee=new $t,Ae=new Mt(0,0,0),ie=new Mt(1,1,1),ne=new Mt,re=new Mt,se=new Mt,ae=new $t,oe=new _t;class le{constructor(t=0,e=0,A=0,i=le.DefaultOrder){this.isEuler=!0,this._x=t,this._y=e,this._z=A,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,A,i=this._order){return this._x=t,this._y=e,this._z=A,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,A=!0){const i=t.elements,n=i[0],r=i[4],s=i[8],a=i[1],o=i[5],l=i[9],c=i[2],h=i[6],u=i[10];switch(e){case"XYZ":this._y=Math.asin(H(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-l,u),this._z=Math.atan2(-r,n)):(this._x=Math.atan2(h,o),this._z=0);break;case"YXZ":this._x=Math.asin(-H(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(s,u),this._z=Math.atan2(a,o)):(this._y=Math.atan2(-c,n),this._z=0);break;case"ZXY":this._x=Math.asin(H(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-c,u),this._z=Math.atan2(-r,o)):(this._y=0,this._z=Math.atan2(a,n));break;case"ZYX":this._y=Math.asin(-H(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(h,u),this._z=Math.atan2(a,n)):(this._x=0,this._z=Math.atan2(-r,o));break;case"YZX":this._z=Math.asin(H(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,o),this._y=Math.atan2(-c,n)):(this._x=0,this._y=Math.atan2(s,u));break;case"XZY":this._z=Math.asin(-H(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(h,o),this._y=Math.atan2(s,n)):(this._x=Math.atan2(-l,u),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===A&&this._onChangeCallback(),this}setFromQuaternion(t,e,A){return ae.makeRotationFromQuaternion(t),this.setFromRotationMatrix(ae,e,A)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return oe.setFromEuler(this),this.setFromQuaternion(oe,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}le.DefaultOrder="XYZ",le.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class ce{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}isEnabled(t){return 0!=(this.mask&(1<<t|0))}}let he=0;const ue=new Mt,de=new _t,ge=new $t,pe=new Mt,fe=new Mt,me=new Mt,ve=new _t,Ce=new Mt(1,0,0),Ie=new Mt(0,1,0),_e=new Mt(0,0,1),Me={type:"added"},ye={type:"removed"};class xe extends U{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:he++}),this.uuid=V(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=xe.DefaultUp.clone();const t=new Mt,e=new le,A=new _t,i=new Mt(1,1,1);e._onChange((function(){A.setFromEuler(e,!1)})),A._onChange((function(){e.setFromQuaternion(A,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:A},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new $t},normalMatrix:{value:new j}}),this.matrix=new $t,this.matrixWorld=new $t,this.matrixAutoUpdate=xe.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ce,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return de.setFromAxisAngle(t,e),this.quaternion.multiply(de),this}rotateOnWorldAxis(t,e){return de.setFromAxisAngle(t,e),this.quaternion.premultiply(de),this}rotateX(t){return this.rotateOnAxis(Ce,t)}rotateY(t){return this.rotateOnAxis(Ie,t)}rotateZ(t){return this.rotateOnAxis(_e,t)}translateOnAxis(t,e){return ue.copy(t).applyQuaternion(this.quaternion),this.position.add(ue.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Ce,t)}translateY(t){return this.translateOnAxis(Ie,t)}translateZ(t){return this.translateOnAxis(_e,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(ge.copy(this.matrixWorld).invert())}lookAt(t,e,A){t.isVector3?pe.copy(t):pe.set(t,e,A);const i=this.parent;this.updateWorldMatrix(!0,!1),fe.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ge.lookAt(fe,pe,this.up):ge.lookAt(pe,fe,this.up),this.quaternion.setFromRotationMatrix(ge),i&&(ge.extractRotation(i.matrixWorld),de.setFromRotationMatrix(ge),this.quaternion.premultiply(de.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(Me)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(ye)),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(ye)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),ge.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),ge.multiply(t.parent.matrixWorld)),t.applyMatrix4(ge),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let A=0,i=this.children.length;A<i;A++){const i=this.children[A].getObjectByProperty(t,e);if(void 0!==i)return i}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(fe,t,me),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(fe,ve,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let A=0,i=e.length;A<i;A++)e[A].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let A=0,i=e.length;A<i;A++)e[A].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let A=0,i=e.length;A<i;A++)e[A].updateMatrixWorld(t)}updateWorldMatrix(t,e){const A=this.parent;if(!0===t&&null!==A&&A.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,A=t.length;e<A;e++)t[e].updateWorldMatrix(!1,!0)}}toJSON(t){const e=void 0===t||"string"==typeof t,A={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},A.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};function n(e,A){return void 0===e[A.uuid]&&(e[A.uuid]=A.toJSON(t)),A.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=n(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const A=e.shapes;if(Array.isArray(A))for(let e=0,i=A.length;e<i;e++){const i=A[e];n(t.shapes,i)}else n(t.shapes,A)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(n(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let A=0,i=this.material.length;A<i;A++)e.push(n(t.materials,this.material[A]));i.material=e}else i.material=n(t.materials,this.material);if(this.children.length>0){i.children=[];for(let e=0;e<this.children.length;e++)i.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let e=0;e<this.animations.length;e++){const A=this.animations[e];i.animations.push(n(t.animations,A))}}if(e){const e=r(t.geometries),i=r(t.materials),n=r(t.textures),s=r(t.images),a=r(t.shapes),o=r(t.skeletons),l=r(t.animations),c=r(t.nodes);e.length>0&&(A.geometries=e),i.length>0&&(A.materials=i),n.length>0&&(A.textures=n),s.length>0&&(A.images=s),a.length>0&&(A.shapes=a),o.length>0&&(A.skeletons=o),l.length>0&&(A.animations=l),c.length>0&&(A.nodes=c)}return A.object=i,A;function r(t){const e=[];for(const A in t){const i=t[A];delete i.metadata,e.push(i)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const A=t.children[e];this.add(A.clone())}return this}}xe.DefaultUp=new Mt(0,1,0),xe.DefaultMatrixAutoUpdate=!0;const Ee=new Mt,we=new Mt,be=new Mt,Se=new Mt,Be=new Mt,De=new Mt,Qe=new Mt,Te=new Mt,Le=new Mt,Ne=new Mt;class Re{constructor(t=new Mt,e=new Mt,A=new Mt){this.a=t,this.b=e,this.c=A}static getNormal(t,e,A,i){i.subVectors(A,e),Ee.subVectors(t,e),i.cross(Ee);const n=i.lengthSq();return n>0?i.multiplyScalar(1/Math.sqrt(n)):i.set(0,0,0)}static getBarycoord(t,e,A,i,n){Ee.subVectors(i,e),we.subVectors(A,e),be.subVectors(t,e);const r=Ee.dot(Ee),s=Ee.dot(we),a=Ee.dot(be),o=we.dot(we),l=we.dot(be),c=r*o-s*s;if(0===c)return n.set(-2,-1,-1);const h=1/c,u=(o*a-s*l)*h,d=(r*l-s*a)*h;return n.set(1-u-d,d,u)}static containsPoint(t,e,A,i){return this.getBarycoord(t,e,A,i,Se),Se.x>=0&&Se.y>=0&&Se.x+Se.y<=1}static getUV(t,e,A,i,n,r,s,a){return this.getBarycoord(t,e,A,i,Se),a.set(0,0),a.addScaledVector(n,Se.x),a.addScaledVector(r,Se.y),a.addScaledVector(s,Se.z),a}static isFrontFacing(t,e,A,i){return Ee.subVectors(A,e),we.subVectors(t,e),Ee.cross(we).dot(i)<0}set(t,e,A){return this.a.copy(t),this.b.copy(e),this.c.copy(A),this}setFromPointsAndIndices(t,e,A,i){return this.a.copy(t[e]),this.b.copy(t[A]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,A,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,A),this.c.fromBufferAttribute(t,i),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Ee.subVectors(this.c,this.b),we.subVectors(this.a,this.b),.5*Ee.cross(we).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Re.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Re.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,A,i,n){return Re.getUV(t,this.a,this.b,this.c,e,A,i,n)}containsPoint(t){return Re.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Re.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const A=this.a,i=this.b,n=this.c;let r,s;Be.subVectors(i,A),De.subVectors(n,A),Te.subVectors(t,A);const a=Be.dot(Te),o=De.dot(Te);if(a<=0&&o<=0)return e.copy(A);Le.subVectors(t,i);const l=Be.dot(Le),c=De.dot(Le);if(l>=0&&c<=l)return e.copy(i);const h=a*c-l*o;if(h<=0&&a>=0&&l<=0)return r=a/(a-l),e.copy(A).addScaledVector(Be,r);Ne.subVectors(t,n);const u=Be.dot(Ne),d=De.dot(Ne);if(d>=0&&u<=d)return e.copy(n);const g=u*o-a*d;if(g<=0&&o>=0&&d<=0)return s=o/(o-d),e.copy(A).addScaledVector(De,s);const p=l*d-u*c;if(p<=0&&c-l>=0&&u-d>=0)return Qe.subVectors(n,i),s=(c-l)/(c-l+(u-d)),e.copy(i).addScaledVector(Qe,s);const f=1/(p+g+h);return r=g*f,s=h*f,e.copy(A).addScaledVector(Be,r).addScaledVector(De,s)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let Pe=0;class ke extends U{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Pe++}),this.uuid=V(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=e,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=N,this.stencilZFail=N,this.stencilZPass=N,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const A=t[e];if(void 0===A){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===A;continue}const i=this[e];void 0!==i?i&&i.isColor?i.set(A):i&&i.isVector3&&A&&A.isVector3?i.copy(A):this[e]=A:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}}toJSON(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const A={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function i(t){const e=[];for(const A in t){const i=t[A];delete i.metadata,e.push(i)}return e}if(A.uuid=this.uuid,A.type=this.type,""!==this.name&&(A.name=this.name),this.color&&this.color.isColor&&(A.color=this.color.getHex()),void 0!==this.roughness&&(A.roughness=this.roughness),void 0!==this.metalness&&(A.metalness=this.metalness),void 0!==this.sheen&&(A.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(A.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(A.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(A.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(A.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(A.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(A.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(A.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(A.shininess=this.shininess),void 0!==this.clearcoat&&(A.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(A.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(A.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(A.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(A.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,A.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(A.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(A.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(A.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(A.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(A.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(A.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(A.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(A.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(A.lightMap=this.lightMap.toJSON(t).uuid,A.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(A.aoMap=this.aoMap.toJSON(t).uuid,A.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(A.bumpMap=this.bumpMap.toJSON(t).uuid,A.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(A.normalMap=this.normalMap.toJSON(t).uuid,A.normalMapType=this.normalMapType,A.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(A.displacementMap=this.displacementMap.toJSON(t).uuid,A.displacementScale=this.displacementScale,A.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(A.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(A.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(A.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(A.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(A.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(A.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(A.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(A.combine=this.combine)),void 0!==this.envMapIntensity&&(A.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(A.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(A.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(A.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(A.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(A.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(A.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(A.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&(A.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(A.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(A.size=this.size),null!==this.shadowSide&&(A.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(A.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(A.blending=this.blending),0!==this.side&&(A.side=this.side),this.vertexColors&&(A.vertexColors=!0),this.opacity<1&&(A.opacity=this.opacity),!0===this.transparent&&(A.transparent=this.transparent),A.depthFunc=this.depthFunc,A.depthTest=this.depthTest,A.depthWrite=this.depthWrite,A.colorWrite=this.colorWrite,A.stencilWrite=this.stencilWrite,A.stencilWriteMask=this.stencilWriteMask,A.stencilFunc=this.stencilFunc,A.stencilRef=this.stencilRef,A.stencilFuncMask=this.stencilFuncMask,A.stencilFail=this.stencilFail,A.stencilZFail=this.stencilZFail,A.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(A.rotation=this.rotation),!0===this.polygonOffset&&(A.polygonOffset=!0),0!==this.polygonOffsetFactor&&(A.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(A.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(A.linewidth=this.linewidth),void 0!==this.dashSize&&(A.dashSize=this.dashSize),void 0!==this.gapSize&&(A.gapSize=this.gapSize),void 0!==this.scale&&(A.scale=this.scale),!0===this.dithering&&(A.dithering=!0),this.alphaTest>0&&(A.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(A.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(A.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(A.wireframe=this.wireframe),this.wireframeLinewidth>1&&(A.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(A.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(A.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(A.flatShading=this.flatShading),!1===this.visible&&(A.visible=!1),!1===this.toneMapped&&(A.toneMapped=!1),!1===this.fog&&(A.fog=!1),"{}"!==JSON.stringify(this.userData)&&(A.userData=this.userData),e){const e=i(t.textures),n=i(t.images);e.length>0&&(A.textures=e),n.length>0&&(A.images=n)}return A}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let A=null;if(null!==e){const t=e.length;A=new Array(t);for(let i=0;i!==t;++i)A[i]=e[i].clone()}return this.clippingPlanes=A,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}get vertexTangents(){return console.warn("THREE."+this.type+": .vertexTangents has been removed."),!1}set vertexTangents(t){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}ke.fromType=function(){return null};class Ue extends ke{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new ht(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const ze=new Mt,Fe=new X;class Ge{constructor(t,e,A){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===A,this.usage=R,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,A){t*=this.itemSize,A*=e.itemSize;for(let i=0,n=this.itemSize;i<n;i++)this.array[t+i]=e.array[A+i];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){const e=this.array;let A=0;for(let i=0,n=t.length;i<n;i++){let n=t[i];void 0===n&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),n=new ht),e[A++]=n.r,e[A++]=n.g,e[A++]=n.b}return this}copyVector2sArray(t){const e=this.array;let A=0;for(let i=0,n=t.length;i<n;i++){let n=t[i];void 0===n&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),n=new X),e[A++]=n.x,e[A++]=n.y}return this}copyVector3sArray(t){const e=this.array;let A=0;for(let i=0,n=t.length;i<n;i++){let n=t[i];void 0===n&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),n=new Mt),e[A++]=n.x,e[A++]=n.y,e[A++]=n.z}return this}copyVector4sArray(t){const e=this.array;let A=0;for(let i=0,n=t.length;i<n;i++){let n=t[i];void 0===n&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),n=new vt),e[A++]=n.x,e[A++]=n.y,e[A++]=n.z,e[A++]=n.w}return this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,A=this.count;e<A;e++)Fe.fromBufferAttribute(this,e),Fe.applyMatrix3(t),this.setXY(e,Fe.x,Fe.y);else if(3===this.itemSize)for(let e=0,A=this.count;e<A;e++)ze.fromBufferAttribute(this,e),ze.applyMatrix3(t),this.setXYZ(e,ze.x,ze.y,ze.z);return this}applyMatrix4(t){for(let e=0,A=this.count;e<A;e++)ze.fromBufferAttribute(this,e),ze.applyMatrix4(t),this.setXYZ(e,ze.x,ze.y,ze.z);return this}applyNormalMatrix(t){for(let e=0,A=this.count;e<A;e++)ze.fromBufferAttribute(this,e),ze.applyNormalMatrix(t),this.setXYZ(e,ze.x,ze.y,ze.z);return this}transformDirection(t){for(let e=0,A=this.count;e<A;e++)ze.fromBufferAttribute(this,e),ze.transformDirection(t),this.setXYZ(e,ze.x,ze.y,ze.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){return this.array[t*this.itemSize]}setX(t,e){return this.array[t*this.itemSize]=e,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,e){return this.array[t*this.itemSize+1]=e,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,e){return this.array[t*this.itemSize+2]=e,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,e){return this.array[t*this.itemSize+3]=e,this}setXY(t,e,A){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=A,this}setXYZ(t,e,A,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=A,this.array[t+2]=i,this}setXYZW(t,e,A,i,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=A,this.array[t+2]=i,this.array[t+3]=n,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==R&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}}class Oe extends Ge{constructor(t,e,A){super(new Uint16Array(t),e,A)}}class Ve extends Ge{constructor(t,e,A){super(new Uint32Array(t),e,A)}}class He extends Ge{constructor(t,e,A){super(new Float32Array(t),e,A)}}let We=0;const Ye=new $t,Je=new xe,Ke=new Mt,Ze=new Et,qe=new Et,Xe=new Mt;class je extends U{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:We++}),this.uuid=V(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new($(t)?Ve:Oe)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,A=0){this.groups.push({start:t,count:e,materialIndex:A})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const A=this.attributes.normal;if(void 0!==A){const e=(new j).getNormalMatrix(t);A.applyNormalMatrix(e),A.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return Ye.makeRotationFromQuaternion(t),this.applyMatrix4(Ye),this}rotateX(t){return Ye.makeRotationX(t),this.applyMatrix4(Ye),this}rotateY(t){return Ye.makeRotationY(t),this.applyMatrix4(Ye),this}rotateZ(t){return Ye.makeRotationZ(t),this.applyMatrix4(Ye),this}translate(t,e,A){return Ye.makeTranslation(t,e,A),this.applyMatrix4(Ye),this}scale(t,e,A){return Ye.makeScale(t,e,A),this.applyMatrix4(Ye),this}lookAt(t){return Je.lookAt(t),Je.updateMatrix(),this.applyMatrix4(Je.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ke).negate(),this.translate(Ke.x,Ke.y,Ke.z),this}setFromPoints(t){const e=[];for(let A=0,i=t.length;A<i;A++){const i=t[A];e.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new He(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Et);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new Mt(-1/0,-1/0,-1/0),new Mt(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,A=e.length;t<A;t++){const A=e[t];Ze.setFromBufferAttribute(A),this.morphTargetsRelative?(Xe.addVectors(this.boundingBox.min,Ze.min),this.boundingBox.expandByPoint(Xe),Xe.addVectors(this.boundingBox.max,Ze.max),this.boundingBox.expandByPoint(Xe)):(this.boundingBox.expandByPoint(Ze.min),this.boundingBox.expandByPoint(Ze.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Ht);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new Mt,1/0);if(t){const A=this.boundingSphere.center;if(Ze.setFromBufferAttribute(t),e)for(let t=0,A=e.length;t<A;t++){const A=e[t];qe.setFromBufferAttribute(A),this.morphTargetsRelative?(Xe.addVectors(Ze.min,qe.min),Ze.expandByPoint(Xe),Xe.addVectors(Ze.max,qe.max),Ze.expandByPoint(Xe)):(Ze.expandByPoint(qe.min),Ze.expandByPoint(qe.max))}Ze.getCenter(A);let i=0;for(let e=0,n=t.count;e<n;e++)Xe.fromBufferAttribute(t,e),i=Math.max(i,A.distanceToSquared(Xe));if(e)for(let n=0,r=e.length;n<r;n++){const r=e[n],s=this.morphTargetsRelative;for(let e=0,n=r.count;e<n;e++)Xe.fromBufferAttribute(r,e),s&&(Ke.fromBufferAttribute(t,e),Xe.add(Ke)),i=Math.max(i,A.distanceToSquared(Xe))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const A=t.array,i=e.position.array,n=e.normal.array,r=e.uv.array,s=i.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Ge(new Float32Array(4*s),4));const a=this.getAttribute("tangent").array,o=[],l=[];for(let t=0;t<s;t++)o[t]=new Mt,l[t]=new Mt;const c=new Mt,h=new Mt,u=new Mt,d=new X,g=new X,p=new X,f=new Mt,m=new Mt;function v(t,e,A){c.fromArray(i,3*t),h.fromArray(i,3*e),u.fromArray(i,3*A),d.fromArray(r,2*t),g.fromArray(r,2*e),p.fromArray(r,2*A),h.sub(c),u.sub(c),g.sub(d),p.sub(d);const n=1/(g.x*p.y-p.x*g.y);isFinite(n)&&(f.copy(h).multiplyScalar(p.y).addScaledVector(u,-g.y).multiplyScalar(n),m.copy(u).multiplyScalar(g.x).addScaledVector(h,-p.x).multiplyScalar(n),o[t].add(f),o[e].add(f),o[A].add(f),l[t].add(m),l[e].add(m),l[A].add(m))}let C=this.groups;0===C.length&&(C=[{start:0,count:A.length}]);for(let t=0,e=C.length;t<e;++t){const e=C[t],i=e.start;for(let t=i,n=i+e.count;t<n;t+=3)v(A[t+0],A[t+1],A[t+2])}const I=new Mt,_=new Mt,M=new Mt,y=new Mt;function x(t){M.fromArray(n,3*t),y.copy(M);const e=o[t];I.copy(e),I.sub(M.multiplyScalar(M.dot(e))).normalize(),_.crossVectors(y,e);const A=_.dot(l[t])<0?-1:1;a[4*t]=I.x,a[4*t+1]=I.y,a[4*t+2]=I.z,a[4*t+3]=A}for(let t=0,e=C.length;t<e;++t){const e=C[t],i=e.start;for(let t=i,n=i+e.count;t<n;t+=3)x(A[t+0]),x(A[t+1]),x(A[t+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let A=this.getAttribute("normal");if(void 0===A)A=new Ge(new Float32Array(3*e.count),3),this.setAttribute("normal",A);else for(let t=0,e=A.count;t<e;t++)A.setXYZ(t,0,0,0);const i=new Mt,n=new Mt,r=new Mt,s=new Mt,a=new Mt,o=new Mt,l=new Mt,c=new Mt;if(t)for(let h=0,u=t.count;h<u;h+=3){const u=t.getX(h+0),d=t.getX(h+1),g=t.getX(h+2);i.fromBufferAttribute(e,u),n.fromBufferAttribute(e,d),r.fromBufferAttribute(e,g),l.subVectors(r,n),c.subVectors(i,n),l.cross(c),s.fromBufferAttribute(A,u),a.fromBufferAttribute(A,d),o.fromBufferAttribute(A,g),s.add(l),a.add(l),o.add(l),A.setXYZ(u,s.x,s.y,s.z),A.setXYZ(d,a.x,a.y,a.z),A.setXYZ(g,o.x,o.y,o.z)}else for(let t=0,s=e.count;t<s;t+=3)i.fromBufferAttribute(e,t+0),n.fromBufferAttribute(e,t+1),r.fromBufferAttribute(e,t+2),l.subVectors(r,n),c.subVectors(i,n),l.cross(c),A.setXYZ(t+0,l.x,l.y,l.z),A.setXYZ(t+1,l.x,l.y,l.z),A.setXYZ(t+2,l.x,l.y,l.z);this.normalizeNormals(),A.needsUpdate=!0}}merge(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const A=this.attributes;for(const i in A){if(void 0===t.attributes[i])continue;const n=A[i].array,r=t.attributes[i],s=r.array,a=r.itemSize*e,o=Math.min(s.length,n.length-a);for(let t=0,e=a;t<o;t++,e++)n[e]=s[t]}return this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,A=t.count;e<A;e++)Xe.fromBufferAttribute(t,e),Xe.normalize(),t.setXYZ(e,Xe.x,Xe.y,Xe.z)}toNonIndexed(){function t(t,e){const A=t.array,i=t.itemSize,n=t.normalized,r=new A.constructor(e.length*i);let s=0,a=0;for(let n=0,o=e.length;n<o;n++){s=t.isInterleavedBufferAttribute?e[n]*t.data.stride+t.offset:e[n]*i;for(let t=0;t<i;t++)r[a++]=A[s++]}return new Ge(r,i,n)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new je,A=this.index.array,i=this.attributes;for(const n in i){const r=t(i[n],A);e.setAttribute(n,r)}const n=this.morphAttributes;for(const i in n){const r=[],s=n[i];for(let e=0,i=s.length;e<i;e++){const i=t(s[e],A);r.push(i)}e.morphAttributes[i]=r}e.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let t=0,A=r.length;t<A;t++){const A=r[t];e.addGroup(A.start,A.count,A.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const A in e)void 0!==e[A]&&(t[A]=e[A]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const A=this.attributes;for(const e in A){const i=A[e];t.data.attributes[e]=i.toJSON(t.data)}const i={};let n=!1;for(const e in this.morphAttributes){const A=this.morphAttributes[e],r=[];for(let e=0,i=A.length;e<i;e++){const i=A[e];r.push(i.toJSON(t.data))}r.length>0&&(i[e]=r,n=!0)}n&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(t.data.groups=JSON.parse(JSON.stringify(r)));const s=this.boundingSphere;return null!==s&&(t.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const A=t.index;null!==A&&this.setIndex(A.clone(e));const i=t.attributes;for(const t in i){const A=i[t];this.setAttribute(t,A.clone(e))}const n=t.morphAttributes;for(const t in n){const A=[],i=n[t];for(let t=0,n=i.length;t<n;t++)A.push(i[t].clone(e));this.morphAttributes[t]=A}this.morphTargetsRelative=t.morphTargetsRelative;const r=t.groups;for(let t=0,e=r.length;t<e;t++){const e=r[t];this.addGroup(e.start,e.count,e.materialIndex)}const s=t.boundingBox;null!==s&&(this.boundingBox=s.clone());const a=t.boundingSphere;return null!==a&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,void 0!==t.parameters&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const $e=new $t,tA=new jt,eA=new Ht,AA=new Mt,iA=new Mt,nA=new Mt,rA=new Mt,sA=new Mt,aA=new Mt,oA=new Mt,lA=new Mt,cA=new Mt,hA=new X,uA=new X,dA=new X,gA=new Mt,pA=new Mt;class fA extends xe{constructor(t=new je,e=new Ue){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const A=t[e[0]];if(void 0!==A){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=A.length;t<e;t++){const e=A[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}raycast(t,e){const A=this.geometry,i=this.material,n=this.matrixWorld;if(void 0===i)return;if(null===A.boundingSphere&&A.computeBoundingSphere(),eA.copy(A.boundingSphere),eA.applyMatrix4(n),!1===t.ray.intersectsSphere(eA))return;if($e.copy(n).invert(),tA.copy(t.ray).applyMatrix4($e),null!==A.boundingBox&&!1===tA.intersectsBox(A.boundingBox))return;let r;const s=A.index,a=A.attributes.position,o=A.morphAttributes.position,l=A.morphTargetsRelative,c=A.attributes.uv,h=A.attributes.uv2,u=A.groups,d=A.drawRange;if(null!==s)if(Array.isArray(i))for(let A=0,n=u.length;A<n;A++){const n=u[A],g=i[n.materialIndex];for(let A=Math.max(n.start,d.start),i=Math.min(s.count,Math.min(n.start+n.count,d.start+d.count));A<i;A+=3){const i=s.getX(A),u=s.getX(A+1),d=s.getX(A+2);r=mA(this,g,t,tA,a,o,l,c,h,i,u,d),r&&(r.faceIndex=Math.floor(A/3),r.face.materialIndex=n.materialIndex,e.push(r))}}else{for(let A=Math.max(0,d.start),n=Math.min(s.count,d.start+d.count);A<n;A+=3){const n=s.getX(A),u=s.getX(A+1),d=s.getX(A+2);r=mA(this,i,t,tA,a,o,l,c,h,n,u,d),r&&(r.faceIndex=Math.floor(A/3),e.push(r))}}else if(void 0!==a)if(Array.isArray(i))for(let A=0,n=u.length;A<n;A++){const n=u[A],s=i[n.materialIndex];for(let A=Math.max(n.start,d.start),i=Math.min(a.count,Math.min(n.start+n.count,d.start+d.count));A<i;A+=3){r=mA(this,s,t,tA,a,o,l,c,h,A,A+1,A+2),r&&(r.faceIndex=Math.floor(A/3),r.face.materialIndex=n.materialIndex,e.push(r))}}else{for(let A=Math.max(0,d.start),n=Math.min(a.count,d.start+d.count);A<n;A+=3){r=mA(this,i,t,tA,a,o,l,c,h,A,A+1,A+2),r&&(r.faceIndex=Math.floor(A/3),e.push(r))}}}}function mA(t,e,A,i,n,r,s,a,o,l,c,h){AA.fromBufferAttribute(n,l),iA.fromBufferAttribute(n,c),nA.fromBufferAttribute(n,h);const u=t.morphTargetInfluences;if(r&&u){oA.set(0,0,0),lA.set(0,0,0),cA.set(0,0,0);for(let t=0,e=r.length;t<e;t++){const e=u[t],A=r[t];0!==e&&(rA.fromBufferAttribute(A,l),sA.fromBufferAttribute(A,c),aA.fromBufferAttribute(A,h),s?(oA.addScaledVector(rA,e),lA.addScaledVector(sA,e),cA.addScaledVector(aA,e)):(oA.addScaledVector(rA.sub(AA),e),lA.addScaledVector(sA.sub(iA),e),cA.addScaledVector(aA.sub(nA),e)))}AA.add(oA),iA.add(lA),nA.add(cA)}t.isSkinnedMesh&&(t.boneTransform(l,AA),t.boneTransform(c,iA),t.boneTransform(h,nA));const d=function(t,e,A,i,n,r,s,a){let o;if(o=1===e.side?i.intersectTriangle(s,r,n,!0,a):i.intersectTriangle(n,r,s,2!==e.side,a),null===o)return null;pA.copy(a),pA.applyMatrix4(t.matrixWorld);const l=A.ray.origin.distanceTo(pA);return l<A.near||l>A.far?null:{distance:l,point:pA.clone(),object:t}}(t,e,A,i,AA,iA,nA,gA);if(d){a&&(hA.fromBufferAttribute(a,l),uA.fromBufferAttribute(a,c),dA.fromBufferAttribute(a,h),d.uv=Re.getUV(gA,AA,iA,nA,hA,uA,dA,new X)),o&&(hA.fromBufferAttribute(o,l),uA.fromBufferAttribute(o,c),dA.fromBufferAttribute(o,h),d.uv2=Re.getUV(gA,AA,iA,nA,hA,uA,dA,new X));const t={a:l,b:c,c:h,normal:new Mt,materialIndex:0};Re.getNormal(AA,iA,nA,t.normal),d.face=t}return d}class vA extends je{constructor(t=1,e=1,A=1,i=1,n=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:A,widthSegments:i,heightSegments:n,depthSegments:r};const s=this;i=Math.floor(i),n=Math.floor(n),r=Math.floor(r);const a=[],o=[],l=[],c=[];let h=0,u=0;function d(t,e,A,i,n,r,d,g,p,f,m){const v=r/p,C=d/f,I=r/2,_=d/2,M=g/2,y=p+1,x=f+1;let E=0,w=0;const b=new Mt;for(let r=0;r<x;r++){const s=r*C-_;for(let a=0;a<y;a++){const h=a*v-I;b[t]=h*i,b[e]=s*n,b[A]=M,o.push(b.x,b.y,b.z),b[t]=0,b[e]=0,b[A]=g>0?1:-1,l.push(b.x,b.y,b.z),c.push(a/p),c.push(1-r/f),E+=1}}for(let t=0;t<f;t++)for(let e=0;e<p;e++){const A=h+e+y*t,i=h+e+y*(t+1),n=h+(e+1)+y*(t+1),r=h+(e+1)+y*t;a.push(A,i,r),a.push(i,n,r),w+=6}s.addGroup(u,w,m),u+=w,h+=E}d("z","y","x",-1,-1,A,e,t,r,n,0),d("z","y","x",1,-1,A,e,-t,r,n,1),d("x","z","y",1,1,t,A,e,i,r,2),d("x","z","y",1,-1,t,A,-e,i,r,3),d("x","y","z",1,-1,t,e,A,i,n,4),d("x","y","z",-1,-1,t,e,-A,i,n,5),this.setIndex(a),this.setAttribute("position",new He(o,3)),this.setAttribute("normal",new He(l,3)),this.setAttribute("uv",new He(c,2))}static fromJSON(t){return new vA(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function CA(t){const e={};for(const A in t){e[A]={};for(const i in t[A]){const n=t[A][i];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?e[A][i]=n.clone():Array.isArray(n)?e[A][i]=n.slice():e[A][i]=n}}return e}function IA(t){const e={};for(let A=0;A<t.length;A++){const i=CA(t[A]);for(const t in i)e[t]=i[t]}return e}const _A={clone:CA,merge:IA};class MA extends ke{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=CA(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const A in this.uniforms){const i=this.uniforms[A].value;i&&i.isTexture?e.uniforms[A]={type:"t",value:i.toJSON(t).uuid}:i&&i.isColor?e.uniforms[A]={type:"c",value:i.getHex()}:i&&i.isVector2?e.uniforms[A]={type:"v2",value:i.toArray()}:i&&i.isVector3?e.uniforms[A]={type:"v3",value:i.toArray()}:i&&i.isVector4?e.uniforms[A]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?e.uniforms[A]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?e.uniforms[A]={type:"m4",value:i.toArray()}:e.uniforms[A]={value:i}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const A={};for(const t in this.extensions)!0===this.extensions[t]&&(A[t]=!0);return Object.keys(A).length>0&&(e.extensions=A),e}}class yA extends xe{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new $t,this.projectionMatrix=new $t,this.projectionMatrixInverse=new $t}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}class xA extends yA{constructor(t=50,e=1,A=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=A,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*O*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*G*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*O*Math.atan(Math.tan(.5*G*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,A,i,n,r){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=A,this.view.offsetY=i,this.view.width=n,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*G*this.fov)/this.zoom,A=2*e,i=this.aspect*A,n=-.5*i;const r=this.view;if(null!==this.view&&this.view.enabled){const t=r.fullWidth,s=r.fullHeight;n+=r.offsetX*i/t,e-=r.offsetY*A/s,i*=r.width/t,A*=r.height/s}const s=this.filmOffset;0!==s&&(n+=t*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(n,n+i,e,e-A,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const EA=90;class wA extends xe{constructor(t,e,A){if(super(),this.type="CubeCamera",!0!==A.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=A;const i=new xA(EA,1,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new Mt(1,0,0)),this.add(i);const n=new xA(EA,1,t,e);n.layers=this.layers,n.up.set(0,-1,0),n.lookAt(new Mt(-1,0,0)),this.add(n);const r=new xA(EA,1,t,e);r.layers=this.layers,r.up.set(0,0,1),r.lookAt(new Mt(0,1,0)),this.add(r);const s=new xA(EA,1,t,e);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new Mt(0,-1,0)),this.add(s);const a=new xA(EA,1,t,e);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new Mt(0,0,1)),this.add(a);const o=new xA(EA,1,t,e);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new Mt(0,0,-1)),this.add(o)}update(t,e){null===this.parent&&this.updateMatrixWorld();const A=this.renderTarget,[i,n,r,s,a,o]=this.children,l=t.getRenderTarget(),c=t.toneMapping,h=t.xr.enabled;t.toneMapping=0,t.xr.enabled=!1;const u=A.texture.generateMipmaps;A.texture.generateMipmaps=!1,t.setRenderTarget(A,0),t.render(e,i),t.setRenderTarget(A,1),t.render(e,n),t.setRenderTarget(A,2),t.render(e,r),t.setRenderTarget(A,3),t.render(e,s),t.setRenderTarget(A,4),t.render(e,a),A.texture.generateMipmaps=u,t.setRenderTarget(A,5),t.render(e,o),t.setRenderTarget(l),t.toneMapping=c,t.xr.enabled=h,A.texture.needsPMREMUpdate=!0}}class bA extends mt{constructor(t,e,i,n,r,s,a,o,l,c){super(t=void 0!==t?t:[],e=void 0!==e?e:A,i,n,r,s,a,o,l,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class SA extends Ct{constructor(t,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const A={width:t,height:t,depth:1},i=[A,A,A,A,A,A];this.texture=new bA(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:l}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const A={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},i=new vA(5,5,5),n=new MA({name:"CubemapFromEquirect",uniforms:CA(A.uniforms),vertexShader:A.vertexShader,fragmentShader:A.fragmentShader,side:1,blending:0});n.uniforms.tEquirect.value=e;const r=new fA(i,n),s=e.minFilter;e.minFilter===c&&(e.minFilter=l);return new wA(1,10,this).update(t,r),e.minFilter=s,r.geometry.dispose(),r.material.dispose(),this}clear(t,e,A,i){const n=t.getRenderTarget();for(let n=0;n<6;n++)t.setRenderTarget(this,n),t.clear(e,A,i);t.setRenderTarget(n)}}const BA=new Mt,DA=new Mt,QA=new j;class TA{constructor(t=new Mt(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,A,i){return this.normal.set(t,e,A),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,A){const i=BA.subVectors(A,e).cross(DA.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const A=t.delta(BA),i=this.normal.dot(A);if(0===i)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const n=-(t.start.dot(this.normal)+this.constant)/i;return n<0||n>1?null:e.copy(A).multiplyScalar(n).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),A=this.distanceToPoint(t.end);return e<0&&A>0||A<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const A=e||QA.getNormalMatrix(t),i=this.coplanarPoint(BA).applyMatrix4(t),n=this.normal.applyMatrix3(A).normalize();return this.constant=-i.dot(n),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const LA=new Ht,NA=new Mt;class RA{constructor(t=new TA,e=new TA,A=new TA,i=new TA,n=new TA,r=new TA){this.planes=[t,e,A,i,n,r]}set(t,e,A,i,n,r){const s=this.planes;return s[0].copy(t),s[1].copy(e),s[2].copy(A),s[3].copy(i),s[4].copy(n),s[5].copy(r),this}copy(t){const e=this.planes;for(let A=0;A<6;A++)e[A].copy(t.planes[A]);return this}setFromProjectionMatrix(t){const e=this.planes,A=t.elements,i=A[0],n=A[1],r=A[2],s=A[3],a=A[4],o=A[5],l=A[6],c=A[7],h=A[8],u=A[9],d=A[10],g=A[11],p=A[12],f=A[13],m=A[14],v=A[15];return e[0].setComponents(s-i,c-a,g-h,v-p).normalize(),e[1].setComponents(s+i,c+a,g+h,v+p).normalize(),e[2].setComponents(s+n,c+o,g+u,v+f).normalize(),e[3].setComponents(s-n,c-o,g-u,v-f).normalize(),e[4].setComponents(s-r,c-l,g-d,v-m).normalize(),e[5].setComponents(s+r,c+l,g+d,v+m).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),LA.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(LA)}intersectsSprite(t){return LA.center.set(0,0,0),LA.radius=.7071067811865476,LA.applyMatrix4(t.matrixWorld),this.intersectsSphere(LA)}intersectsSphere(t){const e=this.planes,A=t.center,i=-t.radius;for(let t=0;t<6;t++){if(e[t].distanceToPoint(A)<i)return!1}return!0}intersectsBox(t){const e=this.planes;for(let A=0;A<6;A++){const i=e[A];if(NA.x=i.normal.x>0?t.max.x:t.min.x,NA.y=i.normal.y>0?t.max.y:t.min.y,NA.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(NA)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let A=0;A<6;A++)if(e[A].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function PA(){let t=null,e=!1,A=null,i=null;function n(e,r){A(e,r),i=t.requestAnimationFrame(n)}return{start:function(){!0!==e&&null!==A&&(i=t.requestAnimationFrame(n),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(t){A=t},setContext:function(e){t=e}}}function kA(t,e){const A=e.isWebGL2,i=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),i.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const A=i.get(e);A&&(t.deleteBuffer(A.buffer),i.delete(e))},update:function(e,n){if(e.isGLBufferAttribute){const t=i.get(e);return void((!t||t.version<e.version)&&i.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const r=i.get(e);void 0===r?i.set(e,function(e,i){const n=e.array,r=e.usage,s=t.createBuffer();let a;if(t.bindBuffer(i,s),t.bufferData(i,n,r),e.onUploadCallback(),n instanceof Float32Array)a=5126;else if(n instanceof Uint16Array)if(e.isFloat16BufferAttribute){if(!A)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");a=5131}else a=5123;else if(n instanceof Int16Array)a=5122;else if(n instanceof Uint32Array)a=5125;else if(n instanceof Int32Array)a=5124;else if(n instanceof Int8Array)a=5120;else if(n instanceof Uint8Array)a=5121;else{if(!(n instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+n);a=5121}return{buffer:s,type:a,bytesPerElement:n.BYTES_PER_ELEMENT,version:e.version}}(e,n)):r.version<e.version&&(!function(e,i,n){const r=i.array,s=i.updateRange;t.bindBuffer(n,e),-1===s.count?t.bufferSubData(n,0,r):(A?t.bufferSubData(n,s.offset*r.BYTES_PER_ELEMENT,r,s.offset,s.count):t.bufferSubData(n,s.offset*r.BYTES_PER_ELEMENT,r.subarray(s.offset,s.offset+s.count)),s.count=-1)}(r.buffer,e,n),r.version=e.version)}}}class UA extends je{constructor(t=1,e=1,A=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:A,heightSegments:i};const n=t/2,r=e/2,s=Math.floor(A),a=Math.floor(i),o=s+1,l=a+1,c=t/s,h=e/a,u=[],d=[],g=[],p=[];for(let t=0;t<l;t++){const e=t*h-r;for(let A=0;A<o;A++){const i=A*c-n;d.push(i,-e,0),g.push(0,0,1),p.push(A/s),p.push(1-t/a)}}for(let t=0;t<a;t++)for(let e=0;e<s;e++){const A=e+o*t,i=e+o*(t+1),n=e+1+o*(t+1),r=e+1+o*t;u.push(A,i,r),u.push(i,n,r)}this.setIndex(u),this.setAttribute("position",new He(d,3)),this.setAttribute("normal",new He(g,3)),this.setAttribute("uv",new He(p,2))}static fromJSON(t){return new UA(t.width,t.height,t.widthSegments,t.heightSegments)}}const zA={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\nvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = mix(F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence);\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",iridescence_fragment:"#ifdef USE_IRIDESCENCE\nconst mat3 XYZ_TO_REC709 = mat3(\n    3.2404542, -0.9692660,  0.0556434,\n   -1.5371385,  1.8760108, -0.2040259,\n   -0.4985314,  0.0415560,  1.0572252\n);\nvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n   vec3 sqrtF0 = sqrt( fresnel0 );\n   return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n}\nvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n   return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n}\nfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n   return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n}\nvec3 evalSensitivity( float OPD, vec3 shift ) {\n   float phase = 2.0 * PI * OPD * 1.0e-9;\n   vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n   vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n   vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n   vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( -pow2( phase ) * var );\n   xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[0] ) * exp( -4.5282e+09 * pow2( phase ) );\n   xyz /= 1.0685e-7;\n   vec3 srgb = XYZ_TO_REC709 * xyz;\n   return srgb;\n}\nvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n   vec3 I;\n   float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n   float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n   float cosTheta2Sq = 1.0 - sinTheta2Sq;\n   if ( cosTheta2Sq < 0.0 ) {\n       return vec3( 1.0 );\n   }\n   float cosTheta2 = sqrt( cosTheta2Sq );\n   float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n   float R12 = F_Schlick( R0, 1.0, cosTheta1 );\n   float R21 = R12;\n   float T121 = 1.0 - R12;\n   float phi12 = 0.0;\n   if ( iridescenceIOR < outsideIOR ) phi12 = PI;\n   float phi21 = PI - phi12;\n   vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );   vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n   vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n   vec3 phi23 = vec3( 0.0 );\n   if ( baseIOR[0] < iridescenceIOR ) phi23[0] = PI;\n   if ( baseIOR[1] < iridescenceIOR ) phi23[1] = PI;\n   if ( baseIOR[2] < iridescenceIOR ) phi23[2] = PI;\n   float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n   vec3 phi = vec3( phi21 ) + phi23;\n   vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n   vec3 r123 = sqrt( R123 );\n   vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n   vec3 C0 = R12 + Rs;\n   I = C0;\n   vec3 Cm = Rs - T121;\n   for ( int m = 1; m <= 2; ++m ) {\n       Cm *= r123;\n       vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n       I += Cm * Sm;\n   }\n   return max( I, vec3( 0.0 ) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n\t#else\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\nfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\nif ( material.iridescenceThickness == 0.0 ) {\n\tmaterial.iridescence = 0.0;\n} else {\n\tmaterial.iridescence = saturate( material.iridescence );\n}\nif ( material.iridescence > 0.0 ) {\n\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n\t#endif\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},FA={common:{diffuse:{value:new ht(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new j},uv2Transform:{value:new j},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new X(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ht(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ht(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new j}},sprite:{diffuse:{value:new ht(16777215)},opacity:{value:1},center:{value:new X(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new j}}},GA={basic:{uniforms:IA([FA.common,FA.specularmap,FA.envmap,FA.aomap,FA.lightmap,FA.fog]),vertexShader:zA.meshbasic_vert,fragmentShader:zA.meshbasic_frag},lambert:{uniforms:IA([FA.common,FA.specularmap,FA.envmap,FA.aomap,FA.lightmap,FA.emissivemap,FA.fog,FA.lights,{emissive:{value:new ht(0)}}]),vertexShader:zA.meshlambert_vert,fragmentShader:zA.meshlambert_frag},phong:{uniforms:IA([FA.common,FA.specularmap,FA.envmap,FA.aomap,FA.lightmap,FA.emissivemap,FA.bumpmap,FA.normalmap,FA.displacementmap,FA.fog,FA.lights,{emissive:{value:new ht(0)},specular:{value:new ht(1118481)},shininess:{value:30}}]),vertexShader:zA.meshphong_vert,fragmentShader:zA.meshphong_frag},standard:{uniforms:IA([FA.common,FA.envmap,FA.aomap,FA.lightmap,FA.emissivemap,FA.bumpmap,FA.normalmap,FA.displacementmap,FA.roughnessmap,FA.metalnessmap,FA.fog,FA.lights,{emissive:{value:new ht(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:zA.meshphysical_vert,fragmentShader:zA.meshphysical_frag},toon:{uniforms:IA([FA.common,FA.aomap,FA.lightmap,FA.emissivemap,FA.bumpmap,FA.normalmap,FA.displacementmap,FA.gradientmap,FA.fog,FA.lights,{emissive:{value:new ht(0)}}]),vertexShader:zA.meshtoon_vert,fragmentShader:zA.meshtoon_frag},matcap:{uniforms:IA([FA.common,FA.bumpmap,FA.normalmap,FA.displacementmap,FA.fog,{matcap:{value:null}}]),vertexShader:zA.meshmatcap_vert,fragmentShader:zA.meshmatcap_frag},points:{uniforms:IA([FA.points,FA.fog]),vertexShader:zA.points_vert,fragmentShader:zA.points_frag},dashed:{uniforms:IA([FA.common,FA.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:zA.linedashed_vert,fragmentShader:zA.linedashed_frag},depth:{uniforms:IA([FA.common,FA.displacementmap]),vertexShader:zA.depth_vert,fragmentShader:zA.depth_frag},normal:{uniforms:IA([FA.common,FA.bumpmap,FA.normalmap,FA.displacementmap,{opacity:{value:1}}]),vertexShader:zA.meshnormal_vert,fragmentShader:zA.meshnormal_frag},sprite:{uniforms:IA([FA.sprite,FA.fog]),vertexShader:zA.sprite_vert,fragmentShader:zA.sprite_frag},background:{uniforms:{uvTransform:{value:new j},t2D:{value:null}},vertexShader:zA.background_vert,fragmentShader:zA.background_frag},cube:{uniforms:IA([FA.envmap,{opacity:{value:1}}]),vertexShader:zA.cube_vert,fragmentShader:zA.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:zA.equirect_vert,fragmentShader:zA.equirect_frag},distanceRGBA:{uniforms:IA([FA.common,FA.displacementmap,{referencePosition:{value:new Mt},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:zA.distanceRGBA_vert,fragmentShader:zA.distanceRGBA_frag},shadow:{uniforms:IA([FA.lights,FA.fog,{color:{value:new ht(0)},opacity:{value:1}}]),vertexShader:zA.shadow_vert,fragmentShader:zA.shadow_frag}};function OA(t,e,A,i,r,s){const a=new ht(0);let o,l,c=!0===r?0:1,h=null,u=0,d=null;function g(t,e){A.buffers.color.setClear(t.r,t.g,t.b,e,s)}return{getClearColor:function(){return a},setClearColor:function(t,e=1){a.set(t),c=e,g(a,c)},getClearAlpha:function(){return c},setClearAlpha:function(t){c=t,g(a,c)},render:function(A,r){let s=!1,p=!0===r.isScene?r.background:null;p&&p.isTexture&&(p=e.get(p));const f=t.xr,m=f.getSession&&f.getSession();m&&"additive"===m.environmentBlendMode&&(p=null),null===p?g(a,c):p&&p.isColor&&(g(p,1),s=!0),(t.autoClear||s)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),p&&(p.isCubeTexture||p.mapping===n)?(void 0===l&&(l=new fA(new vA(1,1,1),new MA({name:"BackgroundCubeMaterial",uniforms:CA(GA.cube.uniforms),vertexShader:GA.cube.vertexShader,fragmentShader:GA.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(t,e,A){this.matrixWorld.copyPosition(A.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(l)),l.material.uniforms.envMap.value=p,l.material.uniforms.flipEnvMap.value=p.isCubeTexture&&!1===p.isRenderTargetTexture?-1:1,h===p&&u===p.version&&d===t.toneMapping||(l.material.needsUpdate=!0,h=p,u=p.version,d=t.toneMapping),l.layers.enableAll(),A.unshift(l,l.geometry,l.material,0,0,null)):p&&p.isTexture&&(void 0===o&&(o=new fA(new UA(2,2),new MA({name:"BackgroundMaterial",uniforms:CA(GA.background.uniforms),vertexShader:GA.background.vertexShader,fragmentShader:GA.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(o)),o.material.uniforms.t2D.value=p,!0===p.matrixAutoUpdate&&p.updateMatrix(),o.material.uniforms.uvTransform.value.copy(p.matrix),h===p&&u===p.version&&d===t.toneMapping||(o.material.needsUpdate=!0,h=p,u=p.version,d=t.toneMapping),o.layers.enableAll(),A.unshift(o,o.geometry,o.material,0,0,null))}}}function VA(t,e,A,i){const n=t.getParameter(34921),r=i.isWebGL2?null:e.get("OES_vertex_array_object"),s=i.isWebGL2||null!==r,a={},o=d(null);let l=o,c=!1;function h(e){return i.isWebGL2?t.bindVertexArray(e):r.bindVertexArrayOES(e)}function u(e){return i.isWebGL2?t.deleteVertexArray(e):r.deleteVertexArrayOES(e)}function d(t){const e=[],A=[],i=[];for(let t=0;t<n;t++)e[t]=0,A[t]=0,i[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:A,attributeDivisors:i,object:t,attributes:{},index:null}}function g(){const t=l.newAttributes;for(let e=0,A=t.length;e<A;e++)t[e]=0}function p(t){f(t,0)}function f(A,n){const r=l.newAttributes,s=l.enabledAttributes,a=l.attributeDivisors;if(r[A]=1,0===s[A]&&(t.enableVertexAttribArray(A),s[A]=1),a[A]!==n){(i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](A,n),a[A]=n}}function m(){const e=l.newAttributes,A=l.enabledAttributes;for(let i=0,n=A.length;i<n;i++)A[i]!==e[i]&&(t.disableVertexAttribArray(i),A[i]=0)}function v(e,A,n,r,s,a){!0!==i.isWebGL2||5124!==n&&5125!==n?t.vertexAttribPointer(e,A,n,r,s,a):t.vertexAttribIPointer(e,A,n,s,a)}function C(){I(),c=!0,l!==o&&(l=o,h(l.object))}function I(){o.geometry=null,o.program=null,o.wireframe=!1}return{setup:function(n,o,u,C,I){let _=!1;if(s){const e=function(e,A,n){const s=!0===n.wireframe;let o=a[e.id];void 0===o&&(o={},a[e.id]=o);let l=o[A.id];void 0===l&&(l={},o[A.id]=l);let c=l[s];void 0===c&&(c=d(i.isWebGL2?t.createVertexArray():r.createVertexArrayOES()),l[s]=c);return c}(C,u,o);l!==e&&(l=e,h(l.object)),_=function(t,e,A,i){const n=l.attributes,r=e.attributes;let s=0;const a=A.getAttributes();for(const e in a){if(a[e].location>=0){const A=n[e];let i=r[e];if(void 0===i&&("instanceMatrix"===e&&t.instanceMatrix&&(i=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(i=t.instanceColor)),void 0===A)return!0;if(A.attribute!==i)return!0;if(i&&A.data!==i.data)return!0;s++}}return l.attributesNum!==s||l.index!==i}(n,C,u,I),_&&function(t,e,A,i){const n={},r=e.attributes;let s=0;const a=A.getAttributes();for(const e in a){if(a[e].location>=0){let A=r[e];void 0===A&&("instanceMatrix"===e&&t.instanceMatrix&&(A=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(A=t.instanceColor));const i={};i.attribute=A,A&&A.data&&(i.data=A.data),n[e]=i,s++}}l.attributes=n,l.attributesNum=s,l.index=i}(n,C,u,I)}else{const t=!0===o.wireframe;l.geometry===C.id&&l.program===u.id&&l.wireframe===t||(l.geometry=C.id,l.program=u.id,l.wireframe=t,_=!0)}null!==I&&A.update(I,34963),(_||c)&&(c=!1,function(n,r,s,a){if(!1===i.isWebGL2&&(n.isInstancedMesh||a.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;g();const o=a.attributes,l=s.getAttributes(),c=r.defaultAttributeValues;for(const e in l){const i=l[e];if(i.location>=0){let r=o[e];if(void 0===r&&("instanceMatrix"===e&&n.instanceMatrix&&(r=n.instanceMatrix),"instanceColor"===e&&n.instanceColor&&(r=n.instanceColor)),void 0!==r){const e=r.normalized,s=r.itemSize,o=A.get(r);if(void 0===o)continue;const l=o.buffer,c=o.type,h=o.bytesPerElement;if(r.isInterleavedBufferAttribute){const A=r.data,o=A.stride,u=r.offset;if(A.isInstancedInterleavedBuffer){for(let t=0;t<i.locationSize;t++)f(i.location+t,A.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===a._maxInstanceCount&&(a._maxInstanceCount=A.meshPerAttribute*A.count)}else for(let t=0;t<i.locationSize;t++)p(i.location+t);t.bindBuffer(34962,l);for(let t=0;t<i.locationSize;t++)v(i.location+t,s/i.locationSize,c,e,o*h,(u+s/i.locationSize*t)*h)}else{if(r.isInstancedBufferAttribute){for(let t=0;t<i.locationSize;t++)f(i.location+t,r.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===a._maxInstanceCount&&(a._maxInstanceCount=r.meshPerAttribute*r.count)}else for(let t=0;t<i.locationSize;t++)p(i.location+t);t.bindBuffer(34962,l);for(let t=0;t<i.locationSize;t++)v(i.location+t,s/i.locationSize,c,e,s*h,s/i.locationSize*t*h)}}else if(void 0!==c){const A=c[e];if(void 0!==A)switch(A.length){case 2:t.vertexAttrib2fv(i.location,A);break;case 3:t.vertexAttrib3fv(i.location,A);break;case 4:t.vertexAttrib4fv(i.location,A);break;default:t.vertexAttrib1fv(i.location,A)}}}}m()}(n,o,u,C),null!==I&&t.bindBuffer(34963,A.get(I).buffer))},reset:C,resetDefaultState:I,dispose:function(){C();for(const t in a){const e=a[t];for(const t in e){const A=e[t];for(const t in A)u(A[t].object),delete A[t];delete e[t]}delete a[t]}},releaseStatesOfGeometry:function(t){if(void 0===a[t.id])return;const e=a[t.id];for(const t in e){const A=e[t];for(const t in A)u(A[t].object),delete A[t];delete e[t]}delete a[t.id]},releaseStatesOfProgram:function(t){for(const e in a){const A=a[e];if(void 0===A[t.id])continue;const i=A[t.id];for(const t in i)u(i[t].object),delete i[t];delete A[t.id]}},initAttributes:g,enableAttribute:p,disableUnusedAttributes:m}}function HA(t,e,A,i){const n=i.isWebGL2;let r;this.setMode=function(t){r=t},this.render=function(e,i){t.drawArrays(r,e,i),A.update(i,r,1)},this.renderInstances=function(i,s,a){if(0===a)return;let o,l;if(n)o=t,l="drawArraysInstanced";else if(o=e.get("ANGLE_instanced_arrays"),l="drawArraysInstancedANGLE",null===o)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");o[l](r,i,s,a),A.update(s,r,a)}}function WA(t,e,A){let i;function n(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const r="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let s=void 0!==A.precision?A.precision:"highp";const a=n(s);a!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",a,"instead."),s=a);const o=r||e.has("WEBGL_draw_buffers"),l=!0===A.logarithmicDepthBuffer,c=t.getParameter(34930),h=t.getParameter(35660),u=t.getParameter(3379),d=t.getParameter(34076),g=t.getParameter(34921),p=t.getParameter(36347),f=t.getParameter(36348),m=t.getParameter(36349),v=h>0,C=r||e.has("OES_texture_float");return{isWebGL2:r,drawBuffers:o,getMaxAnisotropy:function(){if(void 0!==i)return i;if(!0===e.has("EXT_texture_filter_anisotropic")){const A=e.get("EXT_texture_filter_anisotropic");i=t.getParameter(A.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i},getMaxPrecision:n,precision:s,logarithmicDepthBuffer:l,maxTextures:c,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:d,maxAttributes:g,maxVertexUniforms:p,maxVaryings:f,maxFragmentUniforms:m,vertexTextures:v,floatFragmentTextures:C,floatVertexTextures:v&&C,maxSamples:r?t.getParameter(36183):0}}function YA(t){const e=this;let A=null,i=0,n=!1,r=!1;const s=new TA,a=new j,o={value:null,needsUpdate:!1};function l(){o.value!==A&&(o.value=A,o.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function c(t,A,i,n){const r=null!==t?t.length:0;let l=null;if(0!==r){if(l=o.value,!0!==n||null===l){const e=i+4*r,n=A.matrixWorldInverse;a.getNormalMatrix(n),(null===l||l.length<e)&&(l=new Float32Array(e));for(let e=0,A=i;e!==r;++e,A+=4)s.copy(t[e]).applyMatrix4(n,a),s.normal.toArray(l,A),l[A+3]=s.constant}o.value=l,o.needsUpdate=!0}return e.numPlanes=r,e.numIntersection=0,l}this.uniform=o,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,r){const s=0!==t.length||e||0!==i||n;return n=e,A=c(t,r,0),i=t.length,s},this.beginShadows=function(){r=!0,c(null)},this.endShadows=function(){r=!1,l()},this.setState=function(e,s,a){const h=e.clippingPlanes,u=e.clipIntersection,d=e.clipShadows,g=t.get(e);if(!n||null===h||0===h.length||r&&!d)r?c(null):l();else{const t=r?0:i,e=4*t;let n=g.clippingState||null;o.value=n,n=c(h,s,e,a);for(let t=0;t!==e;++t)n[t]=A[t];g.clippingState=n,this.numIntersection=u?this.numPlanes:0,this.numPlanes+=t}}}function JA(t){let e=new WeakMap;function n(t,e){return 303===e?t.mapping=A:304===e&&(t.mapping=i),t}function r(t){const A=t.target;A.removeEventListener("dispose",r);const i=e.get(A);void 0!==i&&(e.delete(A),i.dispose())}return{get:function(A){if(A&&A.isTexture&&!1===A.isRenderTargetTexture){const i=A.mapping;if(303===i||304===i){if(e.has(A)){return n(e.get(A).texture,A.mapping)}{const i=A.image;if(i&&i.height>0){const s=new SA(i.height/2);return s.fromEquirectangularTexture(t,A),e.set(A,s),A.addEventListener("dispose",r),n(s.texture,A.mapping)}return null}}}return A},dispose:function(){e=new WeakMap}}}GA.physical={uniforms:IA([GA.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new X(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new ht(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new X},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new ht(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new ht(1,1,1)},specularColorMap:{value:null}}]),vertexShader:zA.meshphysical_vert,fragmentShader:zA.meshphysical_frag};class KA extends yA{constructor(t=-1,e=1,A=1,i=-1,n=.1,r=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=A,this.bottom=i,this.near=n,this.far=r,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,A,i,n,r){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=A,this.view.offsetY=i,this.view.width=n,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),A=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let n=A-t,r=A+t,s=i+e,a=i-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;n+=t*this.view.offsetX,r=n+t*this.view.width,s-=e*this.view.offsetY,a=s-e*this.view.height}this.projectionMatrix.makeOrthographic(n,r,s,a,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}const ZA=[.125,.215,.35,.446,.526,.582],qA=20,XA=new KA,jA=new ht;let $A=null;const ti=(1+Math.sqrt(5))/2,ei=1/ti,Ai=[new Mt(1,1,1),new Mt(-1,1,1),new Mt(1,1,-1),new Mt(-1,1,-1),new Mt(0,ti,ei),new Mt(0,ti,-ei),new Mt(ei,0,ti),new Mt(-ei,0,ti),new Mt(ti,ei,0),new Mt(-ti,ei,0)];class ii{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,A=.1,i=100){$A=this._renderer.getRenderTarget(),this._setSize(256);const n=this._allocateTargets();return n.depthBuffer=!0,this._sceneToCubeUV(t,A,i,n),e>0&&this._blur(n,0,0,e),this._applyPMREM(n),this._cleanup(n),n}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=ai(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=si(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget($A),t.scissorTest=!1,ri(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===A||t.mapping===i?this._setSize(0===t.image.length?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),$A=this._renderer.getRenderTarget();const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,A={magFilter:l,minFilter:l,generateMipmaps:!1,type:g,format:f,encoding:D,depthBuffer:!1},i=ni(t,e,A);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=ni(t,e,A);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(t){const e=[],A=[],i=[];let n=t;const r=t-4+1+ZA.length;for(let s=0;s<r;s++){const r=Math.pow(2,n);A.push(r);let a=1/r;s>t-4?a=ZA[s-t+4-1]:0===s&&(a=0),i.push(a);const o=1/(r-2),l=-o,c=1+o,h=[l,l,c,l,c,c,l,l,c,c,l,c],u=6,d=6,g=3,p=2,f=1,m=new Float32Array(g*d*u),v=new Float32Array(p*d*u),C=new Float32Array(f*d*u);for(let t=0;t<u;t++){const e=t%3*2/3-1,A=t>2?0:-1,i=[e,A,0,e+2/3,A,0,e+2/3,A+1,0,e,A,0,e+2/3,A+1,0,e,A+1,0];m.set(i,g*d*t),v.set(h,p*d*t);const n=[t,t,t,t,t,t];C.set(n,f*d*t)}const I=new je;I.setAttribute("position",new Ge(m,g)),I.setAttribute("uv",new Ge(v,p)),I.setAttribute("faceIndex",new Ge(C,f)),e.push(I),n>4&&n--}return{lodPlanes:e,sizeLods:A,sigmas:i}}(i)),this._blurMaterial=function(t,e,A){const i=new Float32Array(qA),n=new Mt(0,1,0);return new MA({name:"SphericalGaussianBlur",defines:{n:qA,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/A,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n}},vertexShader:oi(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}(i,t,e)}return i}_compileMaterial(t){const e=new fA(this._lodPlanes[0],t);this._renderer.compile(e,XA)}_sceneToCubeUV(t,e,A,i){const n=new xA(90,1,e,A),r=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],a=this._renderer,o=a.autoClear,l=a.toneMapping;a.getClearColor(jA),a.toneMapping=0,a.autoClear=!1;const c=new Ue({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),h=new fA(new vA,c);let u=!1;const d=t.background;d?d.isColor&&(c.color.copy(d),t.background=null,u=!0):(c.color.copy(jA),u=!0);for(let e=0;e<6;e++){const A=e%3;0===A?(n.up.set(0,r[e],0),n.lookAt(s[e],0,0)):1===A?(n.up.set(0,0,r[e]),n.lookAt(0,s[e],0)):(n.up.set(0,r[e],0),n.lookAt(0,0,s[e]));const o=this._cubeSize;ri(i,A*o,e>2?o:0,o,o),a.setRenderTarget(i),u&&a.render(h,n),a.render(t,n)}h.geometry.dispose(),h.material.dispose(),a.toneMapping=l,a.autoClear=o,t.background=d}_textureToCubeUV(t,e){const n=this._renderer,r=t.mapping===A||t.mapping===i;r?(null===this._cubemapMaterial&&(this._cubemapMaterial=ai()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===t.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=si());const s=r?this._cubemapMaterial:this._equirectMaterial,a=new fA(this._lodPlanes[0],s);s.uniforms.envMap.value=t;const o=this._cubeSize;ri(e,0,0,3*o,2*o),n.setRenderTarget(e),n.render(a,XA)}_applyPMREM(t){const e=this._renderer,A=e.autoClear;e.autoClear=!1;for(let e=1;e<this._lodPlanes.length;e++){const A=Math.sqrt(this._sigmas[e]*this._sigmas[e]-this._sigmas[e-1]*this._sigmas[e-1]),i=Ai[(e-1)%Ai.length];this._blur(t,e-1,e,A,i)}e.autoClear=A}_blur(t,e,A,i,n){const r=this._pingPongRenderTarget;this._halfBlur(t,r,e,A,i,"latitudinal",n),this._halfBlur(r,t,A,A,i,"longitudinal",n)}_halfBlur(t,e,A,i,n,r,s){const a=this._renderer,o=this._blurMaterial;"latitudinal"!==r&&"longitudinal"!==r&&console.error("blur direction must be either latitudinal or longitudinal!");const l=new fA(this._lodPlanes[i],o),c=o.uniforms,h=this._sizeLods[A]-1,u=isFinite(n)?Math.PI/(2*h):2*Math.PI/39,d=n/u,g=isFinite(n)?1+Math.floor(3*d):qA;g>qA&&console.warn(`sigmaRadians, ${n}, is too large and will clip, as it requested ${g} samples when the maximum is set to 20`);const p=[];let f=0;for(let t=0;t<qA;++t){const e=t/d,A=Math.exp(-e*e/2);p.push(A),0===t?f+=A:t<g&&(f+=2*A)}for(let t=0;t<p.length;t++)p[t]=p[t]/f;c.envMap.value=t.texture,c.samples.value=g,c.weights.value=p,c.latitudinal.value="latitudinal"===r,s&&(c.poleAxis.value=s);const{_lodMax:m}=this;c.dTheta.value=u,c.mipInt.value=m-A;const v=this._sizeLods[i];ri(e,3*v*(i>m-4?i-m+4:0),4*(this._cubeSize-v),3*v,2*v),a.setRenderTarget(e),a.render(l,XA)}}function ni(t,e,A){const i=new Ct(t,e,A);return i.texture.mapping=n,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function ri(t,e,A,i,n){t.viewport.set(e,A,i,n),t.scissor.set(e,A,i,n)}function si(){return new MA({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:oi(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function ai(){return new MA({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:oi(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function oi(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function li(t){let e=new WeakMap,n=null;function r(t){const A=t.target;A.removeEventListener("dispose",r);const i=e.get(A);void 0!==i&&(e.delete(A),i.dispose())}return{get:function(s){if(s&&s.isTexture){const a=s.mapping,o=303===a||304===a,l=a===A||a===i;if(o||l){if(s.isRenderTargetTexture&&!0===s.needsPMREMUpdate){s.needsPMREMUpdate=!1;let A=e.get(s);return null===n&&(n=new ii(t)),A=o?n.fromEquirectangular(s,A):n.fromCubemap(s,A),e.set(s,A),A.texture}if(e.has(s))return e.get(s).texture;{const A=s.image;if(o&&A&&A.height>0||l&&A&&function(t){let e=0;const A=6;for(let i=0;i<A;i++)void 0!==t[i]&&e++;return e===A}(A)){null===n&&(n=new ii(t));const A=o?n.fromEquirectangular(s):n.fromCubemap(s);return e.set(s,A),s.addEventListener("dispose",r),A.texture}return null}}}return s},dispose:function(){e=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function ci(t){const e={};function A(A){if(void 0!==e[A])return e[A];let i;switch(A){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(A)}return e[A]=i,i}return{has:function(t){return null!==A(t)},init:function(t){t.isWebGL2?A("EXT_color_buffer_float"):(A("WEBGL_depth_texture"),A("OES_texture_float"),A("OES_texture_half_float"),A("OES_texture_half_float_linear"),A("OES_standard_derivatives"),A("OES_element_index_uint"),A("OES_vertex_array_object"),A("ANGLE_instanced_arrays")),A("OES_texture_float_linear"),A("EXT_color_buffer_half_float"),A("WEBGL_multisampled_render_to_texture")},get:function(t){const e=A(t);return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function hi(t,e,A,i){const n={},r=new WeakMap;function s(t){const a=t.target;null!==a.index&&e.remove(a.index);for(const t in a.attributes)e.remove(a.attributes[t]);a.removeEventListener("dispose",s),delete n[a.id];const o=r.get(a);o&&(e.remove(o),r.delete(a)),i.releaseStatesOfGeometry(a),!0===a.isInstancedBufferGeometry&&delete a._maxInstanceCount,A.memory.geometries--}function a(t){const A=[],i=t.index,n=t.attributes.position;let s=0;if(null!==i){const t=i.array;s=i.version;for(let e=0,i=t.length;e<i;e+=3){const i=t[e+0],n=t[e+1],r=t[e+2];A.push(i,n,n,r,r,i)}}else{const t=n.array;s=n.version;for(let e=0,i=t.length/3-1;e<i;e+=3){const t=e+0,i=e+1,n=e+2;A.push(t,i,i,n,n,t)}}const a=new($(A)?Ve:Oe)(A,1);a.version=s;const o=r.get(t);o&&e.remove(o),r.set(t,a)}return{get:function(t,e){return!0===n[e.id]||(e.addEventListener("dispose",s),n[e.id]=!0,A.memory.geometries++),e},update:function(t){const A=t.attributes;for(const t in A)e.update(A[t],34962);const i=t.morphAttributes;for(const t in i){const A=i[t];for(let t=0,i=A.length;t<i;t++)e.update(A[t],34962)}},getWireframeAttribute:function(t){const e=r.get(t);if(e){const A=t.index;null!==A&&e.version<A.version&&a(t)}else a(t);return r.get(t)}}}function ui(t,e,A,i){const n=i.isWebGL2;let r,s,a;this.setMode=function(t){r=t},this.setIndex=function(t){s=t.type,a=t.bytesPerElement},this.render=function(e,i){t.drawElements(r,i,s,e*a),A.update(i,r,1)},this.renderInstances=function(i,o,l){if(0===l)return;let c,h;if(n)c=t,h="drawElementsInstanced";else if(c=e.get("ANGLE_instanced_arrays"),h="drawElementsInstancedANGLE",null===c)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[h](r,o,s,i*a,l),A.update(o,r,l)}}function di(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,A,i){switch(e.calls++,A){case 4:e.triangles+=i*(t/3);break;case 1:e.lines+=i*(t/2);break;case 3:e.lines+=i*(t-1);break;case 2:e.lines+=i*t;break;case 0:e.points+=i*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",A)}}}}function gi(t,e){return t[0]-e[0]}function pi(t,e){return Math.abs(e[1])-Math.abs(t[1])}function fi(t,e){let A=1;const i=e.isInterleavedBufferAttribute?e.data.array:e.array;i instanceof Int8Array?A=127:i instanceof Int16Array?A=32767:i instanceof Int32Array?A=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",i),t.divideScalar(A)}function mi(t,e,A){const i={},n=new Float32Array(8),r=new WeakMap,s=new vt,a=[];for(let t=0;t<8;t++)a[t]=[t,0];return{update:function(o,l,c,h){const u=o.morphTargetInfluences;if(!0===e.isWebGL2){const g=l.morphAttributes.position||l.morphAttributes.normal||l.morphAttributes.color,p=void 0!==g?g.length:0;let f=r.get(l);if(void 0===f||f.count!==p){void 0!==f&&f.texture.dispose();const C=void 0!==l.morphAttributes.position,I=void 0!==l.morphAttributes.normal,_=void 0!==l.morphAttributes.color,M=l.morphAttributes.position||[],y=l.morphAttributes.normal||[],x=l.morphAttributes.color||[];let E=0;!0===C&&(E=1),!0===I&&(E=2),!0===_&&(E=3);let w=l.attributes.position.count*E,b=1;w>e.maxTextureSize&&(b=Math.ceil(w/e.maxTextureSize),w=e.maxTextureSize);const S=new Float32Array(w*b*4*p),B=new It(S,w,b,p);B.type=d,B.needsUpdate=!0;const D=4*E;for(let T=0;T<p;T++){const L=M[T],N=y[T],R=x[T],P=w*b*4*T;for(let k=0;k<L.count;k++){const U=k*D;!0===C&&(s.fromBufferAttribute(L,k),!0===L.normalized&&fi(s,L),S[P+U+0]=s.x,S[P+U+1]=s.y,S[P+U+2]=s.z,S[P+U+3]=0),!0===I&&(s.fromBufferAttribute(N,k),!0===N.normalized&&fi(s,N),S[P+U+4]=s.x,S[P+U+5]=s.y,S[P+U+6]=s.z,S[P+U+7]=0),!0===_&&(s.fromBufferAttribute(R,k),!0===R.normalized&&fi(s,R),S[P+U+8]=s.x,S[P+U+9]=s.y,S[P+U+10]=s.z,S[P+U+11]=4===R.itemSize?s.w:1)}}function Q(){B.dispose(),r.delete(l),l.removeEventListener("dispose",Q)}f={count:p,texture:B,size:new X(w,b)},r.set(l,f),l.addEventListener("dispose",Q)}let m=0;for(let z=0;z<u.length;z++)m+=u[z];const v=l.morphTargetsRelative?1:1-m;h.getUniforms().setValue(t,"morphTargetBaseInfluence",v),h.getUniforms().setValue(t,"morphTargetInfluences",u),h.getUniforms().setValue(t,"morphTargetsTexture",f.texture,A),h.getUniforms().setValue(t,"morphTargetsTextureSize",f.size)}else{const F=void 0===u?0:u.length;let G=i[l.id];if(void 0===G||G.length!==F){G=[];for(let Y=0;Y<F;Y++)G[Y]=[Y,0];i[l.id]=G}for(let J=0;J<F;J++){const K=G[J];K[0]=J,K[1]=u[J]}G.sort(pi);for(let Z=0;Z<8;Z++)Z<F&&G[Z][1]?(a[Z][0]=G[Z][0],a[Z][1]=G[Z][1]):(a[Z][0]=Number.MAX_SAFE_INTEGER,a[Z][1]=0);a.sort(gi);const O=l.morphAttributes.position,V=l.morphAttributes.normal;let H=0;for(let q=0;q<8;q++){const j=a[q],$=j[0],tt=j[1];$!==Number.MAX_SAFE_INTEGER&&tt?(O&&l.getAttribute("morphTarget"+q)!==O[$]&&l.setAttribute("morphTarget"+q,O[$]),V&&l.getAttribute("morphNormal"+q)!==V[$]&&l.setAttribute("morphNormal"+q,V[$]),n[q]=tt,H+=tt):(O&&!0===l.hasAttribute("morphTarget"+q)&&l.deleteAttribute("morphTarget"+q),V&&!0===l.hasAttribute("morphNormal"+q)&&l.deleteAttribute("morphNormal"+q),n[q]=0)}const W=l.morphTargetsRelative?1:1-H;h.getUniforms().setValue(t,"morphTargetBaseInfluence",W),h.getUniforms().setValue(t,"morphTargetInfluences",n)}}}}function vi(t,e,A,i){let n=new WeakMap;function r(t){const e=t.target;e.removeEventListener("dispose",r),A.remove(e.instanceMatrix),null!==e.instanceColor&&A.remove(e.instanceColor)}return{update:function(t){const s=i.render.frame,a=t.geometry,o=e.get(t,a);return n.get(o)!==s&&(e.update(o),n.set(o,s)),t.isInstancedMesh&&(!1===t.hasEventListener("dispose",r)&&t.addEventListener("dispose",r),A.update(t.instanceMatrix,34962),null!==t.instanceColor&&A.update(t.instanceColor,34962)),o},dispose:function(){n=new WeakMap}}}const Ci=new mt,Ii=new It,_i=new class extends mt{constructor(t=null,e=1,A=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:A,depth:i},this.magFilter=o,this.minFilter=o,this.wrapR=s,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}},Mi=new bA,yi=[],xi=[],Ei=new Float32Array(16),wi=new Float32Array(9),bi=new Float32Array(4);function Si(t,e,A){const i=t[0];if(i<=0||i>0)return t;const n=e*A;let r=yi[n];if(void 0===r&&(r=new Float32Array(n),yi[n]=r),0!==e){i.toArray(r,0);for(let i=1,n=0;i!==e;++i)n+=A,t[i].toArray(r,n)}return r}function Bi(t,e){if(t.length!==e.length)return!1;for(let A=0,i=t.length;A<i;A++)if(t[A]!==e[A])return!1;return!0}function Di(t,e){for(let A=0,i=e.length;A<i;A++)t[A]=e[A]}function Qi(t,e){let A=xi[e];void 0===A&&(A=new Int32Array(e),xi[e]=A);for(let i=0;i!==e;++i)A[i]=t.allocateTextureUnit();return A}function Ti(t,e){const A=this.cache;A[0]!==e&&(t.uniform1f(this.addr,e),A[0]=e)}function Li(t,e){const A=this.cache;if(void 0!==e.x)A[0]===e.x&&A[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),A[0]=e.x,A[1]=e.y);else{if(Bi(A,e))return;t.uniform2fv(this.addr,e),Di(A,e)}}function Ni(t,e){const A=this.cache;if(void 0!==e.x)A[0]===e.x&&A[1]===e.y&&A[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),A[0]=e.x,A[1]=e.y,A[2]=e.z);else if(void 0!==e.r)A[0]===e.r&&A[1]===e.g&&A[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),A[0]=e.r,A[1]=e.g,A[2]=e.b);else{if(Bi(A,e))return;t.uniform3fv(this.addr,e),Di(A,e)}}function Ri(t,e){const A=this.cache;if(void 0!==e.x)A[0]===e.x&&A[1]===e.y&&A[2]===e.z&&A[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),A[0]=e.x,A[1]=e.y,A[2]=e.z,A[3]=e.w);else{if(Bi(A,e))return;t.uniform4fv(this.addr,e),Di(A,e)}}function Pi(t,e){const A=this.cache,i=e.elements;if(void 0===i){if(Bi(A,e))return;t.uniformMatrix2fv(this.addr,!1,e),Di(A,e)}else{if(Bi(A,i))return;bi.set(i),t.uniformMatrix2fv(this.addr,!1,bi),Di(A,i)}}function ki(t,e){const A=this.cache,i=e.elements;if(void 0===i){if(Bi(A,e))return;t.uniformMatrix3fv(this.addr,!1,e),Di(A,e)}else{if(Bi(A,i))return;wi.set(i),t.uniformMatrix3fv(this.addr,!1,wi),Di(A,i)}}function Ui(t,e){const A=this.cache,i=e.elements;if(void 0===i){if(Bi(A,e))return;t.uniformMatrix4fv(this.addr,!1,e),Di(A,e)}else{if(Bi(A,i))return;Ei.set(i),t.uniformMatrix4fv(this.addr,!1,Ei),Di(A,i)}}function zi(t,e){const A=this.cache;A[0]!==e&&(t.uniform1i(this.addr,e),A[0]=e)}function Fi(t,e){const A=this.cache;Bi(A,e)||(t.uniform2iv(this.addr,e),Di(A,e))}function Gi(t,e){const A=this.cache;Bi(A,e)||(t.uniform3iv(this.addr,e),Di(A,e))}function Oi(t,e){const A=this.cache;Bi(A,e)||(t.uniform4iv(this.addr,e),Di(A,e))}function Vi(t,e){const A=this.cache;A[0]!==e&&(t.uniform1ui(this.addr,e),A[0]=e)}function Hi(t,e){const A=this.cache;Bi(A,e)||(t.uniform2uiv(this.addr,e),Di(A,e))}function Wi(t,e){const A=this.cache;Bi(A,e)||(t.uniform3uiv(this.addr,e),Di(A,e))}function Yi(t,e){const A=this.cache;Bi(A,e)||(t.uniform4uiv(this.addr,e),Di(A,e))}function Ji(t,e,A){const i=this.cache,n=A.allocateTextureUnit();i[0]!==n&&(t.uniform1i(this.addr,n),i[0]=n),A.setTexture2D(e||Ci,n)}function Ki(t,e,A){const i=this.cache,n=A.allocateTextureUnit();i[0]!==n&&(t.uniform1i(this.addr,n),i[0]=n),A.setTexture3D(e||_i,n)}function Zi(t,e,A){const i=this.cache,n=A.allocateTextureUnit();i[0]!==n&&(t.uniform1i(this.addr,n),i[0]=n),A.setTextureCube(e||Mi,n)}function qi(t,e,A){const i=this.cache,n=A.allocateTextureUnit();i[0]!==n&&(t.uniform1i(this.addr,n),i[0]=n),A.setTexture2DArray(e||Ii,n)}function Xi(t,e){t.uniform1fv(this.addr,e)}function ji(t,e){const A=Si(e,this.size,2);t.uniform2fv(this.addr,A)}function $i(t,e){const A=Si(e,this.size,3);t.uniform3fv(this.addr,A)}function tn(t,e){const A=Si(e,this.size,4);t.uniform4fv(this.addr,A)}function en(t,e){const A=Si(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,A)}function An(t,e){const A=Si(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,A)}function nn(t,e){const A=Si(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,A)}function rn(t,e){t.uniform1iv(this.addr,e)}function sn(t,e){t.uniform2iv(this.addr,e)}function an(t,e){t.uniform3iv(this.addr,e)}function on(t,e){t.uniform4iv(this.addr,e)}function ln(t,e){t.uniform1uiv(this.addr,e)}function cn(t,e){t.uniform2uiv(this.addr,e)}function hn(t,e){t.uniform3uiv(this.addr,e)}function un(t,e){t.uniform4uiv(this.addr,e)}function dn(t,e,A){const i=e.length,n=Qi(A,i);t.uniform1iv(this.addr,n);for(let t=0;t!==i;++t)A.setTexture2D(e[t]||Ci,n[t])}function gn(t,e,A){const i=e.length,n=Qi(A,i);t.uniform1iv(this.addr,n);for(let t=0;t!==i;++t)A.setTexture3D(e[t]||_i,n[t])}function pn(t,e,A){const i=e.length,n=Qi(A,i);t.uniform1iv(this.addr,n);for(let t=0;t!==i;++t)A.setTextureCube(e[t]||Mi,n[t])}function fn(t,e,A){const i=e.length,n=Qi(A,i);t.uniform1iv(this.addr,n);for(let t=0;t!==i;++t)A.setTexture2DArray(e[t]||Ii,n[t])}class mn{constructor(t,e,A){this.id=t,this.addr=A,this.cache=[],this.setValue=function(t){switch(t){case 5126:return Ti;case 35664:return Li;case 35665:return Ni;case 35666:return Ri;case 35674:return Pi;case 35675:return ki;case 35676:return Ui;case 5124:case 35670:return zi;case 35667:case 35671:return Fi;case 35668:case 35672:return Gi;case 35669:case 35673:return Oi;case 5125:return Vi;case 36294:return Hi;case 36295:return Wi;case 36296:return Yi;case 35678:case 36198:case 36298:case 36306:case 35682:return Ji;case 35679:case 36299:case 36307:return Ki;case 35680:case 36300:case 36308:case 36293:return Zi;case 36289:case 36303:case 36311:case 36292:return qi}}(e.type)}}class vn{constructor(t,e,A){this.id=t,this.addr=A,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Xi;case 35664:return ji;case 35665:return $i;case 35666:return tn;case 35674:return en;case 35675:return An;case 35676:return nn;case 5124:case 35670:return rn;case 35667:case 35671:return sn;case 35668:case 35672:return an;case 35669:case 35673:return on;case 5125:return ln;case 36294:return cn;case 36295:return hn;case 36296:return un;case 35678:case 36198:case 36298:case 36306:case 35682:return dn;case 35679:case 36299:case 36307:return gn;case 35680:case 36300:case 36308:case 36293:return pn;case 36289:case 36303:case 36311:case 36292:return fn}}(e.type)}}class Cn{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,A){const i=this.seq;for(let n=0,r=i.length;n!==r;++n){const r=i[n];r.setValue(t,e[r.id],A)}}}const In=/(\w+)(\])?(\[|\.)?/g;function _n(t,e){t.seq.push(e),t.map[e.id]=e}function Mn(t,e,A){const i=t.name,n=i.length;for(In.lastIndex=0;;){const r=In.exec(i),s=In.lastIndex;let a=r[1];const o="]"===r[2],l=r[3];if(o&&(a|=0),void 0===l||"["===l&&s+2===n){_n(A,void 0===l?new mn(a,t,e):new vn(a,t,e));break}{let t=A.map[a];void 0===t&&(t=new Cn(a),_n(A,t)),A=t}}}class yn{constructor(t,e){this.seq=[],this.map={};const A=t.getProgramParameter(e,35718);for(let i=0;i<A;++i){const A=t.getActiveUniform(e,i);Mn(A,t.getUniformLocation(e,A.name),this)}}setValue(t,e,A,i){const n=this.map[e];void 0!==n&&n.setValue(t,A,i)}setOptional(t,e,A){const i=e[A];void 0!==i&&this.setValue(t,A,i)}static upload(t,e,A,i){for(let n=0,r=e.length;n!==r;++n){const r=e[n],s=A[r.id];!1!==s.needsUpdate&&r.setValue(t,s.value,i)}}static seqWithValue(t,e){const A=[];for(let i=0,n=t.length;i!==n;++i){const n=t[i];n.id in e&&A.push(n)}return A}}function xn(t,e,A){const i=t.createShader(e);return t.shaderSource(i,A),t.compileShader(i),i}let En=0;function wn(t,e,A){const i=t.getShaderParameter(e,35713),n=t.getShaderInfoLog(e).trim();if(i&&""===n)return"";const r=/ERROR: 0:(\d+)/.exec(n);if(r){const i=parseInt(r[1]);return A.toUpperCase()+"\n\n"+n+"\n\n"+function(t,e){const A=t.split("\n"),i=[],n=Math.max(e-6,0),r=Math.min(e+6,A.length);for(let t=n;t<r;t++){const n=t+1;i.push(`${n===e?">":" "} ${n}: ${A[t]}`)}return i.join("\n")}(t.getShaderSource(e),i)}return n}function bn(t,e){const A=function(t){switch(t){case D:return["Linear","( value )"];case Q:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+A[0]+A[1]+"; }"}function Sn(t,e){let A;switch(e){case 1:A="Linear";break;case 2:A="Reinhard";break;case 3:A="OptimizedCineon";break;case 4:A="ACESFilmic";break;case 5:A="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),A="Linear"}return"vec3 "+t+"( vec3 color ) { return "+A+"ToneMapping( color ); }"}function Bn(t){return""!==t}function Dn(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Qn(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Tn=/^[ \t]*#include +<([\w\d./]+)>/gm;function Ln(t){return t.replace(Tn,Nn)}function Nn(t,e){const A=zA[e];if(void 0===A)throw new Error("Can not resolve #include <"+e+">");return Ln(A)}const Rn=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Pn=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function kn(t){return t.replace(Pn,zn).replace(Rn,Un)}function Un(t,e,A,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),zn(t,e,A,i)}function zn(t,e,A,i){let n="";for(let t=parseInt(e);t<parseInt(A);t++)n+=i.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return n}function Fn(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function Gn(t,e,r,s){const a=t.getContext(),o=r.defines;let l=r.vertexShader,c=r.fragmentShader;const h=function(t){let e="SHADOWMAP_TYPE_BASIC";return 1===t.shadowMapType?e="SHADOWMAP_TYPE_PCF":2===t.shadowMapType?e="SHADOWMAP_TYPE_PCF_SOFT":3===t.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(r),u=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case A:case i:e="ENVMAP_TYPE_CUBE";break;case n:e="ENVMAP_TYPE_CUBE_UV"}return e}(r),d=function(t){let e="ENVMAP_MODE_REFLECTION";t.envMap&&t.envMapMode===i&&(e="ENVMAP_MODE_REFRACTION");return e}(r),g=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(r),p=function(t){const e=t.envMapCubeUVHeight;if(null===e)return null;const A=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,A),112)),texelHeight:i,maxMip:A}}(r),f=r.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUVHeight||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap||t.transmission)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Bn).join("\n")}(r),m=function(t){const e=[];for(const A in t){const i=t[A];!1!==i&&e.push("#define "+A+" "+i)}return e.join("\n")}(o),v=a.createProgram();let C,I,_=r.glslVersion?"#version "+r.glslVersion+"\n":"";r.isRawShaderMaterial?(C=[m].filter(Bn).join("\n"),C.length>0&&(C+="\n"),I=[f,m].filter(Bn).join("\n"),I.length>0&&(I+="\n")):(C=[Fn(r),"#define SHADER_NAME "+r.shaderName,m,r.instancing?"#define USE_INSTANCING":"",r.instancingColor?"#define USE_INSTANCING_COLOR":"",r.supportsVertexTextures?"#define VERTEX_TEXTURES":"",r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+d:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",r.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",r.displacementMap&&r.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",r.specularColorMap?"#define USE_SPECULARCOLORMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.transmission?"#define USE_TRANSMISSION":"",r.transmissionMap?"#define USE_TRANSMISSIONMAP":"",r.thicknessMap?"#define USE_THICKNESSMAP":"",r.sheenColorMap?"#define USE_SHEENCOLORMAP":"",r.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors?"#define USE_COLOR":"",r.vertexAlphas?"#define USE_COLOR_ALPHA":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.flatShading?"#define FLAT_SHADED":"",r.skinning?"#define USE_SKINNING":"",r.morphTargets?"#define USE_MORPHTARGETS":"",r.morphNormals&&!1===r.flatShading?"#define USE_MORPHNORMALS":"",r.morphColors&&r.isWebGL2?"#define USE_MORPHCOLORS":"",r.morphTargetsCount>0&&r.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",r.morphTargetsCount>0&&r.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+r.morphTextureStride:"",r.morphTargetsCount>0&&r.isWebGL2?"#define MORPHTARGETS_COUNT "+r.morphTargetsCount:"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+h:"",r.sizeAttenuation?"#define USE_SIZEATTENUATION":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Bn).join("\n"),I=[f,Fn(r),"#define SHADER_NAME "+r.shaderName,m,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.matcap?"#define USE_MATCAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+u:"",r.envMap?"#define "+d:"",r.envMap?"#define "+g:"",p?"#define CUBEUV_TEXEL_WIDTH "+p.texelWidth:"",p?"#define CUBEUV_TEXEL_HEIGHT "+p.texelHeight:"",p?"#define CUBEUV_MAX_MIP "+p.maxMip+".0":"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoat?"#define USE_CLEARCOAT":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.iridescence?"#define USE_IRIDESCENCE":"",r.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",r.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",r.specularColorMap?"#define USE_SPECULARCOLORMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.alphaTest?"#define USE_ALPHATEST":"",r.sheen?"#define USE_SHEEN":"",r.sheenColorMap?"#define USE_SHEENCOLORMAP":"",r.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",r.transmission?"#define USE_TRANSMISSION":"",r.transmissionMap?"#define USE_TRANSMISSIONMAP":"",r.thicknessMap?"#define USE_THICKNESSMAP":"",r.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors||r.instancingColor?"#define USE_COLOR":"",r.vertexAlphas?"#define USE_COLOR_ALPHA":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.gradientMap?"#define USE_GRADIENTMAP":"",r.flatShading?"#define FLAT_SHADED":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+h:"",r.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",r.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==r.toneMapping?"#define TONE_MAPPING":"",0!==r.toneMapping?zA.tonemapping_pars_fragment:"",0!==r.toneMapping?Sn("toneMapping",r.toneMapping):"",r.dithering?"#define DITHERING":"",r.opaque?"#define OPAQUE":"",zA.encodings_pars_fragment,bn("linearToOutputTexel",r.outputEncoding),r.useDepthPacking?"#define DEPTH_PACKING "+r.depthPacking:"","\n"].filter(Bn).join("\n")),l=Ln(l),l=Dn(l,r),l=Qn(l,r),c=Ln(c),c=Dn(c,r),c=Qn(c,r),l=kn(l),c=kn(c),r.isWebGL2&&!0!==r.isRawShaderMaterial&&(_="#version 300 es\n",C=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+C,I=["#define varying in",r.glslVersion===P?"":"layout(location = 0) out highp vec4 pc_fragColor;",r.glslVersion===P?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+I);const M=_+I+c,y=xn(a,35633,_+C+l),x=xn(a,35632,M);if(a.attachShader(v,y),a.attachShader(v,x),void 0!==r.index0AttributeName?a.bindAttribLocation(v,0,r.index0AttributeName):!0===r.morphTargets&&a.bindAttribLocation(v,0,"position"),a.linkProgram(v),t.debug.checkShaderErrors){const t=a.getProgramInfoLog(v).trim(),e=a.getShaderInfoLog(y).trim(),A=a.getShaderInfoLog(x).trim();let i=!0,n=!0;if(!1===a.getProgramParameter(v,35714)){i=!1;const e=wn(a,y,"vertex"),A=wn(a,x,"fragment");console.error("THREE.WebGLProgram: Shader Error "+a.getError()+" - VALIDATE_STATUS "+a.getProgramParameter(v,35715)+"\n\nProgram Info Log: "+t+"\n"+e+"\n"+A)}else""!==t?console.warn("THREE.WebGLProgram: Program Info Log:",t):""!==e&&""!==A||(n=!1);n&&(this.diagnostics={runnable:i,programLog:t,vertexShader:{log:e,prefix:C},fragmentShader:{log:A,prefix:I}})}let E,w;return a.deleteShader(y),a.deleteShader(x),this.getUniforms=function(){return void 0===E&&(E=new yn(a,v)),E},this.getAttributes=function(){return void 0===w&&(w=function(t,e){const A={},i=t.getProgramParameter(e,35721);for(let n=0;n<i;n++){const i=t.getActiveAttrib(e,n),r=i.name;let s=1;35674===i.type&&(s=2),35675===i.type&&(s=3),35676===i.type&&(s=4),A[r]={type:i.type,location:t.getAttribLocation(e,r),locationSize:s}}return A}(a,v)),w},this.destroy=function(){s.releaseStatesOfProgram(this),a.deleteProgram(v),this.program=void 0},this.name=r.shaderName,this.id=En++,this.cacheKey=e,this.usedTimes=1,this.program=v,this.vertexShader=y,this.fragmentShader=x,this}let On=0;class Vn{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,A=t.fragmentShader,i=this._getShaderStage(e),n=this._getShaderStage(A),r=this._getShaderCacheForMaterial(t);return!1===r.has(i)&&(r.add(i),i.usedTimes++),!1===r.has(n)&&(r.add(n),n.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const t of e)t.usedTimes--,0===t.usedTimes&&this.shaderCache.delete(t.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;return!1===e.has(t)&&e.set(t,new Set),e.get(t)}_getShaderStage(t){const e=this.shaderCache;if(!1===e.has(t)){const A=new Hn(t);e.set(t,A)}return e.get(t)}}class Hn{constructor(t){this.id=On++,this.code=t,this.usedTimes=0}}function Wn(t,e,A,i,r,s,a){const o=new ce,l=new Vn,c=[],h=r.isWebGL2,u=r.logarithmicDepthBuffer,d=r.vertexTextures;let g=r.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(s,o,c,f,m){const v=f.fog,C=m.geometry,I=s.isMeshStandardMaterial?f.environment:null,_=(s.isMeshStandardMaterial?A:e).get(s.envMap||I),M=_&&_.mapping===n?_.image.height:null,y=p[s.type];null!==s.precision&&(g=r.getMaxPrecision(s.precision),g!==s.precision&&console.warn("THREE.WebGLProgram.getParameters:",s.precision,"not supported, using",g,"instead."));const x=C.morphAttributes.position||C.morphAttributes.normal||C.morphAttributes.color,E=void 0!==x?x.length:0;let w,b,S,B,T=0;if(void 0!==C.morphAttributes.position&&(T=1),void 0!==C.morphAttributes.normal&&(T=2),void 0!==C.morphAttributes.color&&(T=3),y){const t=GA[y];w=t.vertexShader,b=t.fragmentShader}else w=s.vertexShader,b=s.fragmentShader,l.update(s),S=l.getVertexShaderID(s),B=l.getFragmentShaderID(s);const L=t.getRenderTarget(),N=s.alphaTest>0,R=s.clearcoat>0,P=s.iridescence>0;return{isWebGL2:h,shaderID:y,shaderName:s.type,vertexShader:w,fragmentShader:b,defines:s.defines,customVertexShaderID:S,customFragmentShaderID:B,isRawShaderMaterial:!0===s.isRawShaderMaterial,glslVersion:s.glslVersion,precision:g,instancing:!0===m.isInstancedMesh,instancingColor:!0===m.isInstancedMesh&&null!==m.instanceColor,supportsVertexTextures:d,outputEncoding:null===L?t.outputEncoding:!0===L.isXRRenderTarget?L.texture.encoding:D,map:!!s.map,matcap:!!s.matcap,envMap:!!_,envMapMode:_&&_.mapping,envMapCubeUVHeight:M,lightMap:!!s.lightMap,aoMap:!!s.aoMap,emissiveMap:!!s.emissiveMap,bumpMap:!!s.bumpMap,normalMap:!!s.normalMap,objectSpaceNormalMap:1===s.normalMapType,tangentSpaceNormalMap:0===s.normalMapType,decodeVideoTexture:!!s.map&&!0===s.map.isVideoTexture&&s.map.encoding===Q,clearcoat:R,clearcoatMap:R&&!!s.clearcoatMap,clearcoatRoughnessMap:R&&!!s.clearcoatRoughnessMap,clearcoatNormalMap:R&&!!s.clearcoatNormalMap,iridescence:P,iridescenceMap:P&&!!s.iridescenceMap,iridescenceThicknessMap:P&&!!s.iridescenceThicknessMap,displacementMap:!!s.displacementMap,roughnessMap:!!s.roughnessMap,metalnessMap:!!s.metalnessMap,specularMap:!!s.specularMap,specularIntensityMap:!!s.specularIntensityMap,specularColorMap:!!s.specularColorMap,opaque:!1===s.transparent&&1===s.blending,alphaMap:!!s.alphaMap,alphaTest:N,gradientMap:!!s.gradientMap,sheen:s.sheen>0,sheenColorMap:!!s.sheenColorMap,sheenRoughnessMap:!!s.sheenRoughnessMap,transmission:s.transmission>0,transmissionMap:!!s.transmissionMap,thicknessMap:!!s.thicknessMap,combine:s.combine,vertexTangents:!!s.normalMap&&!!C.attributes.tangent,vertexColors:s.vertexColors,vertexAlphas:!0===s.vertexColors&&!!C.attributes.color&&4===C.attributes.color.itemSize,vertexUvs:!!(s.map||s.bumpMap||s.normalMap||s.specularMap||s.alphaMap||s.emissiveMap||s.roughnessMap||s.metalnessMap||s.clearcoatMap||s.clearcoatRoughnessMap||s.clearcoatNormalMap||s.iridescenceMap||s.iridescenceThicknessMap||s.displacementMap||s.transmissionMap||s.thicknessMap||s.specularIntensityMap||s.specularColorMap||s.sheenColorMap||s.sheenRoughnessMap),uvsVertexOnly:!(s.map||s.bumpMap||s.normalMap||s.specularMap||s.alphaMap||s.emissiveMap||s.roughnessMap||s.metalnessMap||s.clearcoatNormalMap||s.iridescenceMap||s.iridescenceThicknessMap||s.transmission>0||s.transmissionMap||s.thicknessMap||s.specularIntensityMap||s.specularColorMap||s.sheen>0||s.sheenColorMap||s.sheenRoughnessMap||!s.displacementMap),fog:!!v,useFog:!0===s.fog,fogExp2:v&&v.isFogExp2,flatShading:!!s.flatShading,sizeAttenuation:s.sizeAttenuation,logarithmicDepthBuffer:u,skinning:!0===m.isSkinnedMesh,morphTargets:void 0!==C.morphAttributes.position,morphNormals:void 0!==C.morphAttributes.normal,morphColors:void 0!==C.morphAttributes.color,morphTargetsCount:E,morphTextureStride:T,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:s.dithering,shadowMapEnabled:t.shadowMap.enabled&&c.length>0,shadowMapType:t.shadowMap.type,toneMapping:s.toneMapped?t.toneMapping:0,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:s.premultipliedAlpha,doubleSided:2===s.side,flipSided:1===s.side,useDepthPacking:!!s.depthPacking,depthPacking:s.depthPacking||0,index0AttributeName:s.index0AttributeName,extensionDerivatives:s.extensions&&s.extensions.derivatives,extensionFragDepth:s.extensions&&s.extensions.fragDepth,extensionDrawBuffers:s.extensions&&s.extensions.drawBuffers,extensionShaderTextureLOD:s.extensions&&s.extensions.shaderTextureLOD,rendererExtensionFragDepth:h||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:h||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:h||i.has("EXT_shader_texture_lod"),customProgramCacheKey:s.customProgramCacheKey()}},getProgramCacheKey:function(e){const A=[];if(e.shaderID?A.push(e.shaderID):(A.push(e.customVertexShaderID),A.push(e.customFragmentShaderID)),void 0!==e.defines)for(const t in e.defines)A.push(t),A.push(e.defines[t]);return!1===e.isRawShaderMaterial&&(!function(t,e){t.push(e.precision),t.push(e.outputEncoding),t.push(e.envMapMode),t.push(e.envMapCubeUVHeight),t.push(e.combine),t.push(e.vertexUvs),t.push(e.fogExp2),t.push(e.sizeAttenuation),t.push(e.morphTargetsCount),t.push(e.morphAttributeCount),t.push(e.numDirLights),t.push(e.numPointLights),t.push(e.numSpotLights),t.push(e.numHemiLights),t.push(e.numRectAreaLights),t.push(e.numDirLightShadows),t.push(e.numPointLightShadows),t.push(e.numSpotLightShadows),t.push(e.shadowMapType),t.push(e.toneMapping),t.push(e.numClippingPlanes),t.push(e.numClipIntersection),t.push(e.depthPacking)}(A,e),function(t,e){o.disableAll(),e.isWebGL2&&o.enable(0);e.supportsVertexTextures&&o.enable(1);e.instancing&&o.enable(2);e.instancingColor&&o.enable(3);e.map&&o.enable(4);e.matcap&&o.enable(5);e.envMap&&o.enable(6);e.lightMap&&o.enable(7);e.aoMap&&o.enable(8);e.emissiveMap&&o.enable(9);e.bumpMap&&o.enable(10);e.normalMap&&o.enable(11);e.objectSpaceNormalMap&&o.enable(12);e.tangentSpaceNormalMap&&o.enable(13);e.clearcoat&&o.enable(14);e.clearcoatMap&&o.enable(15);e.clearcoatRoughnessMap&&o.enable(16);e.clearcoatNormalMap&&o.enable(17);e.iridescence&&o.enable(18);e.iridescenceMap&&o.enable(19);e.iridescenceThicknessMap&&o.enable(20);e.displacementMap&&o.enable(21);e.specularMap&&o.enable(22);e.roughnessMap&&o.enable(23);e.metalnessMap&&o.enable(24);e.gradientMap&&o.enable(25);e.alphaMap&&o.enable(26);e.alphaTest&&o.enable(27);e.vertexColors&&o.enable(28);e.vertexAlphas&&o.enable(29);e.vertexUvs&&o.enable(30);e.vertexTangents&&o.enable(31);e.uvsVertexOnly&&o.enable(32);e.fog&&o.enable(33);t.push(o.mask),o.disableAll(),e.useFog&&o.enable(0);e.flatShading&&o.enable(1);e.logarithmicDepthBuffer&&o.enable(2);e.skinning&&o.enable(3);e.morphTargets&&o.enable(4);e.morphNormals&&o.enable(5);e.morphColors&&o.enable(6);e.premultipliedAlpha&&o.enable(7);e.shadowMapEnabled&&o.enable(8);e.physicallyCorrectLights&&o.enable(9);e.doubleSided&&o.enable(10);e.flipSided&&o.enable(11);e.useDepthPacking&&o.enable(12);e.dithering&&o.enable(13);e.specularIntensityMap&&o.enable(14);e.specularColorMap&&o.enable(15);e.transmission&&o.enable(16);e.transmissionMap&&o.enable(17);e.thicknessMap&&o.enable(18);e.sheen&&o.enable(19);e.sheenColorMap&&o.enable(20);e.sheenRoughnessMap&&o.enable(21);e.decodeVideoTexture&&o.enable(22);e.opaque&&o.enable(23);t.push(o.mask)}(A,e),A.push(t.outputEncoding)),A.push(e.customProgramCacheKey),A.join()},getUniforms:function(t){const e=p[t.type];let A;if(e){const t=GA[e];A=_A.clone(t.uniforms)}else A=t.uniforms;return A},acquireProgram:function(e,A){let i;for(let t=0,e=c.length;t<e;t++){const e=c[t];if(e.cacheKey===A){i=e,++i.usedTimes;break}}return void 0===i&&(i=new Gn(t,A,e,s),c.push(i)),i},releaseProgram:function(t){if(0==--t.usedTimes){const e=c.indexOf(t);c[e]=c[c.length-1],c.pop(),t.destroy()}},releaseShaderCache:function(t){l.remove(t)},programs:c,dispose:function(){l.dispose()}}}function Yn(){let t=new WeakMap;return{get:function(e){let A=t.get(e);return void 0===A&&(A={},t.set(e,A)),A},remove:function(e){t.delete(e)},update:function(e,A,i){t.get(e)[A]=i},dispose:function(){t=new WeakMap}}}function Jn(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Kn(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Zn(){const t=[];let e=0;const A=[],i=[],n=[];function r(A,i,n,r,s,a){let o=t[e];return void 0===o?(o={id:A.id,object:A,geometry:i,material:n,groupOrder:r,renderOrder:A.renderOrder,z:s,group:a},t[e]=o):(o.id=A.id,o.object=A,o.geometry=i,o.material=n,o.groupOrder=r,o.renderOrder=A.renderOrder,o.z=s,o.group=a),e++,o}return{opaque:A,transmissive:i,transparent:n,init:function(){e=0,A.length=0,i.length=0,n.length=0},push:function(t,e,s,a,o,l){const c=r(t,e,s,a,o,l);s.transmission>0?i.push(c):!0===s.transparent?n.push(c):A.push(c)},unshift:function(t,e,s,a,o,l){const c=r(t,e,s,a,o,l);s.transmission>0?i.unshift(c):!0===s.transparent?n.unshift(c):A.unshift(c)},finish:function(){for(let A=e,i=t.length;A<i;A++){const e=t[A];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.group=null}},sort:function(t,e){A.length>1&&A.sort(t||Jn),i.length>1&&i.sort(e||Kn),n.length>1&&n.sort(e||Kn)}}}function qn(){let t=new WeakMap;return{get:function(e,A){let i;return!1===t.has(e)?(i=new Zn,t.set(e,[i])):A>=t.get(e).length?(i=new Zn,t.get(e).push(i)):i=t.get(e)[A],i},dispose:function(){t=new WeakMap}}}function Xn(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let A;switch(e.type){case"DirectionalLight":A={direction:new Mt,color:new ht};break;case"SpotLight":A={position:new Mt,direction:new Mt,color:new ht,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":A={position:new Mt,color:new ht,distance:0,decay:0};break;case"HemisphereLight":A={direction:new Mt,skyColor:new ht,groundColor:new ht};break;case"RectAreaLight":A={color:new ht,position:new Mt,halfWidth:new Mt,halfHeight:new Mt}}return t[e.id]=A,A}}}let jn=0;function $n(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function tr(t,e){const A=new Xn,i=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let A;switch(e.type){case"DirectionalLight":case"SpotLight":A={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new X};break;case"PointLight":A={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new X,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=A,A}}}(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let t=0;t<9;t++)n.probe.push(new Mt);const r=new Mt,s=new $t,a=new $t;return{setup:function(r,s){let a=0,o=0,l=0;for(let t=0;t<9;t++)n.probe[t].set(0,0,0);let c=0,h=0,u=0,d=0,g=0,p=0,f=0,m=0;r.sort($n);const v=!0!==s?Math.PI:1;for(let t=0,e=r.length;t<e;t++){const e=r[t],s=e.color,C=e.intensity,I=e.distance,_=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)a+=s.r*C*v,o+=s.g*C*v,l+=s.b*C*v;else if(e.isLightProbe)for(let t=0;t<9;t++)n.probe[t].addScaledVector(e.sh.coefficients[t],C);else if(e.isDirectionalLight){const t=A.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*v),e.castShadow){const t=e.shadow,A=i.get(e);A.shadowBias=t.bias,A.shadowNormalBias=t.normalBias,A.shadowRadius=t.radius,A.shadowMapSize=t.mapSize,n.directionalShadow[c]=A,n.directionalShadowMap[c]=_,n.directionalShadowMatrix[c]=e.shadow.matrix,p++}n.directional[c]=t,c++}else if(e.isSpotLight){const t=A.get(e);if(t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(s).multiplyScalar(C*v),t.distance=I,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,e.castShadow){const t=e.shadow,A=i.get(e);A.shadowBias=t.bias,A.shadowNormalBias=t.normalBias,A.shadowRadius=t.radius,A.shadowMapSize=t.mapSize,n.spotShadow[u]=A,n.spotShadowMap[u]=_,n.spotShadowMatrix[u]=e.shadow.matrix,m++}n.spot[u]=t,u++}else if(e.isRectAreaLight){const t=A.get(e);t.color.copy(s).multiplyScalar(C),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),n.rectArea[d]=t,d++}else if(e.isPointLight){const t=A.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*v),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,A=i.get(e);A.shadowBias=t.bias,A.shadowNormalBias=t.normalBias,A.shadowRadius=t.radius,A.shadowMapSize=t.mapSize,A.shadowCameraNear=t.camera.near,A.shadowCameraFar=t.camera.far,n.pointShadow[h]=A,n.pointShadowMap[h]=_,n.pointShadowMatrix[h]=e.shadow.matrix,f++}n.point[h]=t,h++}else if(e.isHemisphereLight){const t=A.get(e);t.skyColor.copy(e.color).multiplyScalar(C*v),t.groundColor.copy(e.groundColor).multiplyScalar(C*v),n.hemi[g]=t,g++}}d>0&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(n.rectAreaLTC1=FA.LTC_FLOAT_1,n.rectAreaLTC2=FA.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(n.rectAreaLTC1=FA.LTC_HALF_1,n.rectAreaLTC2=FA.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),n.ambient[0]=a,n.ambient[1]=o,n.ambient[2]=l;const C=n.hash;C.directionalLength===c&&C.pointLength===h&&C.spotLength===u&&C.rectAreaLength===d&&C.hemiLength===g&&C.numDirectionalShadows===p&&C.numPointShadows===f&&C.numSpotShadows===m||(n.directional.length=c,n.spot.length=u,n.rectArea.length=d,n.point.length=h,n.hemi.length=g,n.directionalShadow.length=p,n.directionalShadowMap.length=p,n.pointShadow.length=f,n.pointShadowMap.length=f,n.spotShadow.length=m,n.spotShadowMap.length=m,n.directionalShadowMatrix.length=p,n.pointShadowMatrix.length=f,n.spotShadowMatrix.length=m,C.directionalLength=c,C.pointLength=h,C.spotLength=u,C.rectAreaLength=d,C.hemiLength=g,C.numDirectionalShadows=p,C.numPointShadows=f,C.numSpotShadows=m,n.version=jn++)},setupView:function(t,e){let A=0,i=0,o=0,l=0,c=0;const h=e.matrixWorldInverse;for(let e=0,u=t.length;e<u;e++){const u=t[e];if(u.isDirectionalLight){const t=n.directional[A];t.direction.setFromMatrixPosition(u.matrixWorld),r.setFromMatrixPosition(u.target.matrixWorld),t.direction.sub(r),t.direction.transformDirection(h),A++}else if(u.isSpotLight){const t=n.spot[o];t.position.setFromMatrixPosition(u.matrixWorld),t.position.applyMatrix4(h),t.direction.setFromMatrixPosition(u.matrixWorld),r.setFromMatrixPosition(u.target.matrixWorld),t.direction.sub(r),t.direction.transformDirection(h),o++}else if(u.isRectAreaLight){const t=n.rectArea[l];t.position.setFromMatrixPosition(u.matrixWorld),t.position.applyMatrix4(h),a.identity(),s.copy(u.matrixWorld),s.premultiply(h),a.extractRotation(s),t.halfWidth.set(.5*u.width,0,0),t.halfHeight.set(0,.5*u.height,0),t.halfWidth.applyMatrix4(a),t.halfHeight.applyMatrix4(a),l++}else if(u.isPointLight){const t=n.point[i];t.position.setFromMatrixPosition(u.matrixWorld),t.position.applyMatrix4(h),i++}else if(u.isHemisphereLight){const t=n.hemi[c];t.direction.setFromMatrixPosition(u.matrixWorld),t.direction.transformDirection(h),c++}}},state:n}}function er(t,e){const A=new tr(t,e),i=[],n=[];return{init:function(){i.length=0,n.length=0},state:{lightsArray:i,shadowsArray:n,lights:A},setupLights:function(t){A.setup(i,t)},setupLightsView:function(t){A.setupView(i,t)},pushLight:function(t){i.push(t)},pushShadow:function(t){n.push(t)}}}function Ar(t,e){let A=new WeakMap;return{get:function(i,n=0){let r;return!1===A.has(i)?(r=new er(t,e),A.set(i,[r])):n>=A.get(i).length?(r=new er(t,e),A.get(i).push(r)):r=A.get(i)[n],r},dispose:function(){A=new WeakMap}}}class ir extends ke{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class nr extends ke{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new Mt,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}function rr(t,e,A){let i=new RA;const n=new X,r=new X,s=new vt,a=new ir({depthPacking:3201}),l=new nr,c={},h=A.maxTextureSize,u={0:1,1:0,2:2},d=new MA({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new X},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),g=d.clone();g.defines.HORIZONTAL_PASS=1;const p=new je;p.setAttribute("position",new Ge(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new fA(p,d),v=this;function C(A,i){const n=e.update(m);d.defines.VSM_SAMPLES!==A.blurSamples&&(d.defines.VSM_SAMPLES=A.blurSamples,g.defines.VSM_SAMPLES=A.blurSamples,d.needsUpdate=!0,g.needsUpdate=!0),d.uniforms.shadow_pass.value=A.map.texture,d.uniforms.resolution.value=A.mapSize,d.uniforms.radius.value=A.radius,t.setRenderTarget(A.mapPass),t.clear(),t.renderBufferDirect(i,null,n,d,m,null),g.uniforms.shadow_pass.value=A.mapPass.texture,g.uniforms.resolution.value=A.mapSize,g.uniforms.radius.value=A.radius,t.setRenderTarget(A.map),t.clear(),t.renderBufferDirect(i,null,n,g,m,null)}function I(e,A,i,n,r,s){let o=null;const h=!0===i.isPointLight?e.customDistanceMaterial:e.customDepthMaterial;if(o=void 0!==h?h:!0===i.isPointLight?l:a,t.localClippingEnabled&&!0===A.clipShadows&&0!==A.clippingPlanes.length||A.displacementMap&&0!==A.displacementScale||A.alphaMap&&A.alphaTest>0){const t=o.uuid,e=A.uuid;let i=c[t];void 0===i&&(i={},c[t]=i);let n=i[e];void 0===n&&(n=o.clone(),i[e]=n),o=n}return o.visible=A.visible,o.wireframe=A.wireframe,o.side=3===s?null!==A.shadowSide?A.shadowSide:A.side:null!==A.shadowSide?A.shadowSide:u[A.side],o.alphaMap=A.alphaMap,o.alphaTest=A.alphaTest,o.clipShadows=A.clipShadows,o.clippingPlanes=A.clippingPlanes,o.clipIntersection=A.clipIntersection,o.displacementMap=A.displacementMap,o.displacementScale=A.displacementScale,o.displacementBias=A.displacementBias,o.wireframeLinewidth=A.wireframeLinewidth,o.linewidth=A.linewidth,!0===i.isPointLight&&!0===o.isMeshDistanceMaterial&&(o.referencePosition.setFromMatrixPosition(i.matrixWorld),o.nearDistance=n,o.farDistance=r),o}function _(A,n,r,s,a){if(!1===A.visible)return;if(A.layers.test(n.layers)&&(A.isMesh||A.isLine||A.isPoints)&&(A.castShadow||A.receiveShadow&&3===a)&&(!A.frustumCulled||i.intersectsObject(A))){A.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,A.matrixWorld);const i=e.update(A),n=A.material;if(Array.isArray(n)){const e=i.groups;for(let o=0,l=e.length;o<l;o++){const l=e[o],c=n[l.materialIndex];if(c&&c.visible){const e=I(A,c,s,r.near,r.far,a);t.renderBufferDirect(r,null,i,e,A,l)}}}else if(n.visible){const e=I(A,n,s,r.near,r.far,a);t.renderBufferDirect(r,null,i,e,A,null)}}const o=A.children;for(let t=0,e=o.length;t<e;t++)_(o[t],n,r,s,a)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(e,A,a){if(!1===v.enabled)return;if(!1===v.autoUpdate&&!1===v.needsUpdate)return;if(0===e.length)return;const l=t.getRenderTarget(),c=t.getActiveCubeFace(),u=t.getActiveMipmapLevel(),d=t.state;d.setBlending(0),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let l=0,c=e.length;l<c;l++){const c=e[l],u=c.shadow;if(void 0===u){console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");continue}if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;n.copy(u.mapSize);const g=u.getFrameExtents();if(n.multiply(g),r.copy(u.mapSize),(n.x>h||n.y>h)&&(n.x>h&&(r.x=Math.floor(h/g.x),n.x=r.x*g.x,u.mapSize.x=r.x),n.y>h&&(r.y=Math.floor(h/g.y),n.y=r.y*g.y,u.mapSize.y=r.y)),null!==u.map||u.isPointLightShadow||3!==this.type||(u.map=new Ct(n.x,n.y),u.map.texture.name=c.name+".shadowMap",u.mapPass=new Ct(n.x,n.y),u.camera.updateProjectionMatrix()),null===u.map){const t={minFilter:o,magFilter:o,format:f};u.map=new Ct(n.x,n.y,t),u.map.texture.name=c.name+".shadowMap",u.camera.updateProjectionMatrix()}t.setRenderTarget(u.map),t.clear();const p=u.getViewportCount();for(let t=0;t<p;t++){const e=u.getViewport(t);s.set(r.x*e.x,r.y*e.y,r.x*e.z,r.y*e.w),d.viewport(s),u.updateMatrices(c,t),i=u.getFrustum(),_(A,a,u.camera,c,this.type)}u.isPointLightShadow||3!==this.type||C(u,a),u.needsUpdate=!1}v.needsUpdate=!1,t.setRenderTarget(l,c,u)}}function sr(t,A,i){const n=i.isWebGL2;const r=new function(){let e=!1;const A=new vt;let i=null;const n=new vt(0,0,0,0);return{setMask:function(A){i===A||e||(t.colorMask(A,A,A,A),i=A)},setLocked:function(t){e=t},setClear:function(e,i,r,s,a){!0===a&&(e*=s,i*=s,r*=s),A.set(e,i,r,s),!1===n.equals(A)&&(t.clearColor(e,i,r,s),n.copy(A))},reset:function(){e=!1,i=null,n.set(-1,0,0,0)}}},s=new function(){let e=!1,A=null,i=null,n=null;return{setTest:function(t){t?z(2929):F(2929)},setMask:function(i){A===i||e||(t.depthMask(i),A=i)},setFunc:function(e){if(i!==e){if(e)switch(e){case 0:t.depthFunc(512);break;case 1:t.depthFunc(519);break;case 2:t.depthFunc(513);break;case 3:default:t.depthFunc(515);break;case 4:t.depthFunc(514);break;case 5:t.depthFunc(518);break;case 6:t.depthFunc(516);break;case 7:t.depthFunc(517)}else t.depthFunc(515);i=e}},setLocked:function(t){e=t},setClear:function(e){n!==e&&(t.clearDepth(e),n=e)},reset:function(){e=!1,A=null,i=null,n=null}}},a=new function(){let e=!1,A=null,i=null,n=null,r=null,s=null,a=null,o=null,l=null;return{setTest:function(t){e||(t?z(2960):F(2960))},setMask:function(i){A===i||e||(t.stencilMask(i),A=i)},setFunc:function(e,A,s){i===e&&n===A&&r===s||(t.stencilFunc(e,A,s),i=e,n=A,r=s)},setOp:function(e,A,i){s===e&&a===A&&o===i||(t.stencilOp(e,A,i),s=e,a=A,o=i)},setLocked:function(t){e=t},setClear:function(e){l!==e&&(t.clearStencil(e),l=e)},reset:function(){e=!1,A=null,i=null,n=null,r=null,s=null,a=null,o=null,l=null}}};let o={},l={},c=new WeakMap,h=[],u=null,d=!1,g=null,p=null,f=null,m=null,v=null,C=null,I=null,_=!1,M=null,y=null,x=null,E=null,w=null;const b=t.getParameter(35661);let S=!1,B=0;const D=t.getParameter(7938);-1!==D.indexOf("WebGL")?(B=parseFloat(/^WebGL (\d)/.exec(D)[1]),S=B>=1):-1!==D.indexOf("OpenGL ES")&&(B=parseFloat(/^OpenGL ES (\d)/.exec(D)[1]),S=B>=2);let Q=null,T={};const L=t.getParameter(3088),N=t.getParameter(2978),R=(new vt).fromArray(L),P=(new vt).fromArray(N);function k(e,A,i){const n=new Uint8Array(4),r=t.createTexture();t.bindTexture(e,r),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(let e=0;e<i;e++)t.texImage2D(A+e,0,6408,1,1,0,6408,5121,n);return r}const U={};function z(e){!0!==o[e]&&(t.enable(e),o[e]=!0)}function F(e){!1!==o[e]&&(t.disable(e),o[e]=!1)}U[3553]=k(3553,3553,1),U[34067]=k(34067,34069,6),r.setClear(0,0,0,1),s.setClear(1),a.setClear(0),z(2929),s.setFunc(3),H(!1),W(1),z(2884),V(0);const G={[e]:32774,101:32778,102:32779};if(n)G[103]=32775,G[104]=32776;else{const t=A.get("EXT_blend_minmax");null!==t&&(G[103]=t.MIN_EXT,G[104]=t.MAX_EXT)}const O={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function V(A,i,n,r,s,a,o,l){if(0!==A){if(!1===d&&(z(3042),d=!0),5===A)s=s||i,a=a||n,o=o||r,i===p&&s===v||(t.blendEquationSeparate(G[i],G[s]),p=i,v=s),n===f&&r===m&&a===C&&o===I||(t.blendFuncSeparate(O[n],O[r],O[a],O[o]),f=n,m=r,C=a,I=o),g=A,_=null;else if(A!==g||l!==_){if(p===e&&v===e||(t.blendEquation(32774),p=e,v=e),l)switch(A){case 1:t.blendFuncSeparate(1,771,1,771);break;case 2:t.blendFunc(1,1);break;case 3:t.blendFuncSeparate(0,769,0,1);break;case 4:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",A)}else switch(A){case 1:t.blendFuncSeparate(770,771,1,771);break;case 2:t.blendFunc(770,1);break;case 3:t.blendFuncSeparate(0,769,0,1);break;case 4:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",A)}f=null,m=null,C=null,I=null,g=A,_=l}}else!0===d&&(F(3042),d=!1)}function H(e){M!==e&&(e?t.frontFace(2304):t.frontFace(2305),M=e)}function W(e){0!==e?(z(2884),e!==y&&(1===e?t.cullFace(1029):2===e?t.cullFace(1028):t.cullFace(1032))):F(2884),y=e}function Y(e,A,i){e?(z(32823),E===A&&w===i||(t.polygonOffset(A,i),E=A,w=i)):F(32823)}function J(e){void 0===e&&(e=33984+b-1),Q!==e&&(t.activeTexture(e),Q=e)}return{buffers:{color:r,depth:s,stencil:a},enable:z,disable:F,bindFramebuffer:function(e,A){return l[e]!==A&&(t.bindFramebuffer(e,A),l[e]=A,n&&(36009===e&&(l[36160]=A),36160===e&&(l[36009]=A)),!0)},drawBuffers:function(e,n){let r=h,s=!1;if(e)if(r=c.get(n),void 0===r&&(r=[],c.set(n,r)),e.isWebGLMultipleRenderTargets){const t=e.texture;if(r.length!==t.length||36064!==r[0]){for(let e=0,A=t.length;e<A;e++)r[e]=36064+e;r.length=t.length,s=!0}}else 36064!==r[0]&&(r[0]=36064,s=!0);else 1029!==r[0]&&(r[0]=1029,s=!0);s&&(i.isWebGL2?t.drawBuffers(r):A.get("WEBGL_draw_buffers").drawBuffersWEBGL(r))},useProgram:function(e){return u!==e&&(t.useProgram(e),u=e,!0)},setBlending:V,setMaterial:function(t,e){2===t.side?F(2884):z(2884);let A=1===t.side;e&&(A=!A),H(A),1===t.blending&&!1===t.transparent?V(0):V(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),s.setFunc(t.depthFunc),s.setTest(t.depthTest),s.setMask(t.depthWrite),r.setMask(t.colorWrite);const i=t.stencilWrite;a.setTest(i),i&&(a.setMask(t.stencilWriteMask),a.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),a.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),Y(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?z(32926):F(32926)},setFlipSided:H,setCullFace:W,setLineWidth:function(e){e!==x&&(S&&t.lineWidth(e),x=e)},setPolygonOffset:Y,setScissorTest:function(t){t?z(3089):F(3089)},activeTexture:J,bindTexture:function(e,A){null===Q&&J();let i=T[Q];void 0===i&&(i={type:void 0,texture:void 0},T[Q]=i),i.type===e&&i.texture===A||(t.bindTexture(e,A||U[e]),i.type=e,i.texture=A)},unbindTexture:function(){const e=T[Q];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage2D:function(){try{t.texStorage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage3D:function(){try{t.texStorage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage2D:function(){try{t.texSubImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage3D:function(){try{t.texSubImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage2D:function(){try{t.compressedTexSubImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===R.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),R.copy(e))},viewport:function(e){!1===P.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),P.copy(e))},reset:function(){t.disable(3042),t.disable(2884),t.disable(2929),t.disable(32823),t.disable(3089),t.disable(2960),t.disable(32926),t.blendEquation(32774),t.blendFunc(1,0),t.blendFuncSeparate(1,0,1,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(513),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(519,0,4294967295),t.stencilOp(7680,7680,7680),t.clearStencil(0),t.cullFace(1029),t.frontFace(2305),t.polygonOffset(0,0),t.activeTexture(33984),t.bindFramebuffer(36160,null),!0===n&&(t.bindFramebuffer(36009,null),t.bindFramebuffer(36008,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),o={},Q=null,T={},l={},c=new WeakMap,h=[],u=null,d=!1,g=null,p=null,f=null,m=null,v=null,C=null,I=null,_=!1,M=null,y=null,x=null,E=null,w=null,R.set(0,0,t.canvas.width,t.canvas.height),P.set(0,0,t.canvas.width,t.canvas.height),r.reset(),s.reset(),a.reset()}}}function ar(t,e,A,i,n,C,I){const _=n.isWebGL2,M=n.maxTextures,y=n.maxCubemapSize,x=n.maxTextureSize,E=n.maxSamples,w=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,b=/OculusBrowser/g.test(navigator.userAgent),S=new WeakMap;let B;const T=new WeakMap;let L=!1;try{L="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function N(t,e){return L?new OffscreenCanvas(t,e):tt("canvas")}function R(t,e,A,i){let n=1;if((t.width>i||t.height>i)&&(n=i/Math.max(t.width,t.height)),n<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const i=e?Z:Math.floor,r=i(n*t.width),s=i(n*t.height);void 0===B&&(B=N(r,s));const a=A?N(r,s):B;a.width=r,a.height=s;return a.getContext("2d").drawImage(t,0,0,r,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+r+"x"+s+")."),a}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function P(t){return J(t.width)&&J(t.height)}function U(t,e){return t.generateMipmaps&&e&&t.minFilter!==o&&t.minFilter!==l}function z(e){t.generateMipmap(e)}function F(A,i,n,r,s=!1){if(!1===_)return i;if(null!==A){if(void 0!==t[A])return t[A];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+A+"'")}let a=i;return 6403===i&&(5126===n&&(a=33326),5131===n&&(a=33325),5121===n&&(a=33321)),33319===i&&(5126===n&&(a=33328),5131===n&&(a=33327),5121===n&&(a=33323)),6408===i&&(5126===n&&(a=34836),5131===n&&(a=34842),5121===n&&(a=r===Q&&!1===s?35907:32856),32819===n&&(a=32854),32820===n&&(a=32855)),33325!==a&&33326!==a&&33327!==a&&33328!==a&&34842!==a&&34836!==a||e.get("EXT_color_buffer_float"),a}function G(t,e,A){return!0===U(t,A)||t.isFramebufferTexture&&t.minFilter!==o&&t.minFilter!==l?Math.log2(Math.max(e.width,e.height))+1:void 0!==t.mipmaps&&t.mipmaps.length>0?t.mipmaps.length:t.isCompressedTexture&&Array.isArray(t.image)?e.mipmaps.length:1}function O(t){return t===o||1004===t||1005===t?9728:9729}function V(t){const e=t.target;e.removeEventListener("dispose",V),function(t){const e=i.get(t);if(void 0===e.__webglInit)return;const A=t.source,n=T.get(A);if(n){const i=n[e.__cacheKey];i.usedTimes--,0===i.usedTimes&&W(t),0===Object.keys(n).length&&T.delete(A)}i.remove(t)}(e),e.isVideoTexture&&S.delete(e)}function H(e){const A=e.target;A.removeEventListener("dispose",H),function(e){const A=e.texture,n=i.get(e),r=i.get(A);void 0!==r.__webglTexture&&(t.deleteTexture(r.__webglTexture),I.memory.textures--);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(n.__webglFramebuffer[e]),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer[e]);else{if(t.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&t.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer)for(let e=0;e<n.__webglColorRenderbuffer.length;e++)n.__webglColorRenderbuffer[e]&&t.deleteRenderbuffer(n.__webglColorRenderbuffer[e]);n.__webglDepthRenderbuffer&&t.deleteRenderbuffer(n.__webglDepthRenderbuffer)}if(e.isWebGLMultipleRenderTargets)for(let e=0,n=A.length;e<n;e++){const n=i.get(A[e]);n.__webglTexture&&(t.deleteTexture(n.__webglTexture),I.memory.textures--),i.remove(A[e])}i.remove(A),i.remove(e)}(A)}function W(e){const A=i.get(e);t.deleteTexture(A.__webglTexture);const n=e.source;delete T.get(n)[A.__cacheKey],I.memory.textures--}let Y=0;function K(t,e){const n=i.get(t);if(t.isVideoTexture&&function(t){const e=I.render.frame;S.get(t)!==e&&(S.set(t,e),t.update())}(t),!1===t.isRenderTargetTexture&&t.version>0&&n.__version!==t.version){const A=t.image;if(null===A)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==A.complete)return void et(n,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}A.activeTexture(33984+e),A.bindTexture(3553,n.__webglTexture)}const q={[r]:10497,[s]:33071,[a]:33648},X={[o]:9728,1004:9984,1005:9986,[l]:9729,1007:9985,[c]:9987};function j(A,r,a){if(a?(t.texParameteri(A,10242,q[r.wrapS]),t.texParameteri(A,10243,q[r.wrapT]),32879!==A&&35866!==A||t.texParameteri(A,32882,q[r.wrapR]),t.texParameteri(A,10240,X[r.magFilter]),t.texParameteri(A,10241,X[r.minFilter])):(t.texParameteri(A,10242,33071),t.texParameteri(A,10243,33071),32879!==A&&35866!==A||t.texParameteri(A,32882,33071),r.wrapS===s&&r.wrapT===s||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(A,10240,O(r.magFilter)),t.texParameteri(A,10241,O(r.minFilter)),r.minFilter!==o&&r.minFilter!==l&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===e.has("EXT_texture_filter_anisotropic")){const s=e.get("EXT_texture_filter_anisotropic");if(r.type===d&&!1===e.has("OES_texture_float_linear"))return;if(!1===_&&r.type===g&&!1===e.has("OES_texture_half_float_linear"))return;(r.anisotropy>1||i.get(r).__currentAnisotropy)&&(t.texParameterf(A,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(r.anisotropy,n.getMaxAnisotropy())),i.get(r).__currentAnisotropy=r.anisotropy)}}function $(e,A){let i=!1;void 0===e.__webglInit&&(e.__webglInit=!0,A.addEventListener("dispose",V));const n=A.source;let r=T.get(n);void 0===r&&(r={},T.set(n,r));const s=function(t){const e=[];return e.push(t.wrapS),e.push(t.wrapT),e.push(t.magFilter),e.push(t.minFilter),e.push(t.anisotropy),e.push(t.internalFormat),e.push(t.format),e.push(t.type),e.push(t.generateMipmaps),e.push(t.premultiplyAlpha),e.push(t.flipY),e.push(t.unpackAlignment),e.push(t.encoding),e.join()}(A);if(s!==e.__cacheKey){void 0===r[s]&&(r[s]={texture:t.createTexture(),usedTimes:0},I.memory.textures++,i=!0),r[s].usedTimes++;const n=r[e.__cacheKey];void 0!==n&&(r[e.__cacheKey].usedTimes--,0===n.usedTimes&&W(A)),e.__cacheKey=s,e.__webglTexture=r[s].texture}return i}function et(e,i,n){let r=3553;i.isDataArrayTexture&&(r=35866),i.isData3DTexture&&(r=32879);const a=$(e,i),c=i.source;if(A.activeTexture(33984+n),A.bindTexture(r,e.__webglTexture),c.version!==c.__currentVersion||!0===a){t.pixelStorei(37440,i.flipY),t.pixelStorei(37441,i.premultiplyAlpha),t.pixelStorei(3317,i.unpackAlignment),t.pixelStorei(37443,0);const e=function(t){return!_&&(t.wrapS!==s||t.wrapT!==s||t.minFilter!==o&&t.minFilter!==l)}(i)&&!1===P(i.image);let n=R(i.image,e,!1,x);n=at(i,n);const h=P(n)||_,g=C.convert(i.format,i.encoding);let I,M=C.convert(i.type),y=F(i.internalFormat,g,M,i.encoding,i.isVideoTexture);j(r,i,h);const E=i.mipmaps,w=_&&!0!==i.isVideoTexture,b=void 0===c.__currentVersion||!0===a,S=G(i,n,h);if(i.isDepthTexture)y=6402,_?y=i.type===d?36012:i.type===u?33190:i.type===p?35056:33189:i.type===d&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),i.format===m&&6402===y&&1012!==i.type&&i.type!==u&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),i.type=u,M=C.convert(i.type)),i.format===v&&6402===y&&(y=34041,i.type!==p&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),i.type=p,M=C.convert(i.type))),b&&(w?A.texStorage2D(3553,1,y,n.width,n.height):A.texImage2D(3553,0,y,n.width,n.height,0,g,M,null));else if(i.isDataTexture)if(E.length>0&&h){w&&b&&A.texStorage2D(3553,S,y,E[0].width,E[0].height);for(let t=0,e=E.length;t<e;t++)I=E[t],w?A.texSubImage2D(3553,t,0,0,I.width,I.height,g,M,I.data):A.texImage2D(3553,t,y,I.width,I.height,0,g,M,I.data);i.generateMipmaps=!1}else w?(b&&A.texStorage2D(3553,S,y,n.width,n.height),A.texSubImage2D(3553,0,0,0,n.width,n.height,g,M,n.data)):A.texImage2D(3553,0,y,n.width,n.height,0,g,M,n.data);else if(i.isCompressedTexture){w&&b&&A.texStorage2D(3553,S,y,E[0].width,E[0].height);for(let t=0,e=E.length;t<e;t++)I=E[t],i.format!==f?null!==g?w?A.compressedTexSubImage2D(3553,t,0,0,I.width,I.height,g,I.data):A.compressedTexImage2D(3553,t,y,I.width,I.height,0,I.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):w?A.texSubImage2D(3553,t,0,0,I.width,I.height,g,M,I.data):A.texImage2D(3553,t,y,I.width,I.height,0,g,M,I.data)}else if(i.isDataArrayTexture)w?(b&&A.texStorage3D(35866,S,y,n.width,n.height,n.depth),A.texSubImage3D(35866,0,0,0,0,n.width,n.height,n.depth,g,M,n.data)):A.texImage3D(35866,0,y,n.width,n.height,n.depth,0,g,M,n.data);else if(i.isData3DTexture)w?(b&&A.texStorage3D(32879,S,y,n.width,n.height,n.depth),A.texSubImage3D(32879,0,0,0,0,n.width,n.height,n.depth,g,M,n.data)):A.texImage3D(32879,0,y,n.width,n.height,n.depth,0,g,M,n.data);else if(i.isFramebufferTexture){if(b)if(w)A.texStorage2D(3553,S,y,n.width,n.height);else{let t=n.width,e=n.height;for(let i=0;i<S;i++)A.texImage2D(3553,i,y,t,e,0,g,M,null),t>>=1,e>>=1}}else if(E.length>0&&h){w&&b&&A.texStorage2D(3553,S,y,E[0].width,E[0].height);for(let t=0,e=E.length;t<e;t++)I=E[t],w?A.texSubImage2D(3553,t,0,0,g,M,I):A.texImage2D(3553,t,y,g,M,I);i.generateMipmaps=!1}else w?(b&&A.texStorage2D(3553,S,y,n.width,n.height),A.texSubImage2D(3553,0,0,0,g,M,n)):A.texImage2D(3553,0,y,g,M,n);U(i,h)&&z(r),c.__currentVersion=c.version,i.onUpdate&&i.onUpdate(i)}e.__version=i.version}function At(e,n,r,s,a){const o=C.convert(r.format,r.encoding),l=C.convert(r.type),c=F(r.internalFormat,o,l,r.encoding);i.get(n).__hasExternalTextures||(32879===a||35866===a?A.texImage3D(a,0,c,n.width,n.height,n.depth,0,o,l,null):A.texImage2D(a,0,c,n.width,n.height,0,o,l,null)),A.bindFramebuffer(36160,e),st(n)?w.framebufferTexture2DMultisampleEXT(36160,s,a,i.get(r).__webglTexture,0,rt(n)):t.framebufferTexture2D(36160,s,a,i.get(r).__webglTexture,0),A.bindFramebuffer(36160,null)}function it(e,A,i){if(t.bindRenderbuffer(36161,e),A.depthBuffer&&!A.stencilBuffer){let n=33189;if(i||st(A)){const e=A.depthTexture;e&&e.isDepthTexture&&(e.type===d?n=36012:e.type===u&&(n=33190));const i=rt(A);st(A)?w.renderbufferStorageMultisampleEXT(36161,i,n,A.width,A.height):t.renderbufferStorageMultisample(36161,i,n,A.width,A.height)}else t.renderbufferStorage(36161,n,A.width,A.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(A.depthBuffer&&A.stencilBuffer){const n=rt(A);i&&!1===st(A)?t.renderbufferStorageMultisample(36161,n,35056,A.width,A.height):st(A)?w.renderbufferStorageMultisampleEXT(36161,n,35056,A.width,A.height):t.renderbufferStorage(36161,34041,A.width,A.height),t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=!0===A.isWebGLMultipleRenderTargets?A.texture:[A.texture];for(let n=0;n<e.length;n++){const r=e[n],s=C.convert(r.format,r.encoding),a=C.convert(r.type),o=F(r.internalFormat,s,a,r.encoding),l=rt(A);i&&!1===st(A)?t.renderbufferStorageMultisample(36161,l,o,A.width,A.height):st(A)?w.renderbufferStorageMultisampleEXT(36161,l,o,A.width,A.height):t.renderbufferStorage(36161,o,A.width,A.height)}}t.bindRenderbuffer(36161,null)}function nt(e){const n=i.get(e),r=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture&&!n.__autoAllocateDepthBuffer){if(r)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,n){if(n&&n.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(A.bindFramebuffer(36160,e),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),K(n.depthTexture,0);const r=i.get(n.depthTexture).__webglTexture,s=rt(n);if(n.depthTexture.format===m)st(n)?w.framebufferTexture2DMultisampleEXT(36160,36096,3553,r,0,s):t.framebufferTexture2D(36160,36096,3553,r,0);else{if(n.depthTexture.format!==v)throw new Error("Unknown depthTexture format");st(n)?w.framebufferTexture2DMultisampleEXT(36160,33306,3553,r,0,s):t.framebufferTexture2D(36160,33306,3553,r,0)}}(n.__webglFramebuffer,e)}else if(r){n.__webglDepthbuffer=[];for(let i=0;i<6;i++)A.bindFramebuffer(36160,n.__webglFramebuffer[i]),n.__webglDepthbuffer[i]=t.createRenderbuffer(),it(n.__webglDepthbuffer[i],e,!1)}else A.bindFramebuffer(36160,n.__webglFramebuffer),n.__webglDepthbuffer=t.createRenderbuffer(),it(n.__webglDepthbuffer,e,!1);A.bindFramebuffer(36160,null)}function rt(t){return Math.min(E,t.samples)}function st(t){const A=i.get(t);return _&&t.samples>0&&!0===e.has("WEBGL_multisampled_render_to_texture")&&!1!==A.__useRenderToTexture}function at(t,A){const i=t.encoding,n=t.format,r=t.type;return!0===t.isCompressedTexture||!0===t.isVideoTexture||t.format===k||i!==D&&(i===Q?!1===_?!0===e.has("EXT_sRGB")&&n===f?(t.format=k,t.minFilter=l,t.generateMipmaps=!1):A=dt.sRGBToLinear(A):n===f&&r===h||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",i)),A}this.allocateTextureUnit=function(){const t=Y;return t>=M&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+M),Y+=1,t},this.resetTextureUnits=function(){Y=0},this.setTexture2D=K,this.setTexture2DArray=function(t,e){const n=i.get(t);t.version>0&&n.__version!==t.version?et(n,t,e):(A.activeTexture(33984+e),A.bindTexture(35866,n.__webglTexture))},this.setTexture3D=function(t,e){const n=i.get(t);t.version>0&&n.__version!==t.version?et(n,t,e):(A.activeTexture(33984+e),A.bindTexture(32879,n.__webglTexture))},this.setTextureCube=function(e,n){const r=i.get(e);e.version>0&&r.__version!==e.version?function(e,i,n){if(6!==i.image.length)return;const r=$(e,i),s=i.source;if(A.activeTexture(33984+n),A.bindTexture(34067,e.__webglTexture),s.version!==s.__currentVersion||!0===r){t.pixelStorei(37440,i.flipY),t.pixelStorei(37441,i.premultiplyAlpha),t.pixelStorei(3317,i.unpackAlignment),t.pixelStorei(37443,0);const e=i.isCompressedTexture||i.image[0].isCompressedTexture,n=i.image[0]&&i.image[0].isDataTexture,a=[];for(let t=0;t<6;t++)a[t]=e||n?n?i.image[t].image:i.image[t]:R(i.image[t],!1,!0,y),a[t]=at(i,a[t]);const o=a[0],l=P(o)||_,c=C.convert(i.format,i.encoding),h=C.convert(i.type),u=F(i.internalFormat,c,h,i.encoding),d=_&&!0!==i.isVideoTexture,g=void 0===s.__currentVersion||!0===r;let p,m=G(i,o,l);if(j(34067,i,l),e){d&&g&&A.texStorage2D(34067,m,u,o.width,o.height);for(let t=0;t<6;t++){p=a[t].mipmaps;for(let e=0;e<p.length;e++){const n=p[e];i.format!==f?null!==c?d?A.compressedTexSubImage2D(34069+t,e,0,0,n.width,n.height,c,n.data):A.compressedTexImage2D(34069+t,e,u,n.width,n.height,0,n.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):d?A.texSubImage2D(34069+t,e,0,0,n.width,n.height,c,h,n.data):A.texImage2D(34069+t,e,u,n.width,n.height,0,c,h,n.data)}}}else{p=i.mipmaps,d&&g&&(p.length>0&&m++,A.texStorage2D(34067,m,u,a[0].width,a[0].height));for(let t=0;t<6;t++)if(n){d?A.texSubImage2D(34069+t,0,0,0,a[t].width,a[t].height,c,h,a[t].data):A.texImage2D(34069+t,0,u,a[t].width,a[t].height,0,c,h,a[t].data);for(let e=0;e<p.length;e++){const i=p[e].image[t].image;d?A.texSubImage2D(34069+t,e+1,0,0,i.width,i.height,c,h,i.data):A.texImage2D(34069+t,e+1,u,i.width,i.height,0,c,h,i.data)}}else{d?A.texSubImage2D(34069+t,0,0,0,c,h,a[t]):A.texImage2D(34069+t,0,u,c,h,a[t]);for(let e=0;e<p.length;e++){const i=p[e];d?A.texSubImage2D(34069+t,e+1,0,0,c,h,i.image[t]):A.texImage2D(34069+t,e+1,u,c,h,i.image[t])}}}U(i,l)&&z(34067),s.__currentVersion=s.version,i.onUpdate&&i.onUpdate(i)}e.__version=i.version}(r,e,n):(A.activeTexture(33984+n),A.bindTexture(34067,r.__webglTexture))},this.rebindTextures=function(t,e,A){const n=i.get(t);void 0!==e&&At(n.__webglFramebuffer,t,t.texture,36064,3553),void 0!==A&&nt(t)},this.setupRenderTarget=function(e){const r=e.texture,s=i.get(e),a=i.get(r);e.addEventListener("dispose",H),!0!==e.isWebGLMultipleRenderTargets&&(void 0===a.__webglTexture&&(a.__webglTexture=t.createTexture()),a.__version=r.version,I.memory.textures++);const o=!0===e.isWebGLCubeRenderTarget,l=!0===e.isWebGLMultipleRenderTargets,c=P(e)||_;if(o){s.__webglFramebuffer=[];for(let e=0;e<6;e++)s.__webglFramebuffer[e]=t.createFramebuffer()}else{if(s.__webglFramebuffer=t.createFramebuffer(),l)if(n.drawBuffers){const A=e.texture;for(let e=0,n=A.length;e<n;e++){const n=i.get(A[e]);void 0===n.__webglTexture&&(n.__webglTexture=t.createTexture(),I.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(_&&e.samples>0&&!1===st(e)){const i=l?r:[r];s.__webglMultisampledFramebuffer=t.createFramebuffer(),s.__webglColorRenderbuffer=[],A.bindFramebuffer(36160,s.__webglMultisampledFramebuffer);for(let A=0;A<i.length;A++){const n=i[A];s.__webglColorRenderbuffer[A]=t.createRenderbuffer(),t.bindRenderbuffer(36161,s.__webglColorRenderbuffer[A]);const r=C.convert(n.format,n.encoding),a=C.convert(n.type),o=F(n.internalFormat,r,a,n.encoding),l=rt(e);t.renderbufferStorageMultisample(36161,l,o,e.width,e.height),t.framebufferRenderbuffer(36160,36064+A,36161,s.__webglColorRenderbuffer[A])}t.bindRenderbuffer(36161,null),e.depthBuffer&&(s.__webglDepthRenderbuffer=t.createRenderbuffer(),it(s.__webglDepthRenderbuffer,e,!0)),A.bindFramebuffer(36160,null)}}if(o){A.bindTexture(34067,a.__webglTexture),j(34067,r,c);for(let t=0;t<6;t++)At(s.__webglFramebuffer[t],e,r,36064,34069+t);U(r,c)&&z(34067),A.unbindTexture()}else if(l){const t=e.texture;for(let n=0,r=t.length;n<r;n++){const r=t[n],a=i.get(r);A.bindTexture(3553,a.__webglTexture),j(3553,r,c),At(s.__webglFramebuffer,e,r,36064+n,3553),U(r,c)&&z(3553)}A.unbindTexture()}else{let t=3553;(e.isWebGL3DRenderTarget||e.isWebGLArrayRenderTarget)&&(_?t=e.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),A.bindTexture(t,a.__webglTexture),j(t,r,c),At(s.__webglFramebuffer,e,r,36064,t),U(r,c)&&z(t),A.unbindTexture()}e.depthBuffer&&nt(e)},this.updateRenderTargetMipmap=function(t){const e=P(t)||_,n=!0===t.isWebGLMultipleRenderTargets?t.texture:[t.texture];for(let r=0,s=n.length;r<s;r++){const s=n[r];if(U(s,e)){const e=t.isWebGLCubeRenderTarget?34067:3553,n=i.get(s).__webglTexture;A.bindTexture(e,n),z(e),A.unbindTexture()}}},this.updateMultisampleRenderTarget=function(e){if(_&&e.samples>0&&!1===st(e)){const n=e.isWebGLMultipleRenderTargets?e.texture:[e.texture],r=e.width,s=e.height;let a=16384;const o=[],l=e.stencilBuffer?33306:36096,c=i.get(e),h=!0===e.isWebGLMultipleRenderTargets;if(h)for(let e=0;e<n.length;e++)A.bindFramebuffer(36160,c.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064+e,36161,null),A.bindFramebuffer(36160,c.__webglFramebuffer),t.framebufferTexture2D(36009,36064+e,3553,null,0);A.bindFramebuffer(36008,c.__webglMultisampledFramebuffer),A.bindFramebuffer(36009,c.__webglFramebuffer);for(let A=0;A<n.length;A++){o.push(36064+A),e.depthBuffer&&o.push(l);const u=void 0!==c.__ignoreDepthValues&&c.__ignoreDepthValues;if(!1===u&&(e.depthBuffer&&(a|=256),e.stencilBuffer&&(a|=1024)),h&&t.framebufferRenderbuffer(36008,36064,36161,c.__webglColorRenderbuffer[A]),!0===u&&(t.invalidateFramebuffer(36008,[l]),t.invalidateFramebuffer(36009,[l])),h){const e=i.get(n[A]).__webglTexture;t.framebufferTexture2D(36009,36064,3553,e,0)}t.blitFramebuffer(0,0,r,s,0,0,r,s,a,9728),b&&t.invalidateFramebuffer(36008,o)}if(A.bindFramebuffer(36008,null),A.bindFramebuffer(36009,null),h)for(let e=0;e<n.length;e++){A.bindFramebuffer(36160,c.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064+e,36161,c.__webglColorRenderbuffer[e]);const r=i.get(n[e]).__webglTexture;A.bindFramebuffer(36160,c.__webglFramebuffer),t.framebufferTexture2D(36009,36064+e,3553,r,0)}A.bindFramebuffer(36009,c.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=nt,this.setupFrameBufferTexture=At,this.useMultisampledRTT=st}function or(t,e,A){const i=A.isWebGL2;return{convert:function(A,n=null){let r;if(A===h)return 5121;if(1017===A)return 32819;if(1018===A)return 32820;if(1010===A)return 5120;if(1011===A)return 5122;if(1012===A)return 5123;if(1013===A)return 5124;if(A===u)return 5125;if(A===d)return 5126;if(A===g)return i?5131:(r=e.get("OES_texture_half_float"),null!==r?r.HALF_FLOAT_OES:null);if(1021===A)return 6406;if(A===f)return 6408;if(1024===A)return 6409;if(1025===A)return 6410;if(A===m)return 6402;if(A===v)return 34041;if(1028===A)return 6403;if(1022===A)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(A===k)return r=e.get("EXT_sRGB"),null!==r?r.SRGB_ALPHA_EXT:null;if(1029===A)return 36244;if(1030===A)return 33319;if(1031===A)return 33320;if(1033===A)return 36249;if(A===C||A===I||A===_||A===M)if(n===Q){if(r=e.get("WEBGL_compressed_texture_s3tc_srgb"),null===r)return null;if(A===C)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(A===I)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(A===_)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(A===M)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(r=e.get("WEBGL_compressed_texture_s3tc"),null===r)return null;if(A===C)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(A===I)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(A===_)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(A===M)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===A||35841===A||35842===A||35843===A){if(r=e.get("WEBGL_compressed_texture_pvrtc"),null===r)return null;if(35840===A)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===A)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===A)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===A)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===A)return r=e.get("WEBGL_compressed_texture_etc1"),null!==r?r.COMPRESSED_RGB_ETC1_WEBGL:null;if(37492===A||37496===A){if(r=e.get("WEBGL_compressed_texture_etc"),null===r)return null;if(37492===A)return n===Q?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(37496===A)return n===Q?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}if(37808===A||37809===A||37810===A||37811===A||37812===A||37813===A||37814===A||37815===A||37816===A||37817===A||37818===A||37819===A||37820===A||37821===A){if(r=e.get("WEBGL_compressed_texture_astc"),null===r)return null;if(37808===A)return n===Q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===A)return n===Q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===A)return n===Q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===A)return n===Q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===A)return n===Q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===A)return n===Q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===A)return n===Q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===A)return n===Q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===A)return n===Q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===A)return n===Q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===A)return n===Q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===A)return n===Q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===A)return n===Q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===A)return n===Q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}if(36492===A){if(r=e.get("EXT_texture_compression_bptc"),null===r)return null;if(36492===A)return n===Q?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT}return A===p?i?34042:(r=e.get("WEBGL_depth_texture"),null!==r?r.UNSIGNED_INT_24_8_WEBGL:null):void 0!==t[A]?t[A]:null}}}class lr extends xA{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class cr extends xe{constructor(){super(),this.isGroup=!0,this.type="Group"}}const hr={type:"move"};class ur{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new cr,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new cr,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Mt,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Mt),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new cr,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Mt,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Mt),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,A){let i=null,n=null,r=null;const s=this._targetRay,a=this._grip,o=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState)if(null!==s&&(i=e.getPose(t.targetRaySpace,A),null!==i&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),i.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(i.linearVelocity)):s.hasLinearVelocity=!1,i.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(i.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(hr))),o&&t.hand){r=!0;for(const i of t.hand.values()){const t=e.getJointPose(i,A);if(void 0===o.joints[i.jointName]){const t=new cr;t.matrixAutoUpdate=!1,t.visible=!1,o.joints[i.jointName]=t,o.add(t)}const n=o.joints[i.jointName];null!==t&&(n.matrix.fromArray(t.transform.matrix),n.matrix.decompose(n.position,n.rotation,n.scale),n.jointRadius=t.radius),n.visible=null!==t}const i=o.joints["index-finger-tip"],n=o.joints["thumb-tip"],s=i.position.distanceTo(n.position),a=.02,l=.005;o.inputState.pinching&&s>a+l?(o.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!o.inputState.pinching&&s<=a-l&&(o.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==a&&t.gripSpace&&(n=e.getPose(t.gripSpace,A),null!==n&&(a.matrix.fromArray(n.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),n.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(n.linearVelocity)):a.hasLinearVelocity=!1,n.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(n.angularVelocity)):a.hasAngularVelocity=!1));return null!==s&&(s.visible=null!==i),null!==a&&(a.visible=null!==n),null!==o&&(o.visible=null!==r),this}}class dr extends mt{constructor(t,e,A,i,n,r,s,a,l,c){if((c=void 0!==c?c:m)!==m&&c!==v)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===A&&c===m&&(A=u),void 0===A&&c===v&&(A=p),super(null,i,n,r,s,a,c,A,l),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=void 0!==s?s:o,this.minFilter=void 0!==a?a:o,this.flipY=!1,this.generateMipmaps=!1}}class gr extends U{constructor(t,e){super();const A=this;let i=null,n=1,r=null,s="local-floor",a=null,o=null,l=null,c=null,d=null,g=null;const C=e.getContextAttributes();let I=null,_=null;const M=[],y=new Map,x=new xA;x.layers.enable(1),x.viewport=new vt;const E=new xA;E.layers.enable(2),E.viewport=new vt;const w=[x,E],b=new lr;b.layers.enable(1),b.layers.enable(2);let S=null,B=null;function D(t){const e=y.get(t.inputSource);void 0!==e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function T(){i.removeEventListener("select",D),i.removeEventListener("selectstart",D),i.removeEventListener("selectend",D),i.removeEventListener("squeeze",D),i.removeEventListener("squeezestart",D),i.removeEventListener("squeezeend",D),i.removeEventListener("end",T),i.removeEventListener("inputsourceschange",L),y.forEach((function(t,e){void 0!==t&&t.disconnect(e)})),y.clear(),S=null,B=null,t.setRenderTarget(I),d=null,c=null,l=null,i=null,_=null,U.stop(),A.isPresenting=!1,A.dispatchEvent({type:"sessionend"})}function L(t){const e=i.inputSources;for(let t=0;t<e.length;t++){const A="right"===e[t].handedness?1:0;y.set(e[t],M[A])}for(let e=0;e<t.removed.length;e++){const A=t.removed[e],i=y.get(A);i&&(i.dispatchEvent({type:"disconnected",data:A}),y.delete(A))}for(let e=0;e<t.added.length;e++){const A=t.added[e],i=y.get(A);i&&i.dispatchEvent({type:"connected",data:A})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=M[t];return void 0===e&&(e=new ur,M[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=M[t];return void 0===e&&(e=new ur,M[t]=e),e.getGripSpace()},this.getHand=function(t){let e=M[t];return void 0===e&&(e=new ur,M[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){n=t,!0===A.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){s=t,!0===A.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return a||r},this.setReferenceSpace=function(t){a=t},this.getBaseLayer=function(){return null!==c?c:d},this.getBinding=function(){return l},this.getFrame=function(){return g},this.getSession=function(){return i},this.setSession=async function(o){if(i=o,null!==i){if(I=t.getRenderTarget(),i.addEventListener("select",D),i.addEventListener("selectstart",D),i.addEventListener("selectend",D),i.addEventListener("squeeze",D),i.addEventListener("squeezestart",D),i.addEventListener("squeezeend",D),i.addEventListener("end",T),i.addEventListener("inputsourceschange",L),!0!==C.xrCompatible&&await e.makeXRCompatible(),void 0===i.renderState.layers||!1===t.capabilities.isWebGL2){const A={antialias:void 0!==i.renderState.layers||C.antialias,alpha:C.alpha,depth:C.depth,stencil:C.stencil,framebufferScaleFactor:n};d=new XRWebGLLayer(i,e,A),i.updateRenderState({baseLayer:d}),_=new Ct(d.framebufferWidth,d.framebufferHeight,{format:f,type:h,encoding:t.outputEncoding})}else{let A=null,r=null,s=null;C.depth&&(s=C.stencil?35056:33190,A=C.stencil?v:m,r=C.stencil?p:u);const a={colorFormat:t.outputEncoding===Q?35907:32856,depthFormat:s,scaleFactor:n};l=new XRWebGLBinding(i,e),c=l.createProjectionLayer(a),i.updateRenderState({layers:[c]}),_=new Ct(c.textureWidth,c.textureHeight,{format:f,type:h,depthTexture:new dr(c.textureWidth,c.textureHeight,r,void 0,void 0,void 0,void 0,void 0,void 0,A),stencilBuffer:C.stencil,encoding:t.outputEncoding,samples:C.antialias?4:0});t.properties.get(_).__ignoreDepthValues=c.ignoreDepthValues}_.isXRRenderTarget=!0,this.setFoveation(1),a=null,r=await i.requestReferenceSpace(s),U.setContext(i),U.start(),A.isPresenting=!0,A.dispatchEvent({type:"sessionstart"})}};const N=new Mt,R=new Mt;function P(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===i)return;b.near=E.near=x.near=t.near,b.far=E.far=x.far=t.far,S===b.near&&B===b.far||(i.updateRenderState({depthNear:b.near,depthFar:b.far}),S=b.near,B=b.far);const e=t.parent,A=b.cameras;P(b,e);for(let t=0;t<A.length;t++)P(A[t],e);b.matrixWorld.decompose(b.position,b.quaternion,b.scale),t.position.copy(b.position),t.quaternion.copy(b.quaternion),t.scale.copy(b.scale),t.matrix.copy(b.matrix),t.matrixWorld.copy(b.matrixWorld);const n=t.children;for(let t=0,e=n.length;t<e;t++)n[t].updateMatrixWorld(!0);2===A.length?function(t,e,A){N.setFromMatrixPosition(e.matrixWorld),R.setFromMatrixPosition(A.matrixWorld);const i=N.distanceTo(R),n=e.projectionMatrix.elements,r=A.projectionMatrix.elements,s=n[14]/(n[10]-1),a=n[14]/(n[10]+1),o=(n[9]+1)/n[5],l=(n[9]-1)/n[5],c=(n[8]-1)/n[0],h=(r[8]+1)/r[0],u=s*c,d=s*h,g=i/(-c+h),p=g*-c;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(p),t.translateZ(g),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const f=s+g,m=a+g,v=u-p,C=d+(i-p),I=o*a/m*f,_=l*a/m*f;t.projectionMatrix.makePerspective(v,C,I,_,f,m)}(b,x,E):b.projectionMatrix.copy(x.projectionMatrix)},this.getCamera=function(){return b},this.getFoveation=function(){return null!==c?c.fixedFoveation:null!==d?d.fixedFoveation:void 0},this.setFoveation=function(t){null!==c&&(c.fixedFoveation=t),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=t)};let k=null;const U=new PA;U.setAnimationLoop((function(e,A){if(o=A.getViewerPose(a||r),g=A,null!==o){const e=o.views;null!==d&&(t.setRenderTargetFramebuffer(_,d.framebuffer),t.setRenderTarget(_));let A=!1;e.length!==b.cameras.length&&(b.cameras.length=0,A=!0);for(let i=0;i<e.length;i++){const n=e[i];let r=null;if(null!==d)r=d.getViewport(n);else{const e=l.getViewSubImage(c,n);r=e.viewport,0===i&&(t.setRenderTargetTextures(_,e.colorTexture,c.ignoreDepthValues?void 0:e.depthStencilTexture),t.setRenderTarget(_))}let s=w[i];void 0===s&&(s=new xA,s.layers.enable(i),s.viewport=new vt,w[i]=s),s.matrix.fromArray(n.transform.matrix),s.projectionMatrix.fromArray(n.projectionMatrix),s.viewport.set(r.x,r.y,r.width,r.height),0===i&&b.matrix.copy(s.matrix),!0===A&&b.cameras.push(s)}}const n=i.inputSources;for(let t=0;t<M.length;t++){const e=n[t],i=y.get(e);void 0!==i&&i.update(e,A,a||r)}k&&k(e,A),g=null})),this.setAnimationLoop=function(t){k=t},this.dispose=function(){}}}function pr(t,e){function A(A,i){A.opacity.value=i.opacity,i.color&&A.diffuse.value.copy(i.color),i.emissive&&A.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(A.map.value=i.map),i.alphaMap&&(A.alphaMap.value=i.alphaMap),i.bumpMap&&(A.bumpMap.value=i.bumpMap,A.bumpScale.value=i.bumpScale,1===i.side&&(A.bumpScale.value*=-1)),i.displacementMap&&(A.displacementMap.value=i.displacementMap,A.displacementScale.value=i.displacementScale,A.displacementBias.value=i.displacementBias),i.emissiveMap&&(A.emissiveMap.value=i.emissiveMap),i.normalMap&&(A.normalMap.value=i.normalMap,A.normalScale.value.copy(i.normalScale),1===i.side&&A.normalScale.value.negate()),i.specularMap&&(A.specularMap.value=i.specularMap),i.alphaTest>0&&(A.alphaTest.value=i.alphaTest);const n=e.get(i).envMap;if(n&&(A.envMap.value=n,A.flipEnvMap.value=n.isCubeTexture&&!1===n.isRenderTargetTexture?-1:1,A.reflectivity.value=i.reflectivity,A.ior.value=i.ior,A.refractionRatio.value=i.refractionRatio),i.lightMap){A.lightMap.value=i.lightMap;const e=!0!==t.physicallyCorrectLights?Math.PI:1;A.lightMapIntensity.value=i.lightMapIntensity*e}let r,s;i.aoMap&&(A.aoMap.value=i.aoMap,A.aoMapIntensity.value=i.aoMapIntensity),i.map?r=i.map:i.specularMap?r=i.specularMap:i.displacementMap?r=i.displacementMap:i.normalMap?r=i.normalMap:i.bumpMap?r=i.bumpMap:i.roughnessMap?r=i.roughnessMap:i.metalnessMap?r=i.metalnessMap:i.alphaMap?r=i.alphaMap:i.emissiveMap?r=i.emissiveMap:i.clearcoatMap?r=i.clearcoatMap:i.clearcoatNormalMap?r=i.clearcoatNormalMap:i.clearcoatRoughnessMap?r=i.clearcoatRoughnessMap:i.iridescenceMap?r=i.iridescenceMap:i.iridescenceThicknessMap?r=i.iridescenceThicknessMap:i.specularIntensityMap?r=i.specularIntensityMap:i.specularColorMap?r=i.specularColorMap:i.transmissionMap?r=i.transmissionMap:i.thicknessMap?r=i.thicknessMap:i.sheenColorMap?r=i.sheenColorMap:i.sheenRoughnessMap&&(r=i.sheenRoughnessMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),A.uvTransform.value.copy(r.matrix)),i.aoMap?s=i.aoMap:i.lightMap&&(s=i.lightMap),void 0!==s&&(s.isWebGLRenderTarget&&(s=s.texture),!0===s.matrixAutoUpdate&&s.updateMatrix(),A.uv2Transform.value.copy(s.matrix))}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,i,n,r,s){i.isMeshBasicMaterial||i.isMeshLambertMaterial?A(t,i):i.isMeshToonMaterial?(A(t,i),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(t,i)):i.isMeshPhongMaterial?(A(t,i),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4)}(t,i)):i.isMeshStandardMaterial?(A(t,i),function(t,A){t.roughness.value=A.roughness,t.metalness.value=A.metalness,A.roughnessMap&&(t.roughnessMap.value=A.roughnessMap);A.metalnessMap&&(t.metalnessMap.value=A.metalnessMap);e.get(A).envMap&&(t.envMapIntensity.value=A.envMapIntensity)}(t,i),i.isMeshPhysicalMaterial&&function(t,e,A){t.ior.value=e.ior,e.sheen>0&&(t.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen),t.sheenRoughness.value=e.sheenRoughness,e.sheenColorMap&&(t.sheenColorMap.value=e.sheenColorMap),e.sheenRoughnessMap&&(t.sheenRoughnessMap.value=e.sheenRoughnessMap));e.clearcoat>0&&(t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,1===e.side&&t.clearcoatNormalScale.value.negate()));e.iridescence>0&&(t.iridescence.value=e.iridescence,t.iridescenceIOR.value=e.iridescenceIOR,t.iridescenceThicknessMinimum.value=e.iridescenceThicknessRange[0],t.iridescenceThicknessMaximum.value=e.iridescenceThicknessRange[1],e.iridescenceMap&&(t.iridescenceMap.value=e.iridescenceMap),e.iridescenceThicknessMap&&(t.iridescenceThicknessMap.value=e.iridescenceThicknessMap));e.transmission>0&&(t.transmission.value=e.transmission,t.transmissionSamplerMap.value=A.texture,t.transmissionSamplerSize.value.set(A.width,A.height),e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap),t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap),t.attenuationDistance.value=e.attenuationDistance,t.attenuationColor.value.copy(e.attenuationColor));t.specularIntensity.value=e.specularIntensity,t.specularColor.value.copy(e.specularColor),e.specularIntensityMap&&(t.specularIntensityMap.value=e.specularIntensityMap);e.specularColorMap&&(t.specularColorMap.value=e.specularColorMap)}(t,i,s)):i.isMeshMatcapMaterial?(A(t,i),function(t,e){e.matcap&&(t.matcap.value=e.matcap)}(t,i)):i.isMeshDepthMaterial?A(t,i):i.isMeshDistanceMaterial?(A(t,i),function(t,e){t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,i)):i.isMeshNormalMaterial?A(t,i):i.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,i),i.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,i)):i.isPointsMaterial?function(t,e,A,i){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*A,t.scale.value=.5*i,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);e.alphaTest>0&&(t.alphaTest.value=e.alphaTest);let n;e.map?n=e.map:e.alphaMap&&(n=e.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(t,i,n,r):i.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);e.alphaTest>0&&(t.alphaTest.value=e.alphaTest);let A;e.map?A=e.map:e.alphaMap&&(A=e.alphaMap);void 0!==A&&(!0===A.matrixAutoUpdate&&A.updateMatrix(),t.uvTransform.value.copy(A.matrix))}(t,i):i.isShadowMaterial?(t.color.value.copy(i.color),t.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function fr(t={}){this.isWebGLRenderer=!0;const e=void 0!==t.canvas?t.canvas:function(){const t=tt("canvas");return t.style.display="block",t}(),A=void 0!==t.context?t.context:null,i=void 0===t.depth||t.depth,n=void 0===t.stencil||t.stencil,r=void 0!==t.antialias&&t.antialias,s=void 0===t.premultipliedAlpha||t.premultipliedAlpha,a=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,o=void 0!==t.powerPreference?t.powerPreference:"default",l=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let u;u=null!==A?A.getContextAttributes().alpha:void 0!==t.alpha&&t.alpha;let p=null,m=null;const v=[],C=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=D,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const I=this;let _=!1,M=0,y=0,x=null,E=-1,w=null;const b=new vt,S=new vt;let B=null,Q=e.width,T=e.height,L=1,N=null,R=null;const P=new vt(0,0,Q,T),k=new vt(0,0,Q,T);let U=!1;const z=new RA;let F=!1,G=!1,O=null;const V=new $t,H=new X,W=new Mt,Y={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function J(){return null===x?L:1}let K,q,j,$,et,At,it,nt,rt,st,at,ot,lt,ct,ht,ut,dt,gt,pt,ft,mt,It,_t,yt=A;function xt(t,A){for(let i=0;i<t.length;i++){const n=t[i],r=e.getContext(n,A);if(null!==r)return r}return null}try{const t={alpha:!0,depth:i,stencil:n,antialias:r,premultipliedAlpha:s,preserveDrawingBuffer:a,powerPreference:o,failIfMajorPerformanceCaveat:l};if("setAttribute"in e&&e.setAttribute("data-engine","three.js r141"),e.addEventListener("webglcontextlost",bt,!1),e.addEventListener("webglcontextrestored",St,!1),e.addEventListener("webglcontextcreationerror",Bt,!1),null===yt){const e=["webgl2","webgl","experimental-webgl"];if(!0===I.isWebGL1Renderer&&e.shift(),yt=xt(e,t),null===yt)throw xt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===yt.getShaderPrecisionFormat&&(yt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function Et(){K=new ci(yt),q=new WA(yt,K,t),K.init(q),It=new or(yt,K,q),j=new sr(yt,K,q),$=new di,et=new Yn,At=new ar(yt,K,j,et,q,It,$),it=new JA(I),nt=new li(I),rt=new kA(yt,q),_t=new VA(yt,K,rt,q),st=new hi(yt,rt,$,_t),at=new vi(yt,st,rt,$),pt=new mi(yt,q,At),ut=new YA(et),ot=new Wn(I,it,nt,K,q,_t,ut),lt=new pr(I,et),ct=new qn,ht=new Ar(K,q),gt=new OA(I,it,j,at,u,s),dt=new rr(I,at,q),ft=new HA(yt,K,$,q),mt=new ui(yt,K,$,q),$.programs=ot.programs,I.capabilities=q,I.extensions=K,I.properties=et,I.renderLists=ct,I.shadowMap=dt,I.state=j,I.info=$}Et();const wt=new gr(I,yt);function bt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),_=!0}function St(){console.log("THREE.WebGLRenderer: Context Restored."),_=!1;const t=$.autoReset,e=dt.enabled,A=dt.autoUpdate,i=dt.needsUpdate,n=dt.type;Et(),$.autoReset=t,dt.enabled=e,dt.autoUpdate=A,dt.needsUpdate=i,dt.type=n}function Bt(t){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",t.statusMessage)}function Dt(t){const e=t.target;e.removeEventListener("dispose",Dt),function(t){(function(t){const e=et.get(t).programs;void 0!==e&&(e.forEach((function(t){ot.releaseProgram(t)})),t.isShaderMaterial&&ot.releaseShaderCache(t))})(t),et.remove(t)}(e)}this.xr=wt,this.getContext=function(){return yt},this.getContextAttributes=function(){return yt.getContextAttributes()},this.forceContextLoss=function(){const t=K.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=K.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return L},this.setPixelRatio=function(t){void 0!==t&&(L=t,this.setSize(Q,T,!1))},this.getSize=function(t){return t.set(Q,T)},this.setSize=function(t,A,i){wt.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(Q=t,T=A,e.width=Math.floor(t*L),e.height=Math.floor(A*L),!1!==i&&(e.style.width=t+"px",e.style.height=A+"px"),this.setViewport(0,0,t,A))},this.getDrawingBufferSize=function(t){return t.set(Q*L,T*L).floor()},this.setDrawingBufferSize=function(t,A,i){Q=t,T=A,L=i,e.width=Math.floor(t*i),e.height=Math.floor(A*i),this.setViewport(0,0,t,A)},this.getCurrentViewport=function(t){return t.copy(b)},this.getViewport=function(t){return t.copy(P)},this.setViewport=function(t,e,A,i){t.isVector4?P.set(t.x,t.y,t.z,t.w):P.set(t,e,A,i),j.viewport(b.copy(P).multiplyScalar(L).floor())},this.getScissor=function(t){return t.copy(k)},this.setScissor=function(t,e,A,i){t.isVector4?k.set(t.x,t.y,t.z,t.w):k.set(t,e,A,i),j.scissor(S.copy(k).multiplyScalar(L).floor())},this.getScissorTest=function(){return U},this.setScissorTest=function(t){j.setScissorTest(U=t)},this.setOpaqueSort=function(t){N=t},this.setTransparentSort=function(t){R=t},this.getClearColor=function(t){return t.copy(gt.getClearColor())},this.setClearColor=function(){gt.setClearColor.apply(gt,arguments)},this.getClearAlpha=function(){return gt.getClearAlpha()},this.setClearAlpha=function(){gt.setClearAlpha.apply(gt,arguments)},this.clear=function(t=!0,e=!0,A=!0){let i=0;t&&(i|=16384),e&&(i|=256),A&&(i|=1024),yt.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",bt,!1),e.removeEventListener("webglcontextrestored",St,!1),e.removeEventListener("webglcontextcreationerror",Bt,!1),ct.dispose(),ht.dispose(),et.dispose(),it.dispose(),nt.dispose(),at.dispose(),_t.dispose(),ot.dispose(),wt.dispose(),wt.removeEventListener("sessionstart",Tt),wt.removeEventListener("sessionend",Lt),O&&(O.dispose(),O=null),Nt.stop()},this.renderBufferDirect=function(t,e,A,i,n,r){null===e&&(e=Y);const s=n.isMesh&&n.matrixWorld.determinant()<0,a=function(t,e,A,i,n){!0!==e.isScene&&(e=Y);At.resetTextureUnits();const r=e.fog,s=i.isMeshStandardMaterial?e.environment:null,a=null===x?I.outputEncoding:!0===x.isXRRenderTarget?x.texture.encoding:D,o=(i.isMeshStandardMaterial?nt:it).get(i.envMap||s),l=!0===i.vertexColors&&!!A.attributes.color&&4===A.attributes.color.itemSize,c=!!i.normalMap&&!!A.attributes.tangent,h=!!A.morphAttributes.position,u=!!A.morphAttributes.normal,d=!!A.morphAttributes.color,g=i.toneMapped?I.toneMapping:0,p=A.morphAttributes.position||A.morphAttributes.normal||A.morphAttributes.color,f=void 0!==p?p.length:0,v=et.get(i),C=m.state.lights;if(!0===F&&(!0===G||t!==w)){const e=t===w&&i.id===E;ut.setState(i,t,e)}let _=!1;i.version===v.__version?v.needsLights&&v.lightsStateVersion!==C.state.version||v.outputEncoding!==a||n.isInstancedMesh&&!1===v.instancing?_=!0:n.isInstancedMesh||!0!==v.instancing?n.isSkinnedMesh&&!1===v.skinning?_=!0:n.isSkinnedMesh||!0!==v.skinning?v.envMap!==o||!0===i.fog&&v.fog!==r?_=!0:void 0===v.numClippingPlanes||v.numClippingPlanes===ut.numPlanes&&v.numIntersection===ut.numIntersection?(v.vertexAlphas!==l||v.vertexTangents!==c||v.morphTargets!==h||v.morphNormals!==u||v.morphColors!==d||v.toneMapping!==g||!0===q.isWebGL2&&v.morphTargetsCount!==f)&&(_=!0):_=!0:_=!0:_=!0:(_=!0,v.__version=i.version);let M=v.currentProgram;!0===_&&(M=zt(i,e,n));let y=!1,b=!1,S=!1;const B=M.getUniforms(),Q=v.uniforms;j.useProgram(M.program)&&(y=!0,b=!0,S=!0);i.id!==E&&(E=i.id,b=!0);if(y||w!==t){if(B.setValue(yt,"projectionMatrix",t.projectionMatrix),q.logarithmicDepthBuffer&&B.setValue(yt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),w!==t&&(w=t,b=!0,S=!0),i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshStandardMaterial||i.envMap){const e=B.map.cameraPosition;void 0!==e&&e.setValue(yt,W.setFromMatrixPosition(t.matrixWorld))}(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&B.setValue(yt,"isOrthographic",!0===t.isOrthographicCamera),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.isShadowMaterial||n.isSkinnedMesh)&&B.setValue(yt,"viewMatrix",t.matrixWorldInverse)}if(n.isSkinnedMesh){B.setOptional(yt,n,"bindMatrix"),B.setOptional(yt,n,"bindMatrixInverse");const t=n.skeleton;t&&(q.floatVertexTextures?(null===t.boneTexture&&t.computeBoneTexture(),B.setValue(yt,"boneTexture",t.boneTexture,At),B.setValue(yt,"boneTextureSize",t.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const N=A.morphAttributes;(void 0!==N.position||void 0!==N.normal||void 0!==N.color&&!0===q.isWebGL2)&&pt.update(n,A,i,M);(b||v.receiveShadow!==n.receiveShadow)&&(v.receiveShadow=n.receiveShadow,B.setValue(yt,"receiveShadow",n.receiveShadow));b&&(B.setValue(yt,"toneMappingExposure",I.toneMappingExposure),v.needsLights&&(P=S,(R=Q).ambientLightColor.needsUpdate=P,R.lightProbe.needsUpdate=P,R.directionalLights.needsUpdate=P,R.directionalLightShadows.needsUpdate=P,R.pointLights.needsUpdate=P,R.pointLightShadows.needsUpdate=P,R.spotLights.needsUpdate=P,R.spotLightShadows.needsUpdate=P,R.rectAreaLights.needsUpdate=P,R.hemisphereLights.needsUpdate=P),r&&!0===i.fog&&lt.refreshFogUniforms(Q,r),lt.refreshMaterialUniforms(Q,i,L,T,O),yn.upload(yt,v.uniformsList,Q,At));var R,P;i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(yn.upload(yt,v.uniformsList,Q,At),i.uniformsNeedUpdate=!1);i.isSpriteMaterial&&B.setValue(yt,"center",n.center);return B.setValue(yt,"modelViewMatrix",n.modelViewMatrix),B.setValue(yt,"normalMatrix",n.normalMatrix),B.setValue(yt,"modelMatrix",n.matrixWorld),M}(t,e,A,i,n);j.setMaterial(i,s);let o=A.index;const l=A.attributes.position;if(null===o){if(void 0===l||0===l.count)return}else if(0===o.count)return;let c,h=1;!0===i.wireframe&&(o=st.getWireframeAttribute(A),h=2),_t.setup(n,i,a,A,o);let u=ft;null!==o&&(c=rt.get(o),u=mt,u.setIndex(c));const d=null!==o?o.count:l.count,g=A.drawRange.start*h,p=A.drawRange.count*h,f=null!==r?r.start*h:0,v=null!==r?r.count*h:1/0,C=Math.max(g,f),_=Math.min(d,g+p,f+v)-1,M=Math.max(0,_-C+1);if(0!==M){if(n.isMesh)!0===i.wireframe?(j.setLineWidth(i.wireframeLinewidth*J()),u.setMode(1)):u.setMode(4);else if(n.isLine){let t=i.linewidth;void 0===t&&(t=1),j.setLineWidth(t*J()),n.isLineSegments?u.setMode(1):n.isLineLoop?u.setMode(2):u.setMode(3)}else n.isPoints?u.setMode(0):n.isSprite&&u.setMode(4);if(n.isInstancedMesh)u.renderInstances(C,M,n.count);else if(A.isInstancedBufferGeometry){const t=Math.min(A.instanceCount,A._maxInstanceCount);u.renderInstances(C,M,t)}else u.render(C,M)}},this.compile=function(t,e){m=ht.get(t),m.init(),C.push(m),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(m.pushLight(t),t.castShadow&&m.pushShadow(t))})),m.setupLights(I.physicallyCorrectLights),t.traverse((function(e){const A=e.material;if(A)if(Array.isArray(A))for(let i=0;i<A.length;i++){zt(A[i],t,e)}else zt(A,t,e)})),C.pop(),m=null};let Qt=null;function Tt(){Nt.stop()}function Lt(){Nt.start()}const Nt=new PA;function Rt(t,e,A,i){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)A=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)m.pushLight(t),t.castShadow&&m.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||z.intersectsSprite(t)){i&&W.setFromMatrixPosition(t.matrixWorld).applyMatrix4(V);const e=at.update(t),n=t.material;n.visible&&p.push(t,e,n,A,W.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==$.render.frame&&(t.skeleton.update(),t.skeleton.frame=$.render.frame),!t.frustumCulled||z.intersectsObject(t))){i&&W.setFromMatrixPosition(t.matrixWorld).applyMatrix4(V);const e=at.update(t),n=t.material;if(Array.isArray(n)){const i=e.groups;for(let r=0,s=i.length;r<s;r++){const s=i[r],a=n[s.materialIndex];a&&a.visible&&p.push(t,e,a,A,W.z,s)}}else n.visible&&p.push(t,e,n,A,W.z,null)}const n=t.children;for(let t=0,r=n.length;t<r;t++)Rt(n[t],e,A,i)}function Pt(t,e,A,i){const n=t.opaque,s=t.transmissive,a=t.transparent;m.setupLightsView(A),s.length>0&&function(t,e,A){const i=q.isWebGL2;null===O&&(O=new Ct(1,1,{generateMipmaps:!0,type:K.has("EXT_color_buffer_half_float")?g:h,minFilter:c,samples:i&&!0===r?4:0}));I.getDrawingBufferSize(H),i?O.setSize(H.x,H.y):O.setSize(Z(H.x),Z(H.y));const n=I.getRenderTarget();I.setRenderTarget(O),I.clear();const s=I.toneMapping;I.toneMapping=0,kt(t,e,A),I.toneMapping=s,At.updateMultisampleRenderTarget(O),At.updateRenderTargetMipmap(O),I.setRenderTarget(n)}(n,e,A),i&&j.viewport(b.copy(i)),n.length>0&&kt(n,e,A),s.length>0&&kt(s,e,A),a.length>0&&kt(a,e,A),j.buffers.depth.setTest(!0),j.buffers.depth.setMask(!0),j.buffers.color.setMask(!0),j.setPolygonOffset(!1)}function kt(t,e,A){const i=!0===e.isScene?e.overrideMaterial:null;for(let n=0,r=t.length;n<r;n++){const r=t[n],s=r.object,a=r.geometry,o=null===i?r.material:i,l=r.group;s.layers.test(A.layers)&&Ut(s,e,A,a,o,l)}}function Ut(t,e,A,i,n,r){t.onBeforeRender(I,e,A,i,n,r),t.modelViewMatrix.multiplyMatrices(A.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),n.onBeforeRender(I,e,A,i,t,r),!0===n.transparent&&2===n.side?(n.side=1,n.needsUpdate=!0,I.renderBufferDirect(A,e,i,n,t,r),n.side=0,n.needsUpdate=!0,I.renderBufferDirect(A,e,i,n,t,r),n.side=2):I.renderBufferDirect(A,e,i,n,t,r),t.onAfterRender(I,e,A,i,n,r)}function zt(t,e,A){!0!==e.isScene&&(e=Y);const i=et.get(t),n=m.state.lights,r=m.state.shadowsArray,s=n.state.version,a=ot.getParameters(t,n.state,r,e,A),o=ot.getProgramCacheKey(a);let l=i.programs;i.environment=t.isMeshStandardMaterial?e.environment:null,i.fog=e.fog,i.envMap=(t.isMeshStandardMaterial?nt:it).get(t.envMap||i.environment),void 0===l&&(t.addEventListener("dispose",Dt),l=new Map,i.programs=l);let c=l.get(o);if(void 0!==c){if(i.currentProgram===c&&i.lightsStateVersion===s)return Ft(t,a),c}else a.uniforms=ot.getUniforms(t),t.onBuild(A,a,I),t.onBeforeCompile(a,I),c=ot.acquireProgram(a,o),l.set(o,c),i.uniforms=a.uniforms;const h=i.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(h.clippingPlanes=ut.uniform),Ft(t,a),i.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),i.lightsStateVersion=s,i.needsLights&&(h.ambientLightColor.value=n.state.ambient,h.lightProbe.value=n.state.probe,h.directionalLights.value=n.state.directional,h.directionalLightShadows.value=n.state.directionalShadow,h.spotLights.value=n.state.spot,h.spotLightShadows.value=n.state.spotShadow,h.rectAreaLights.value=n.state.rectArea,h.ltc_1.value=n.state.rectAreaLTC1,h.ltc_2.value=n.state.rectAreaLTC2,h.pointLights.value=n.state.point,h.pointLightShadows.value=n.state.pointShadow,h.hemisphereLights.value=n.state.hemi,h.directionalShadowMap.value=n.state.directionalShadowMap,h.directionalShadowMatrix.value=n.state.directionalShadowMatrix,h.spotShadowMap.value=n.state.spotShadowMap,h.spotShadowMatrix.value=n.state.spotShadowMatrix,h.pointShadowMap.value=n.state.pointShadowMap,h.pointShadowMatrix.value=n.state.pointShadowMatrix);const u=c.getUniforms(),d=yn.seqWithValue(u.seq,h);return i.currentProgram=c,i.uniformsList=d,c}function Ft(t,e){const A=et.get(t);A.outputEncoding=e.outputEncoding,A.instancing=e.instancing,A.skinning=e.skinning,A.morphTargets=e.morphTargets,A.morphNormals=e.morphNormals,A.morphColors=e.morphColors,A.morphTargetsCount=e.morphTargetsCount,A.numClippingPlanes=e.numClippingPlanes,A.numIntersection=e.numClipIntersection,A.vertexAlphas=e.vertexAlphas,A.vertexTangents=e.vertexTangents,A.toneMapping=e.toneMapping}Nt.setAnimationLoop((function(t){Qt&&Qt(t)})),"undefined"!=typeof self&&Nt.setContext(self),this.setAnimationLoop=function(t){Qt=t,wt.setAnimationLoop(t),null===t?Nt.stop():Nt.start()},wt.addEventListener("sessionstart",Tt),wt.addEventListener("sessionend",Lt),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===_)return;!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===wt.enabled&&!0===wt.isPresenting&&(!0===wt.cameraAutoUpdate&&wt.updateCamera(e),e=wt.getCamera()),!0===t.isScene&&t.onBeforeRender(I,t,e,x),m=ht.get(t,C.length),m.init(),C.push(m),V.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),z.setFromProjectionMatrix(V),G=this.localClippingEnabled,F=ut.init(this.clippingPlanes,G,e),p=ct.get(t,v.length),p.init(),v.push(p),Rt(t,e,0,I.sortObjects),p.finish(),!0===I.sortObjects&&p.sort(N,R),!0===F&&ut.beginShadows();const A=m.state.shadowsArray;if(dt.render(A,t,e),!0===F&&ut.endShadows(),!0===this.info.autoReset&&this.info.reset(),gt.render(p,t),m.setupLights(I.physicallyCorrectLights),e.isArrayCamera){const A=e.cameras;for(let e=0,i=A.length;e<i;e++){const i=A[e];Pt(p,t,i,i.viewport)}}else Pt(p,t,e);null!==x&&(At.updateMultisampleRenderTarget(x),At.updateRenderTargetMipmap(x)),!0===t.isScene&&t.onAfterRender(I,t,e),_t.resetDefaultState(),E=-1,w=null,C.pop(),m=C.length>0?C[C.length-1]:null,v.pop(),p=v.length>0?v[v.length-1]:null},this.getActiveCubeFace=function(){return M},this.getActiveMipmapLevel=function(){return y},this.getRenderTarget=function(){return x},this.setRenderTargetTextures=function(t,e,A){et.get(t.texture).__webglTexture=e,et.get(t.depthTexture).__webglTexture=A;const i=et.get(t);i.__hasExternalTextures=!0,i.__hasExternalTextures&&(i.__autoAllocateDepthBuffer=void 0===A,i.__autoAllocateDepthBuffer||!0===K.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),i.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(t,e){const A=et.get(t);A.__webglFramebuffer=e,A.__useDefaultFramebuffer=void 0===e},this.setRenderTarget=function(t,e=0,A=0){x=t,M=e,y=A;let i=!0;if(t){const e=et.get(t);void 0!==e.__useDefaultFramebuffer?(j.bindFramebuffer(36160,null),i=!1):void 0===e.__webglFramebuffer?At.setupRenderTarget(t):e.__hasExternalTextures&&At.rebindTextures(t,et.get(t.texture).__webglTexture,et.get(t.depthTexture).__webglTexture)}let n=null,r=!1,s=!1;if(t){const A=t.texture;(A.isData3DTexture||A.isDataArrayTexture)&&(s=!0);const i=et.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(n=i[e],r=!0):n=q.isWebGL2&&t.samples>0&&!1===At.useMultisampledRTT(t)?et.get(t).__webglMultisampledFramebuffer:i,b.copy(t.viewport),S.copy(t.scissor),B=t.scissorTest}else b.copy(P).multiplyScalar(L).floor(),S.copy(k).multiplyScalar(L).floor(),B=U;if(j.bindFramebuffer(36160,n)&&q.drawBuffers&&i&&j.drawBuffers(t,n),j.viewport(b),j.scissor(S),j.setScissorTest(B),r){const i=et.get(t.texture);yt.framebufferTexture2D(36160,36064,34069+e,i.__webglTexture,A)}else if(s){const i=et.get(t.texture),n=e||0;yt.framebufferTextureLayer(36160,36064,i.__webglTexture,A||0,n)}E=-1},this.readRenderTargetPixels=function(t,e,A,i,n,r,s){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let a=et.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==s&&(a=a[s]),a){j.bindFramebuffer(36160,a);try{const s=t.texture,a=s.format,o=s.type;if(a!==f&&It.convert(a)!==yt.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const l=o===g&&(K.has("EXT_color_buffer_half_float")||q.isWebGL2&&K.has("EXT_color_buffer_float"));if(!(o===h||It.convert(o)===yt.getParameter(35738)||o===d&&(q.isWebGL2||K.has("OES_texture_float")||K.has("WEBGL_color_buffer_float"))||l))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");e>=0&&e<=t.width-i&&A>=0&&A<=t.height-n&&yt.readPixels(e,A,i,n,It.convert(a),It.convert(o),r)}finally{const t=null!==x?et.get(x).__webglFramebuffer:null;j.bindFramebuffer(36160,t)}}},this.copyFramebufferToTexture=function(t,e,A=0){const i=Math.pow(2,-A),n=Math.floor(e.image.width*i),r=Math.floor(e.image.height*i);At.setTexture2D(e,0),yt.copyTexSubImage2D(3553,A,0,0,t.x,t.y,n,r),j.unbindTexture()},this.copyTextureToTexture=function(t,e,A,i=0){const n=e.image.width,r=e.image.height,s=It.convert(A.format),a=It.convert(A.type);At.setTexture2D(A,0),yt.pixelStorei(37440,A.flipY),yt.pixelStorei(37441,A.premultiplyAlpha),yt.pixelStorei(3317,A.unpackAlignment),e.isDataTexture?yt.texSubImage2D(3553,i,t.x,t.y,n,r,s,a,e.image.data):e.isCompressedTexture?yt.compressedTexSubImage2D(3553,i,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,s,e.mipmaps[0].data):yt.texSubImage2D(3553,i,t.x,t.y,s,a,e.image),0===i&&A.generateMipmaps&&yt.generateMipmap(3553),j.unbindTexture()},this.copyTextureToTexture3D=function(t,e,A,i,n=0){if(I.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const r=t.max.x-t.min.x+1,s=t.max.y-t.min.y+1,a=t.max.z-t.min.z+1,o=It.convert(i.format),l=It.convert(i.type);let c;if(i.isData3DTexture)At.setTexture3D(i,0),c=32879;else{if(!i.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");At.setTexture2DArray(i,0),c=35866}yt.pixelStorei(37440,i.flipY),yt.pixelStorei(37441,i.premultiplyAlpha),yt.pixelStorei(3317,i.unpackAlignment);const h=yt.getParameter(3314),u=yt.getParameter(32878),d=yt.getParameter(3316),g=yt.getParameter(3315),p=yt.getParameter(32877),f=A.isCompressedTexture?A.mipmaps[0]:A.image;yt.pixelStorei(3314,f.width),yt.pixelStorei(32878,f.height),yt.pixelStorei(3316,t.min.x),yt.pixelStorei(3315,t.min.y),yt.pixelStorei(32877,t.min.z),A.isDataTexture||A.isData3DTexture?yt.texSubImage3D(c,n,e.x,e.y,e.z,r,s,a,o,l,f.data):A.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),yt.compressedTexSubImage3D(c,n,e.x,e.y,e.z,r,s,a,o,f.data)):yt.texSubImage3D(c,n,e.x,e.y,e.z,r,s,a,o,l,f),yt.pixelStorei(3314,h),yt.pixelStorei(32878,u),yt.pixelStorei(3316,d),yt.pixelStorei(3315,g),yt.pixelStorei(32877,p),0===n&&i.generateMipmaps&&yt.generateMipmap(c),j.unbindTexture()},this.initTexture=function(t){At.setTexture2D(t,0),j.unbindTexture()},this.resetState=function(){M=0,y=0,x=null,j.reset(),_t.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}(class extends fr{}).prototype.isWebGL1Renderer=!0;class mr extends xe{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}class vr{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=R,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=V()}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,A){t*=this.stride,A*=e.stride;for(let i=0,n=this.stride;i<n;i++)this.array[t+i]=e.array[A+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=V()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),A=new this.constructor(e,this.stride);return A.setUsage(this.usage),A}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=V()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Cr=new Mt;class Ir{constructor(t,e,A,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=A,this.normalized=!0===i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,A=this.data.count;e<A;e++)Cr.fromBufferAttribute(this,e),Cr.applyMatrix4(t),this.setXYZ(e,Cr.x,Cr.y,Cr.z);return this}applyNormalMatrix(t){for(let e=0,A=this.count;e<A;e++)Cr.fromBufferAttribute(this,e),Cr.applyNormalMatrix(t),this.setXYZ(e,Cr.x,Cr.y,Cr.z);return this}transformDirection(t){for(let e=0,A=this.count;e<A;e++)Cr.fromBufferAttribute(this,e),Cr.transformDirection(t),this.setXYZ(e,Cr.x,Cr.y,Cr.z);return this}setX(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){return this.data.array[t*this.data.stride+this.offset]}getY(t){return this.data.array[t*this.data.stride+this.offset+1]}getZ(t){return this.data.array[t*this.data.stride+this.offset+2]}getW(t){return this.data.array[t*this.data.stride+this.offset+3]}setXY(t,e,A){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=A,this}setXYZ(t,e,A,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=A,this.data.array[t+2]=i,this}setXYZW(t,e,A,i,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=A,this.data.array[t+2]=i,this.data.array[t+3]=n,this}clone(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const A=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[A+e])}return new Ge(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new Ir(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const A=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[A+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}const _r=new Mt,Mr=new vt,yr=new vt,xr=new Mt,Er=new $t;class wr extends fA{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new $t,this.bindMatrixInverse=new $t}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this}bind(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new vt,e=this.geometry.attributes.skinWeight;for(let A=0,i=e.count;A<i;A++){t.fromBufferAttribute(e,A);const i=1/t.manhattanLength();i!==1/0?t.multiplyScalar(i):t.set(1,0,0,0),e.setXYZW(A,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(t,e){const A=this.skeleton,i=this.geometry;Mr.fromBufferAttribute(i.attributes.skinIndex,t),yr.fromBufferAttribute(i.attributes.skinWeight,t),_r.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){const i=yr.getComponent(t);if(0!==i){const n=Mr.getComponent(t);Er.multiplyMatrices(A.bones[n].matrixWorld,A.boneInverses[n]),e.addScaledVector(xr.copy(_r).applyMatrix4(Er),i)}}return e.applyMatrix4(this.bindMatrixInverse)}}class br extends xe{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Sr extends mt{constructor(t=null,e=1,A=1,i,n,r,s,a,o=1003,l=1003,c,h){super(null,r,s,a,o,l,i,n,c,h),this.isDataTexture=!0,this.image={data:t,width:e,height:A},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Br=new $t,Dr=new $t;class Qr{constructor(t=[],e=[]){this.uuid=V(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(16*t.length),0===e.length)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new $t)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const e=new $t;this.bones[t]&&e.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(e)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&e.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&(e.parent&&e.parent.isBone?(e.matrix.copy(e.parent.matrixWorld).invert(),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))}}update(){const t=this.bones,e=this.boneInverses,A=this.boneMatrices,i=this.boneTexture;for(let i=0,n=t.length;i<n;i++){const n=t[i]?t[i].matrixWorld:Dr;Br.multiplyMatrices(n,e[i]),Br.toArray(A,16*i)}null!==i&&(i.needsUpdate=!0)}clone(){return new Qr(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(4*this.bones.length);t=K(t),t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const A=new Sr(e,t,t,f,d);return A.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=A,this.boneTextureSize=t,this}getBoneByName(t){for(let e=0,A=this.bones.length;e<A;e++){const A=this.bones[e];if(A.name===t)return A}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let A=0,i=t.bones.length;A<i;A++){const i=t.bones[A];let n=e[i];void 0===n&&(console.warn("THREE.Skeleton: No bone found with UUID:",i),n=new br),this.bones.push(n),this.boneInverses.push((new $t).fromArray(t.boneInverses[A]))}return this.init(),this}toJSON(){const t={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,A=this.boneInverses;for(let i=0,n=e.length;i<n;i++){const n=e[i];t.bones.push(n.uuid);const r=A[i];t.boneInverses.push(r.toArray())}return t}}class Tr extends ke{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new ht(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}new Mt,new Mt,new Mt,new Mt,new Re;class Lr extends MA{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Nr extends ke{constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ht(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ht(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new X(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}const Rr={ShadowMaterial:class extends ke{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new ht(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}},SpriteMaterial:class extends ke{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new ht(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}},RawShaderMaterial:Lr,ShaderMaterial:MA,PointsMaterial:class extends ke{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new ht(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}},MeshPhysicalMaterial:class extends Nr{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new X(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return H(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new ht(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new ht(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new ht(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(t)}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}},MeshStandardMaterial:Nr,MeshPhongMaterial:class extends ke{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new ht(16777215),this.specular=new ht(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ht(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new X(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}},MeshToonMaterial:class extends ke{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ht(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ht(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new X(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}},MeshNormalMaterial:class extends ke{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new X(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}},MeshLambertMaterial:class extends ke{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new ht(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ht(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}},MeshDepthMaterial:ir,MeshDistanceMaterial:nr,MeshBasicMaterial:Ue,MeshMatcapMaterial:class extends ke{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ht(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new X(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}},LineDashedMaterial:class extends Tr{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}},LineBasicMaterial:Tr,Material:ke};ke.fromType=function(t){return new Rr[t]};const Pr={arraySlice:function(t,e,A){return Pr.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==A?A:t.length)):t.slice(e,A)},convertArray:function(t,e,A){return!t||!A&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){const e=t.length,A=new Array(e);for(let t=0;t!==e;++t)A[t]=t;return A.sort((function(e,A){return t[e]-t[A]})),A},sortedArray:function(t,e,A){const i=t.length,n=new t.constructor(i);for(let r=0,s=0;s!==i;++r){const i=A[r]*e;for(let A=0;A!==e;++A)n[s++]=t[i+A]}return n},flattenJSON:function(t,e,A,i){let n=1,r=t[0];for(;void 0!==r&&void 0===r[i];)r=t[n++];if(void 0===r)return;let s=r[i];if(void 0!==s)if(Array.isArray(s))do{s=r[i],void 0!==s&&(e.push(r.time),A.push.apply(A,s)),r=t[n++]}while(void 0!==r);else if(void 0!==s.toArray)do{s=r[i],void 0!==s&&(e.push(r.time),s.toArray(A,A.length)),r=t[n++]}while(void 0!==r);else do{s=r[i],void 0!==s&&(e.push(r.time),A.push(s)),r=t[n++]}while(void 0!==r)},subclip:function(t,e,A,i,n=30){const r=t.clone();r.name=e;const s=[];for(let t=0;t<r.tracks.length;++t){const e=r.tracks[t],a=e.getValueSize(),o=[],l=[];for(let t=0;t<e.times.length;++t){const r=e.times[t]*n;if(!(r<A||r>=i)){o.push(e.times[t]);for(let A=0;A<a;++A)l.push(e.values[t*a+A])}}0!==o.length&&(e.times=Pr.convertArray(o,e.times.constructor),e.values=Pr.convertArray(l,e.values.constructor),s.push(e))}r.tracks=s;let a=1/0;for(let t=0;t<r.tracks.length;++t)a>r.tracks[t].times[0]&&(a=r.tracks[t].times[0]);for(let t=0;t<r.tracks.length;++t)r.tracks[t].shift(-1*a);return r.resetDuration(),r},makeClipAdditive:function(t,e=0,A=t,i=30){i<=0&&(i=30);const n=A.tracks.length,r=e/i;for(let e=0;e<n;++e){const i=A.tracks[e],n=i.ValueTypeName;if("bool"===n||"string"===n)continue;const s=t.tracks.find((function(t){return t.name===i.name&&t.ValueTypeName===n}));if(void 0===s)continue;let a=0;const o=i.getValueSize();i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(a=o/3);let l=0;const c=s.getValueSize();s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(l=c/3);const h=i.times.length-1;let u;if(r<=i.times[0]){const t=a,e=o-a;u=Pr.arraySlice(i.values,t,e)}else if(r>=i.times[h]){const t=h*o+a,e=t+o-a;u=Pr.arraySlice(i.values,t,e)}else{const t=i.createInterpolant(),e=a,A=o-a;t.evaluate(r),u=Pr.arraySlice(t.resultBuffer,e,A)}if("quaternion"===n){(new _t).fromArray(u).normalize().conjugate().toArray(u)}const d=s.times.length;for(let t=0;t<d;++t){const e=t*c+l;if("quaternion"===n)_t.multiplyQuaternionsFlat(s.values,e,u,0,s.values,e);else{const t=c-2*l;for(let A=0;A<t;++A)s.values[e+A]-=u[A]}}}return t.blendMode=2501,t}};class kr{constructor(t,e,A,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new e.constructor(A),this.sampleValues=e,this.valueSize=A,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let A=this._cachedIndex,i=e[A],n=e[A-1];t:{e:{let r;A:{i:if(!(t<i)){for(let r=A+2;;){if(void 0===i){if(t<n)break i;return A=e.length,this._cachedIndex=A,this.copySampleValue_(A-1)}if(A===r)break;if(n=i,i=e[++A],t<i)break e}r=e.length;break A}if(t>=n)break t;{const s=e[1];t<s&&(A=2,n=s);for(let r=A-2;;){if(void 0===n)return this._cachedIndex=0,this.copySampleValue_(0);if(A===r)break;if(i=n,n=e[--A-1],t>=n)break e}r=A,A=0}}for(;A<r;){const i=A+r>>>1;t<e[i]?r=i:A=i+1}if(i=e[A],n=e[A-1],void 0===n)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===i)return A=e.length,this._cachedIndex=A,this.copySampleValue_(A-1)}this._cachedIndex=A,this.intervalChanged_(A,n,i)}return this.interpolate_(A,n,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,A=this.sampleValues,i=this.valueSize,n=t*i;for(let t=0;t!==i;++t)e[t]=A[n+t];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Ur extends kr{constructor(t,e,A,i){super(t,e,A,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:w,endingEnd:w}}intervalChanged_(t,e,A){const i=this.parameterPositions;let n=t-2,r=t+1,s=i[n],a=i[r];if(void 0===s)switch(this.getSettings_().endingStart){case b:n=t,s=2*e-A;break;case S:n=i.length-2,s=e+i[n]-i[n+1];break;default:n=t,s=A}if(void 0===a)switch(this.getSettings_().endingEnd){case b:r=t,a=2*A-e;break;case S:r=1,a=A+i[1]-i[0];break;default:r=t-1,a=e}const o=.5*(A-e),l=this.valueSize;this._weightPrev=o/(e-s),this._weightNext=o/(a-A),this._offsetPrev=n*l,this._offsetNext=r*l}interpolate_(t,e,A,i){const n=this.resultBuffer,r=this.sampleValues,s=this.valueSize,a=t*s,o=a-s,l=this._offsetPrev,c=this._offsetNext,h=this._weightPrev,u=this._weightNext,d=(A-e)/(i-e),g=d*d,p=g*d,f=-h*p+2*h*g-h*d,m=(1+h)*p+(-1.5-2*h)*g+(-.5+h)*d+1,v=(-1-u)*p+(1.5+u)*g+.5*d,C=u*p-u*g;for(let t=0;t!==s;++t)n[t]=f*r[l+t]+m*r[o+t]+v*r[a+t]+C*r[c+t];return n}}class zr extends kr{constructor(t,e,A,i){super(t,e,A,i)}interpolate_(t,e,A,i){const n=this.resultBuffer,r=this.sampleValues,s=this.valueSize,a=t*s,o=a-s,l=(A-e)/(i-e),c=1-l;for(let t=0;t!==s;++t)n[t]=r[o+t]*c+r[a+t]*l;return n}}class Fr extends kr{constructor(t,e,A,i){super(t,e,A,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class Gr{constructor(t,e,A,i){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Pr.convertArray(e,this.TimeBufferType),this.values=Pr.convertArray(A,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let A;if(e.toJSON!==this.toJSON)A=e.toJSON(t);else{A={name:t.name,times:Pr.convertArray(t.times,Array),values:Pr.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(A.interpolation=e)}return A.type=t.ValueTypeName,A}InterpolantFactoryMethodDiscrete(t){return new Fr(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new zr(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new Ur(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case y:e=this.InterpolantFactoryMethodDiscrete;break;case x:e=this.InterpolantFactoryMethodLinear;break;case E:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return y;case this.InterpolantFactoryMethodLinear:return x;case this.InterpolantFactoryMethodSmooth:return E}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let A=0,i=e.length;A!==i;++A)e[A]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let A=0,i=e.length;A!==i;++A)e[A]*=t}return this}trim(t,e){const A=this.times,i=A.length;let n=0,r=i-1;for(;n!==i&&A[n]<t;)++n;for(;-1!==r&&A[r]>e;)--r;if(++r,0!==n||r!==i){n>=r&&(r=Math.max(r,1),n=r-1);const t=this.getValueSize();this.times=Pr.arraySlice(A,n,r),this.values=Pr.arraySlice(this.values,n*t,r*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const A=this.times,i=this.values,n=A.length;0===n&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let r=null;for(let e=0;e!==n;e++){const i=A[e];if("number"==typeof i&&isNaN(i)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,i),t=!1;break}if(null!==r&&r>i){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,i,r),t=!1;break}r=i}if(void 0!==i&&Pr.isTypedArray(i))for(let e=0,A=i.length;e!==A;++e){const A=i[e];if(isNaN(A)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,A),t=!1;break}}return t}optimize(){const t=Pr.arraySlice(this.times),e=Pr.arraySlice(this.values),A=this.getValueSize(),i=this.getInterpolation()===E,n=t.length-1;let r=1;for(let s=1;s<n;++s){let n=!1;const a=t[s];if(a!==t[s+1]&&(1!==s||a!==t[0]))if(i)n=!0;else{const t=s*A,i=t-A,r=t+A;for(let s=0;s!==A;++s){const A=e[t+s];if(A!==e[i+s]||A!==e[r+s]){n=!0;break}}}if(n){if(s!==r){t[r]=t[s];const i=s*A,n=r*A;for(let t=0;t!==A;++t)e[n+t]=e[i+t]}++r}}if(n>0){t[r]=t[n];for(let t=n*A,i=r*A,s=0;s!==A;++s)e[i+s]=e[t+s];++r}return r!==t.length?(this.times=Pr.arraySlice(t,0,r),this.values=Pr.arraySlice(e,0,r*A)):(this.times=t,this.values=e),this}clone(){const t=Pr.arraySlice(this.times,0),e=Pr.arraySlice(this.values,0),A=new(0,this.constructor)(this.name,t,e);return A.createInterpolant=this.createInterpolant,A}}Gr.prototype.TimeBufferType=Float32Array,Gr.prototype.ValueBufferType=Float32Array,Gr.prototype.DefaultInterpolation=x;class Or extends Gr{}Or.prototype.ValueTypeName="bool",Or.prototype.ValueBufferType=Array,Or.prototype.DefaultInterpolation=y,Or.prototype.InterpolantFactoryMethodLinear=void 0,Or.prototype.InterpolantFactoryMethodSmooth=void 0;class Vr extends Gr{}Vr.prototype.ValueTypeName="color";class Hr extends Gr{}Hr.prototype.ValueTypeName="number";class Wr extends kr{constructor(t,e,A,i){super(t,e,A,i)}interpolate_(t,e,A,i){const n=this.resultBuffer,r=this.sampleValues,s=this.valueSize,a=(A-e)/(i-e);let o=t*s;for(let t=o+s;o!==t;o+=4)_t.slerpFlat(n,0,r,o-s,r,o,a);return n}}class Yr extends Gr{InterpolantFactoryMethodLinear(t){return new Wr(this.times,this.values,this.getValueSize(),t)}}Yr.prototype.ValueTypeName="quaternion",Yr.prototype.DefaultInterpolation=x,Yr.prototype.InterpolantFactoryMethodSmooth=void 0;class Jr extends Gr{}Jr.prototype.ValueTypeName="string",Jr.prototype.ValueBufferType=Array,Jr.prototype.DefaultInterpolation=y,Jr.prototype.InterpolantFactoryMethodLinear=void 0,Jr.prototype.InterpolantFactoryMethodSmooth=void 0;class Kr extends Gr{}Kr.prototype.ValueTypeName="vector";class Zr{constructor(t,e=-1,A,i=2500){this.name=t,this.tracks=A,this.duration=e,this.blendMode=i,this.uuid=V(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],A=t.tracks,i=1/(t.fps||1);for(let t=0,n=A.length;t!==n;++t)e.push(qr(A[t]).scale(i));const n=new this(t.name,t.duration,e,t.blendMode);return n.uuid=t.uuid,n}static toJSON(t){const e=[],A=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,i=A.length;t!==i;++t)e.push(Gr.toJSON(A[t]));return i}static CreateFromMorphTargetSequence(t,e,A,i){const n=e.length,r=[];for(let t=0;t<n;t++){let s=[],a=[];s.push((t+n-1)%n,t,(t+1)%n),a.push(0,1,0);const o=Pr.getKeyframeOrder(s);s=Pr.sortedArray(s,1,o),a=Pr.sortedArray(a,1,o),i||0!==s[0]||(s.push(n),a.push(a[0])),r.push(new Hr(".morphTargetInfluences["+e[t].name+"]",s,a).scale(1/A))}return new this(t,-1,r)}static findByName(t,e){let A=t;if(!Array.isArray(t)){const e=t;A=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<A.length;t++)if(A[t].name===e)return A[t];return null}static CreateClipsFromMorphTargetSequences(t,e,A){const i={},n=/^([\w-]*?)([\d]+)$/;for(let e=0,A=t.length;e<A;e++){const A=t[e],r=A.name.match(n);if(r&&r.length>1){const t=r[1];let e=i[t];e||(i[t]=e=[]),e.push(A)}}const r=[];for(const t in i)r.push(this.CreateFromMorphTargetSequence(t,i[t],e,A));return r}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const A=function(t,e,A,i,n){if(0!==A.length){const r=[],s=[];Pr.flattenJSON(A,r,s,i),0!==r.length&&n.push(new t(e,r,s))}},i=[],n=t.name||"default",r=t.fps||30,s=t.blendMode;let a=t.length||-1;const o=t.hierarchy||[];for(let t=0;t<o.length;t++){const n=o[t].keys;if(n&&0!==n.length)if(n[0].morphTargets){const t={};let e;for(e=0;e<n.length;e++)if(n[e].morphTargets)for(let A=0;A<n[e].morphTargets.length;A++)t[n[e].morphTargets[A]]=-1;for(const A in t){const t=[],r=[];for(let i=0;i!==n[e].morphTargets.length;++i){const i=n[e];t.push(i.time),r.push(i.morphTarget===A?1:0)}i.push(new Hr(".morphTargetInfluence["+A+"]",t,r))}a=t.length*r}else{const r=".bones["+e[t].name+"]";A(Kr,r+".position",n,"pos",i),A(Yr,r+".quaternion",n,"rot",i),A(Kr,r+".scale",n,"scl",i)}}if(0===i.length)return null;return new this(n,a,i,s)}resetDuration(){let t=0;for(let e=0,A=this.tracks.length;e!==A;++e){const A=this.tracks[e];t=Math.max(t,A.times[A.times.length-1])}return this.duration=t,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function qr(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Hr;case"vector":case"vector2":case"vector3":case"vector4":return Kr;case"color":return Vr;case"quaternion":return Yr;case"bool":case"boolean":return Or;case"string":return Jr}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],A=[];Pr.flattenJSON(t.keys,e,A,"value"),t.times=e,t.values=A}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}function Xr(){return("undefined"==typeof performance?Date:performance).now()}class jr{constructor(t,e,A){let i,n,r;switch(this.binding=t,this.valueSize=A,e){case"quaternion":i=this._slerp,n=this._slerpAdditive,r=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*A),this._workIndex=5;break;case"string":case"bool":i=this._select,n=this._select,r=this._setAdditiveIdentityOther,this.buffer=new Array(5*A);break;default:i=this._lerp,n=this._lerpAdditive,r=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*A)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=n,this._setIdentity=r,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const A=this.buffer,i=this.valueSize,n=t*i+i;let r=this.cumulativeWeight;if(0===r){for(let t=0;t!==i;++t)A[n+t]=A[t];r=e}else{r+=e;const t=e/r;this._mixBufferRegion(A,n,0,t,i)}this.cumulativeWeight=r}accumulateAdditive(t){const e=this.buffer,A=this.valueSize,i=A*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,A),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,A=this.buffer,i=t*e+e,n=this.cumulativeWeight,r=this.cumulativeWeightAdditive,s=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,n<1){const t=e*this._origIndex;this._mixBufferRegion(A,i,t,1-n,e)}r>0&&this._mixBufferRegionAdditive(A,i,this._addIndex*e,1,e);for(let t=e,n=e+e;t!==n;++t)if(A[t]!==A[t+e]){s.setValue(A,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,A=this.valueSize,i=A*this._origIndex;t.getValue(e,i);for(let t=A,n=i;t!==n;++t)e[t]=e[i+t%A];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let A=t;A<e;A++)this.buffer[A]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let A=0;A<this.valueSize;A++)this.buffer[e+A]=this.buffer[t+A]}_select(t,e,A,i,n){if(i>=.5)for(let i=0;i!==n;++i)t[e+i]=t[A+i]}_slerp(t,e,A,i){_t.slerpFlat(t,e,t,e,t,A,i)}_slerpAdditive(t,e,A,i,n){const r=this._workIndex*n;_t.multiplyQuaternionsFlat(t,r,t,e,t,A),_t.slerpFlat(t,e,t,e,t,r,i)}_lerp(t,e,A,i,n){const r=1-i;for(let s=0;s!==n;++s){const n=e+s;t[n]=t[n]*r+t[A+s]*i}}_lerpAdditive(t,e,A,i,n){for(let r=0;r!==n;++r){const n=e+r;t[n]=t[n]+t[A+r]*i}}}const $r="\\[\\]\\.:\\/",ts=new RegExp("[\\[\\]\\.:\\/]","g"),es="[^\\[\\]\\.:\\/]",As="[^"+$r.replace("\\.","")+"]",is=/((?:WC+[\/:])*)/.source.replace("WC",es),ns=/(WCOD+)?/.source.replace("WCOD",As),rs=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",es),ss=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",es),as=new RegExp("^"+is+ns+rs+ss+"$"),os=["material","materials","bones"];class ls{constructor(t,e,A){this.path=e,this.parsedPath=A||ls.parseTrackName(e),this.node=ls.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,A){return t&&t.isAnimationObjectGroup?new ls.Composite(t,e,A):new ls(t,e,A)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(ts,"")}static parseTrackName(t){const e=as.exec(t);if(null===e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const A={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=A.nodeName&&A.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){const t=A.nodeName.substring(i+1);-1!==os.indexOf(t)&&(A.nodeName=A.nodeName.substring(0,i),A.objectName=t)}if(null===A.propertyName||0===A.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return A}static findNode(t,e){if(void 0===e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const A=t.skeleton.getBoneByName(e);if(void 0!==A)return A}if(t.children){const A=function(t){for(let i=0;i<t.length;i++){const n=t[i];if(n.name===e||n.uuid===e)return n;const r=A(n.children);if(r)return r}return null},i=A(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const A=this.resolvedProperty;for(let i=0,n=A.length;i!==n;++i)t[e++]=A[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const A=this.resolvedProperty;for(let i=0,n=A.length;i!==n;++i)A[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const A=this.resolvedProperty;for(let i=0,n=A.length;i!==n;++i)A[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const A=this.resolvedProperty;for(let i=0,n=A.length;i!==n;++i)A[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,A=e.objectName,i=e.propertyName;let n=e.propertyIndex;if(t||(t=ls.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(A){let i=e.objectIndex;switch(A){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===i){i=e;break}break;default:if(void 0===t[A])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[A]}if(void 0!==i){if(void 0===t[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[i]}}const r=t[i];if(void 0===r){const A=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+A+"."+i+" but it wasn't found.",t)}let s=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?s=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(s=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(void 0!==n){if("morphTargetInfluences"===i){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[n]&&(n=t.morphTargetDictionary[n])}a=this.BindingType.ArrayElement,this.resolvedProperty=r,this.propertyIndex=n}else void 0!==r.fromArray&&void 0!==r.toArray?(a=this.BindingType.HasFromToArray,this.resolvedProperty=r):Array.isArray(r)?(a=this.BindingType.EntireArray,this.resolvedProperty=r):this.propertyName=i;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][s]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}ls.Composite=class{constructor(t,e,A){const i=A||ls.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();const A=this._targetGroup.nCachedObjects_,i=this._bindings[A];void 0!==i&&i.getValue(t,e)}setValue(t,e){const A=this._bindings;for(let i=this._targetGroup.nCachedObjects_,n=A.length;i!==n;++i)A[i].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,A=t.length;e!==A;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,A=t.length;e!==A;++e)t[e].unbind()}},ls.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},ls.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},ls.prototype.GetterByBindingType=[ls.prototype._getValue_direct,ls.prototype._getValue_array,ls.prototype._getValue_arrayElement,ls.prototype._getValue_toArray],ls.prototype.SetterByBindingTypeAndVersioning=[[ls.prototype._setValue_direct,ls.prototype._setValue_direct_setNeedsUpdate,ls.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[ls.prototype._setValue_array,ls.prototype._setValue_array_setNeedsUpdate,ls.prototype._setValue_array_setMatrixWorldNeedsUpdate],[ls.prototype._setValue_arrayElement,ls.prototype._setValue_arrayElement_setNeedsUpdate,ls.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[ls.prototype._setValue_fromArray,ls.prototype._setValue_fromArray_setNeedsUpdate,ls.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class cs{constructor(t,e,A=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=A,this.blendMode=i;const n=e.tracks,r=n.length,s=new Array(r),a={endingStart:w,endingEnd:w};for(let t=0;t!==r;++t){const e=n[t].createInterpolant(null);s[t]=e,e.settings=a}this._interpolantSettings=a,this._interpolants=s,this._propertyBindings=new Array(r),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,A){if(t.fadeOut(e),this.fadeIn(e),A){const A=this._clip.duration,i=t._clip.duration,n=i/A,r=A/i;t.warp(1,n,e),this.warp(r,1,e)}return this}crossFadeTo(t,e,A){return t.crossFadeFrom(this,e,A)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,A){const i=this._mixer,n=i.time,r=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=i._lendControlInterpolant(),this._timeScaleInterpolant=s);const a=s.parameterPositions,o=s.sampleValues;return a[0]=n,a[1]=n+A,o[0]=t/r,o[1]=e/r,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,A,i){if(!this.enabled)return void this._updateWeight(t);const n=this._startTime;if(null!==n){const i=(t-n)*A;if(i<0||0===A)return;this._startTime=null,e=A*i}e*=this._updateTimeScale(t);const r=this._updateTime(e),s=this._updateWeight(t);if(s>0){const t=this._interpolants,e=this._propertyBindings;if(2501===this.blendMode)for(let A=0,i=t.length;A!==i;++A)t[A].evaluate(r),e[A].accumulateAdditive(s);else for(let A=0,n=t.length;A!==n;++A)t[A].evaluate(r),e[A].accumulate(i,s)}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const A=this._weightInterpolant;if(null!==A){const i=A.evaluate(t)[0];e*=i,t>A.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const A=this._timeScaleInterpolant;if(null!==A){e*=A.evaluate(t)[0],t>A.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,A=this.loop;let i=this.time+t,n=this._loopCount;const r=2202===A;if(0===t)return-1===n?i:r&&1==(1&n)?e-i:i;if(2200===A){-1===n&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else{if(!(i<0)){this.time=i;break t}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===n&&(t>=0?(n=0,this._setEndings(!0,0===this.repetitions,r)):this._setEndings(0===this.repetitions,!0,r)),i>=e||i<0){const A=Math.floor(i/e);i-=e*A,n+=Math.abs(A);const s=this.repetitions-n;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===s){const e=t<0;this._setEndings(e,!e,r)}else this._setEndings(!1,!1,r);this._loopCount=n,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:A})}}else this.time=i;if(r&&1==(1&n))return e-i}return i}_setEndings(t,e,A){const i=this._interpolantSettings;A?(i.endingStart=b,i.endingEnd=b):(i.endingStart=t?this.zeroSlopeAtStart?b:w:S,i.endingEnd=e?this.zeroSlopeAtEnd?b:w:S)}_scheduleFading(t,e,A){const i=this._mixer,n=i.time;let r=this._weightInterpolant;null===r&&(r=i._lendControlInterpolant(),this._weightInterpolant=r);const s=r.parameterPositions,a=r.sampleValues;return s[0]=n,a[0]=e,s[1]=n+t,a[1]=A,this}}const hs=new Float32Array(1);class us extends U{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const A=t._localRoot||this._root,i=t._clip.tracks,n=i.length,r=t._propertyBindings,s=t._interpolants,a=A.uuid,o=this._bindingsByRootAndName;let l=o[a];void 0===l&&(l={},o[a]=l);for(let t=0;t!==n;++t){const n=i[t],o=n.name;let c=l[o];if(void 0!==c)++c.referenceCount,r[t]=c;else{if(c=r[t],void 0!==c){null===c._cacheIndex&&(++c.referenceCount,this._addInactiveBinding(c,a,o));continue}const i=e&&e._propertyBindings[t].binding.parsedPath;c=new jr(ls.create(A,o,i),n.ValueTypeName,n.getValueSize()),++c.referenceCount,this._addInactiveBinding(c,a,o),r[t]=c}s[t].resultBuffer=c.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,A=t._clip.uuid,i=this._actionsByClip[A];this._bindAction(t,i&&i.knownActions[0]),this._addInactiveAction(t,A,e)}const e=t._propertyBindings;for(let t=0,A=e.length;t!==A;++t){const A=e[t];0==A.useCount++&&(this._lendBinding(A),A.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,A=e.length;t!==A;++t){const A=e[t];0==--A.useCount&&(A.restoreOriginalState(),this._takeBackBinding(A))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,A){const i=this._actions,n=this._actionsByClip;let r=n[e];if(void 0===r)r={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,n[e]=r;else{const e=r.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=i.length,i.push(t),r.actionByRoot[A]=t}_removeInactiveAction(t){const e=this._actions,A=e[e.length-1],i=t._cacheIndex;A._cacheIndex=i,e[i]=A,e.pop(),t._cacheIndex=null;const n=t._clip.uuid,r=this._actionsByClip,s=r[n],a=s.knownActions,o=a[a.length-1],l=t._byClipCacheIndex;o._byClipCacheIndex=l,a[l]=o,a.pop(),t._byClipCacheIndex=null;delete s.actionByRoot[(t._localRoot||this._root).uuid],0===a.length&&delete r[n],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let t=0,A=e.length;t!==A;++t){const A=e[t];0==--A.referenceCount&&this._removeInactiveBinding(A)}}_lendAction(t){const e=this._actions,A=t._cacheIndex,i=this._nActiveActions++,n=e[i];t._cacheIndex=i,e[i]=t,n._cacheIndex=A,e[A]=n}_takeBackAction(t){const e=this._actions,A=t._cacheIndex,i=--this._nActiveActions,n=e[i];t._cacheIndex=i,e[i]=t,n._cacheIndex=A,e[A]=n}_addInactiveBinding(t,e,A){const i=this._bindingsByRootAndName,n=this._bindings;let r=i[e];void 0===r&&(r={},i[e]=r),r[A]=t,t._cacheIndex=n.length,n.push(t)}_removeInactiveBinding(t){const e=this._bindings,A=t.binding,i=A.rootNode.uuid,n=A.path,r=this._bindingsByRootAndName,s=r[i],a=e[e.length-1],o=t._cacheIndex;a._cacheIndex=o,e[o]=a,e.pop(),delete s[n],0===Object.keys(s).length&&delete r[i]}_lendBinding(t){const e=this._bindings,A=t._cacheIndex,i=this._nActiveBindings++,n=e[i];t._cacheIndex=i,e[i]=t,n._cacheIndex=A,e[A]=n}_takeBackBinding(t){const e=this._bindings,A=t._cacheIndex,i=--this._nActiveBindings,n=e[i];t._cacheIndex=i,e[i]=t,n._cacheIndex=A,e[A]=n}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let A=t[e];return void 0===A&&(A=new zr(new Float32Array(2),new Float32Array(2),1,hs),A.__cacheIndex=e,t[e]=A),A}_takeBackControlInterpolant(t){const e=this._controlInterpolants,A=t.__cacheIndex,i=--this._nActiveControlInterpolants,n=e[i];t.__cacheIndex=i,e[i]=t,n.__cacheIndex=A,e[A]=n}clipAction(t,e,A){const i=e||this._root,n=i.uuid;let r="string"==typeof t?Zr.findByName(i,t):t;const s=null!==r?r.uuid:t,a=this._actionsByClip[s];let o=null;if(void 0===A&&(A=null!==r?r.blendMode:B),void 0!==a){const t=a.actionByRoot[n];if(void 0!==t&&t.blendMode===A)return t;o=a.knownActions[0],null===r&&(r=o._clip)}if(null===r)return null;const l=new cs(this,r,e,A);return this._bindAction(l,o),this._addInactiveAction(l,s,n),l}existingAction(t,e){const A=e||this._root,i=A.uuid,n="string"==typeof t?Zr.findByName(A,t):t,r=n?n.uuid:t,s=this._actionsByClip[r];return void 0!==s&&s.actionByRoot[i]||null}stopAllAction(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this}update(t){t*=this.timeScale;const e=this._actions,A=this._nActiveActions,i=this.time+=t,n=Math.sign(t),r=this._accuIndex^=1;for(let s=0;s!==A;++s){e[s]._update(i,t,n,r)}const s=this._bindings,a=this._nActiveBindings;for(let t=0;t!==a;++t)s[t].apply(r);return this}setTime(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,A=t.uuid,i=this._actionsByClip,n=i[A];if(void 0!==n){const t=n.knownActions;for(let A=0,i=t.length;A!==i;++A){const i=t[A];this._deactivateAction(i);const n=i._cacheIndex,r=e[e.length-1];i._cacheIndex=null,i._byClipCacheIndex=null,r._cacheIndex=n,e[n]=r,e.pop(),this._removeInactiveBindingsForAction(i)}delete i[A]}}uncacheRoot(t){const e=t.uuid,A=this._actionsByClip;for(const t in A){const i=A[t].actionByRoot[e];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}const i=this._bindingsByRootAndName[e];if(void 0!==i)for(const t in i){const e=i[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(t,e){const A=this.existingAction(t,e);null!==A&&(this._deactivateAction(A),this._removeInactiveAction(A))}}const ds=new Uint32Array(512),gs=new Uint32Array(512);for(let t=0;t<256;++t){const e=t-127;e<-27?(ds[t]=0,ds[256|t]=32768,gs[t]=24,gs[256|t]=24):e<-14?(ds[t]=1024>>-e-14,ds[256|t]=1024>>-e-14|32768,gs[t]=-e-1,gs[256|t]=-e-1):e<=15?(ds[t]=e+15<<10,ds[256|t]=e+15<<10|32768,gs[t]=13,gs[256|t]=13):e<128?(ds[t]=31744,ds[256|t]=64512,gs[t]=24,gs[256|t]=24):(ds[t]=31744,ds[256|t]=64512,gs[t]=13,gs[256|t]=13)}const ps=new Uint32Array(2048),fs=new Uint32Array(64),ms=new Uint32Array(64);for(let t=1;t<1024;++t){let e=t<<13,A=0;for(;0==(8388608&e);)e<<=1,A-=8388608;e&=-8388609,A+=947912704,ps[t]=e|A}for(let t=1024;t<2048;++t)ps[t]=939524096+(t-1024<<13);for(let t=1;t<31;++t)fs[t]=t<<23;fs[31]=1199570944,fs[32]=2147483648;for(let t=33;t<63;++t)fs[t]=2147483648+(t-32<<23);fs[63]=3347054592;for(let t=1;t<64;++t)32!==t&&(ms[t]=1024);"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:t}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=t);var vs={},Cs=Uint8Array,Is=Uint16Array,_s=Uint32Array,Ms=new Cs([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),ys=new Cs([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),xs=new Cs([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Es=function(t,e){for(var A=new Is(31),i=0;i<31;++i)A[i]=e+=1<<t[i-1];var n=new _s(A[30]);for(i=1;i<30;++i)for(var r=A[i];r<A[i+1];++r)n[r]=r-A[i]<<5|i;return[A,n]},ws=Es(Ms,2),bs=ws[0],Ss=ws[1];bs[28]=258,Ss[258]=28;var Bs=Es(ys,0),Ds=Bs[0];Bs[1];for(var Qs=new Is(32768),Ts=0;Ts<32768;++Ts){var Ls=(43690&Ts)>>>1|(21845&Ts)<<1;Ls=(61680&(Ls=(52428&Ls)>>>2|(13107&Ls)<<2))>>>4|(3855&Ls)<<4,Qs[Ts]=((65280&Ls)>>>8|(255&Ls)<<8)>>>1}var Ns=function(t,e,A){for(var i=t.length,n=0,r=new Is(e);n<i;++n)t[n]&&++r[t[n]-1];var s,a=new Is(e);for(n=0;n<e;++n)a[n]=a[n-1]+r[n-1]<<1;if(A){s=new Is(1<<e);var o=15-e;for(n=0;n<i;++n)if(t[n])for(var l=n<<4|t[n],c=e-t[n],h=a[t[n]-1]++<<c,u=h|(1<<c)-1;h<=u;++h)s[Qs[h]>>>o]=l}else for(s=new Is(i),n=0;n<i;++n)t[n]&&(s[n]=Qs[a[t[n]-1]++]>>>15-t[n]);return s},Rs=new Cs(288);for(Ts=0;Ts<144;++Ts)Rs[Ts]=8;for(Ts=144;Ts<256;++Ts)Rs[Ts]=9;for(Ts=256;Ts<280;++Ts)Rs[Ts]=7;for(Ts=280;Ts<288;++Ts)Rs[Ts]=8;var Ps=new Cs(32);for(Ts=0;Ts<32;++Ts)Ps[Ts]=5;var ks=Ns(Rs,9,1),Us=Ns(Ps,5,1),zs=function(t){for(var e=t[0],A=1;A<t.length;++A)t[A]>e&&(e=t[A]);return e},Fs=function(t,e,A){var i=e/8|0;return(t[i]|t[i+1]<<8)>>(7&e)&A},Gs=function(t,e){var A=e/8|0;return(t[A]|t[A+1]<<8|t[A+2]<<16)>>(7&e)},Os=function(t){return(t+7)/8|0},Vs=function(t,e,A){(null==e||e<0)&&(e=0),(null==A||A>t.length)&&(A=t.length);var i=new(2==t.BYTES_PER_ELEMENT?Is:4==t.BYTES_PER_ELEMENT?_s:Cs)(A-e);return i.set(t.subarray(e,A)),i},Hs=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],Ws=function(t,e,A){var i=new Error(e||Hs[t]);if(i.code=t,Error.captureStackTrace&&Error.captureStackTrace(i,Ws),!A)throw i;return i},Ys=function(t,e,A){var i=t.length;if(!i||A&&A.f&&!A.l)return e||new Cs(0);var n=!e||A,r=!A||A.i;A||(A={}),e||(e=new Cs(3*i));var s=function(t){var A=e.length;if(t>A){var i=new Cs(Math.max(2*A,t));i.set(e),e=i}},a=A.f||0,o=A.p||0,l=A.b||0,c=A.l,h=A.d,u=A.m,d=A.n,g=8*i;do{if(!c){a=Fs(t,o,1);var p=Fs(t,o+1,3);if(o+=3,!p){var f=t[(b=Os(o)+4)-4]|t[b-3]<<8,m=b+f;if(m>i){r&&Ws(0);break}n&&s(l+f),e.set(t.subarray(b,m),l),A.b=l+=f,A.p=o=8*m,A.f=a;continue}if(1==p)c=ks,h=Us,u=9,d=5;else if(2==p){var v=Fs(t,o,31)+257,C=Fs(t,o+10,15)+4,I=v+Fs(t,o+5,31)+1;o+=14;for(var _=new Cs(I),M=new Cs(19),y=0;y<C;++y)M[xs[y]]=Fs(t,o+3*y,7);o+=3*C;var x=zs(M),E=(1<<x)-1,w=Ns(M,x,1);for(y=0;y<I;){var b,S=w[Fs(t,o,E)];if(o+=15&S,(b=S>>>4)<16)_[y++]=b;else{var B=0,D=0;for(16==b?(D=3+Fs(t,o,3),o+=2,B=_[y-1]):17==b?(D=3+Fs(t,o,7),o+=3):18==b&&(D=11+Fs(t,o,127),o+=7);D--;)_[y++]=B}}var Q=_.subarray(0,v),T=_.subarray(v);u=zs(Q),d=zs(T),c=Ns(Q,u,1),h=Ns(T,d,1)}else Ws(1);if(o>g){r&&Ws(0);break}}n&&s(l+131072);for(var L=(1<<u)-1,N=(1<<d)-1,R=o;;R=o){var P=(B=c[Gs(t,o)&L])>>>4;if((o+=15&B)>g){r&&Ws(0);break}if(B||Ws(2),P<256)e[l++]=P;else{if(256==P){R=o,c=null;break}var k=P-254;if(P>264){var U=Ms[y=P-257];k=Fs(t,o,(1<<U)-1)+bs[y],o+=U}var z=h[Gs(t,o)&N],F=z>>>4;z||Ws(3),o+=15&z;T=Ds[F];if(F>3){U=ys[F];T+=Gs(t,o)&(1<<U)-1,o+=U}if(o>g){r&&Ws(0);break}n&&s(l+131072);for(var G=l+k;l<G;l+=4)e[l]=e[l-T],e[l+1]=e[l+1-T],e[l+2]=e[l+2-T],e[l+3]=e[l+3-T];l=G}}A.l=c,A.p=R,A.b=l,A.f=a,c&&(a=1,A.m=u,A.d=h,A.n=d)}while(!a);return l==e.length?e:Vs(e,0,l)},Js=new Cs(0),Ks=function(t,e,A){for(var i=t(),n=t.toString(),r=n.slice(n.indexOf("[")+1,n.lastIndexOf("]")).replace(/\s+/g,"").split(","),s=0;s<i.length;++s){var a=i[s],o=r[s];if("function"==typeof a){e+=";"+o+"=";var l=a.toString();if(a.prototype)if(-1!=l.indexOf("[native code]")){var c=l.indexOf(" ",8)+1;e+=l.slice(c,l.indexOf("(",c))}else for(var h in e+=l,a.prototype)e+=";"+o+".prototype."+h+"="+a.prototype[h].toString();else e+=l}else A[o]=a}return[e,A]},Zs=[],qs=function(t,e,A,i){var n;if(!Zs[A]){for(var r="",s={},a=t.length-1,o=0;o<a;++o)r=(n=Ks(t[o],r,s))[0],s=n[1];Zs[A]=Ks(t[a],r,s)}var l=function(t,e){var A={};for(var i in t)A[i]=t[i];for(var i in e)A[i]=e[i];return A}({},Zs[A][1]);return function(t,e,A,i,n){var r=new Worker(vs[e]||(vs[e]=URL.createObjectURL(new Blob([t+';addEventListener("error",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'],{type:"text/javascript"}))));return r.onmessage=function(t){var e=t.data,A=e.$e$;if(A){var i=new Error(A[0]);i.code=A[1],i.stack=A[2],n(i,null)}else n(null,e)},r.postMessage(A,i),r}(Zs[A][0]+";onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage="+e.toString()+"}",A,l,function(t){var e=[];for(var A in t)t[A].buffer&&e.push((t[A]=new t[A].constructor(t[A])).buffer);return e}(l),i)},Xs=function(){return[Cs,Is,_s,Ms,ys,xs,bs,Ds,ks,Us,Qs,Hs,Ns,zs,Fs,Gs,Os,Vs,Ws,Ys,ea,js,$s]},js=function(t){return postMessage(t,[t.buffer])},$s=function(t){return t&&t.size&&new Cs(t.size)};function ta(t,e,A){return A||(A=e,e={}),"function"!=typeof A&&Ws(7),function(t,e,A,i,n,r){var s=qs(A,i,n,(function(t,e){s.terminate(),r(t,e)}));return s.postMessage([t,e],e.consume?[t.buffer]:[]),function(){s.terminate()}}(t,e,[Xs],(function(t){return js(ea(t.data[0],$s(t.data[1])))}),1,A)}function ea(t,e){return Ys(t,e)}var Aa="undefined"!=typeof TextDecoder&&new TextDecoder;try{Aa.decode(Js,{stream:!0}),1}catch(la){}class ia extends fA{static setupMaterial(){ia.material=new Ue({vertexColors:!0})}constructor({chunkMaterial:t,chunkSize:e,geometry:A,position:i}){ia.material||ia.setupMaterial(),super(new je,t||ia.material),this.geometry.boundingBox=new Et,this.geometry.boundingSphere=new Ht,this.update(A),this.chunk=(new Mt).copy(i),this.position.copy(i).multiplyScalar(e),this.updateMatrixWorld(),this.castShadow=!0,this.receiveShadow=!0,this.matrixAutoUpdate=!1}dispose(){const{geometry:t}=this;t.dispose()}update({bounds:t,vertices:e}){const{geometry:A}=this,i=new vr(e,9);A.setAttribute("position",new Ir(i,3,0)),A.setAttribute("normal",new Ir(i,3,3)),A.setAttribute("color",new Ir(i,3,6)),A.boundingBox.min.set(t[0],t[1],t[2]),A.boundingBox.max.set(t[3],t[4],t[5]),A.boundingBox.getBoundingSphere(A.boundingSphere)}}class na{constructor({buffer:t,instances:e,options:A,program:i,script:n}){this.queue=[],i().then((i=>{this.instances=[...Array(e)].map((()=>{const e=new n;t&&(e.buffer=new Uint8Array(t)),e.run=({operation:A,resolve:i})=>{if(e.isBusy=!0,e.resolve=i,t){const t=A[0].length;A.forEach(((A,i)=>{e.buffer.set(A,t*i)})),e.postMessage(e.buffer,[e.buffer.buffer])}else e.postMessage(A)};const r=()=>{e.removeEventListener("message",r),e.addEventListener("message",s)},s=({data:A})=>{t&&(e.buffer=A.buffer,A=A.data);const{resolve:i}=e;delete e.resolve,i(A);const n=this.queue.shift();n?e.run(n):e.isBusy=!1};return e.addEventListener("message",r),e.postMessage({options:A,program:i}),e})),this.queue.length&&this.queue.splice(0,e).forEach((({operation:t,resolve:e})=>this.run(t).then(e)))}))}dispose(){const{instances:t}=this;t.forEach((t=>t.terminate()))}run(t){const{instances:e,queue:A}=this;return new Promise((i=>{if(!e)return void A.push({operation:t,resolve:i});let n;for(let t=0,A=e.length;t<A;t++)if(!e[t].isBusy){n=e[t];break}n?n.run({operation:t,resolve:i}):A.push({operation:t,resolve:i})}))}}let ra=!1,sa=1;const aa="setImmediate$"+Math.random()+"$",{length:oa}=aa,la=new Map;function ca(t){return la.set(sa,t),window.postMessage(aa+sa,"*"),sa++}function ha(t){if(ra)setTimeout(ha,0,t);else{const e=la.get(t);if(e){ra=!0;try{e()}finally{!function(t){la.delete(t)}(t),ra=!1}}}}function ua(t,e,A,i){function n(t,e,A){var i=A?WebAssembly.instantiateStreaming:WebAssembly.instantiate,n=A?WebAssembly.compileStreaming:WebAssembly.compile;return e?i(t,e):n(t)}var r=null,s="undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node;if(e&&s){var a=require("fs"),o=require("path");return new Promise(((t,A)=>{a.readFile(o.resolve(__dirname,e),((e,r)=>{null!=e&&A(e),t(n(r,i,!1))}))}))}if(e)return n(fetch(e),i,!0);if(s)r=Buffer.from(A,"base64");else{var l=globalThis.atob(A),c=l.length;r=new Uint8Array(new ArrayBuffer(c));for(var h=0;h<c;h++)r[h]=l.charCodeAt(h)}if(t){var u=new WebAssembly.Module(r);return i?new WebAssembly.Instance(u,i):u}return n(r,i,!1)}function da(t){return ua(0,null,"",t)}window.addEventListener("message",(t=>{t.source===window&&"string"==typeof t.data&&0===t.data.indexOf(aa)&&ha(+t.data.slice(oa))}),!1);var ga=null;try{var pa="undefined"!=typeof module&&"function"==typeof module.require&&module.require("worker_threads")||"function"==typeof __non_webpack_require__&&__non_webpack_require__("worker_threads")||"function"==typeof require&&require("worker_threads");ga=pa.Worker}catch(t){}var fa,ma,va,Ca,Ia,_a,Ma,ya=(fa="Lyogcm9sbHVwLXBsdWdpbi13ZWItd29ya2VyLWxvYWRlciAqLwohZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7bGV0IGU7Y29uc3Qgcz0oe2RhdGE6e29wdGlvbnM6e2NodW5rU2l6ZTp0fSxwcm9ncmFtOm59fSk9PnsoKHttZW1vcnk6ZSxwcm9ncmFtOnN9KT0+e2NvbnN0IHI9TWF0aC5jZWlsKGUucmVkdWNlKCgoZSx7dHlwZTpzLHNpemU6cn0pPT5lK3Iqcy5CWVRFU19QRVJfRUxFTUVOVCksMCkvNjU1MzYpKzIsdD1uZXcgV2ViQXNzZW1ibHkuTWVtb3J5KHtpbml0aWFsOnIsbWF4aW11bTpyfSk7cmV0dXJuIFdlYkFzc2VtYmx5Lmluc3RhbnRpYXRlKHMse2Vudjp7bWVtb3J5OnR9fSkudGhlbigocz0+KHttZW1vcnk6ZS5yZWR1Y2UoKChlLHtpZDpyLHR5cGU6bixzaXplOm99KT0+e2NvbnN0IGk9cy5leHBvcnRzLm1hbGxvYyhvKm4uQllURVNfUEVSX0VMRU1FTlQpO3JldHVybiBlW3JdPXthZGRyZXNzOmksdmlldzpuZXcgbih0LmJ1ZmZlcixpLG8pfSxlfSkse30pLHJ1bjpzLmV4cG9ydHMucnVufSkpKX0pKHttZW1vcnk6W3tpZDoiY2h1bmtzIix0eXBlOlVpbnQ4QXJyYXksc2l6ZTp0KnQqdCo0Kjh9LHtpZDoidmVydGljZXMiLHR5cGU6RmxvYXQzMkFycmF5LHNpemU6dCp0KnQqMyo5KjV9LHtpZDoiYm91bmRzIix0eXBlOkZsb2F0MzJBcnJheSxzaXplOjZ9XSxwcm9ncmFtOm59KS50aGVuKCgoe21lbW9yeTpuLHJ1bjpvfSk9PntlPXtjaHVua1NpemU6dCxtZW1vcnk6bixydW46b30sc2VsZi5yZW1vdmVFdmVudExpc3RlbmVyKCJtZXNzYWdlIixzKSxzZWxmLmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLHIpLHNlbGYucG9zdE1lc3NhZ2UoITApfSkpfTtzZWxmLmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLHMpO2NvbnN0IHI9KHtkYXRhOnN9KT0+e2UubWVtb3J5LmNodW5rcy52aWV3LnNldChzKTtjb25zdCByPWUucnVuKGUubWVtb3J5LmNodW5rcy5hZGRyZXNzLGUubWVtb3J5LnZlcnRpY2VzLmFkZHJlc3MsZS5tZW1vcnkuYm91bmRzLmFkZHJlc3MsZS5jaHVua1NpemUpO2lmKDA9PT1yKXJldHVybiB2b2lkIHNlbGYucG9zdE1lc3NhZ2Uoe2J1ZmZlcjpzLGRhdGE6ITF9LFtzLmJ1ZmZlcl0pO2NvbnN0IHQ9ZS5tZW1vcnkuYm91bmRzLnZpZXcuc2xpY2UoMCksbj1lLm1lbW9yeS52ZXJ0aWNlcy52aWV3LnNsaWNlKDAsMypyKjkpO3NlbGYucG9zdE1lc3NhZ2Uoe2J1ZmZlcjpzLGRhdGE6e2JvdW5kczp0LHZlcnRpY2VzOm59fSxbcy5idWZmZXIsdC5idWZmZXIsbi5idWZmZXJdKX19KCk7Cgo=",null,!1,"[object process]"===Object.prototype.toString.call("undefined"!=typeof process?process:0)?(Ca=void 0===(ma=null)?null:ma,Ia=function(t,e){return Buffer.from(t,"base64").toString(e?"utf16":"utf8")}(fa,void 0!==(va=!1)&&va),_a=Ia.indexOf("\n",10)+1,Ma=Ia.substring(_a)+(Ca?"//# sourceMappingURL="+Ca:""),function(t){return new ga(Ma,Object.assign({},t,{eval:!0}))}):function(t,e,A){var i;return function(t){return i=i||function(t,e,A){var i=void 0===e?null:e,n=function(t,e){var A=atob(t);if(e){for(var i=new Uint8Array(A.length),n=0,r=A.length;n<r;++n)i[n]=A.charCodeAt(n);return String.fromCharCode.apply(null,new Uint16Array(i.buffer))}return A}(t,void 0!==A&&A),r=n.indexOf("\n",10)+1,s=n.substring(r)+(i?"//# sourceMappingURL="+i:""),a=new Blob([s],{type:"application/javascript"});return URL.createObjectURL(a)}("Lyogcm9sbHVwLXBsdWdpbi13ZWItd29ya2VyLWxvYWRlciAqLwohZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7bGV0IGU7Y29uc3Qgcz0oe2RhdGE6e29wdGlvbnM6e2NodW5rU2l6ZTp0fSxwcm9ncmFtOm59fSk9PnsoKHttZW1vcnk6ZSxwcm9ncmFtOnN9KT0+e2NvbnN0IHI9TWF0aC5jZWlsKGUucmVkdWNlKCgoZSx7dHlwZTpzLHNpemU6cn0pPT5lK3Iqcy5CWVRFU19QRVJfRUxFTUVOVCksMCkvNjU1MzYpKzIsdD1uZXcgV2ViQXNzZW1ibHkuTWVtb3J5KHtpbml0aWFsOnIsbWF4aW11bTpyfSk7cmV0dXJuIFdlYkFzc2VtYmx5Lmluc3RhbnRpYXRlKHMse2Vudjp7bWVtb3J5OnR9fSkudGhlbigocz0+KHttZW1vcnk6ZS5yZWR1Y2UoKChlLHtpZDpyLHR5cGU6bixzaXplOm99KT0+e2NvbnN0IGk9cy5leHBvcnRzLm1hbGxvYyhvKm4uQllURVNfUEVSX0VMRU1FTlQpO3JldHVybiBlW3JdPXthZGRyZXNzOmksdmlldzpuZXcgbih0LmJ1ZmZlcixpLG8pfSxlfSkse30pLHJ1bjpzLmV4cG9ydHMucnVufSkpKX0pKHttZW1vcnk6W3tpZDoiY2h1bmtzIix0eXBlOlVpbnQ4QXJyYXksc2l6ZTp0KnQqdCo0Kjh9LHtpZDoidmVydGljZXMiLHR5cGU6RmxvYXQzMkFycmF5LHNpemU6dCp0KnQqMyo5KjV9LHtpZDoiYm91bmRzIix0eXBlOkZsb2F0MzJBcnJheSxzaXplOjZ9XSxwcm9ncmFtOm59KS50aGVuKCgoe21lbW9yeTpuLHJ1bjpvfSk9PntlPXtjaHVua1NpemU6dCxtZW1vcnk6bixydW46b30sc2VsZi5yZW1vdmVFdmVudExpc3RlbmVyKCJtZXNzYWdlIixzKSxzZWxmLmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLHIpLHNlbGYucG9zdE1lc3NhZ2UoITApfSkpfTtzZWxmLmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLHMpO2NvbnN0IHI9KHtkYXRhOnN9KT0+e2UubWVtb3J5LmNodW5rcy52aWV3LnNldChzKTtjb25zdCByPWUucnVuKGUubWVtb3J5LmNodW5rcy5hZGRyZXNzLGUubWVtb3J5LnZlcnRpY2VzLmFkZHJlc3MsZS5tZW1vcnkuYm91bmRzLmFkZHJlc3MsZS5jaHVua1NpemUpO2lmKDA9PT1yKXJldHVybiB2b2lkIHNlbGYucG9zdE1lc3NhZ2Uoe2J1ZmZlcjpzLGRhdGE6ITF9LFtzLmJ1ZmZlcl0pO2NvbnN0IHQ9ZS5tZW1vcnkuYm91bmRzLnZpZXcuc2xpY2UoMCksbj1lLm1lbW9yeS52ZXJ0aWNlcy52aWV3LnNsaWNlKDAsMypyKjkpO3NlbGYucG9zdE1lc3NhZ2Uoe2J1ZmZlcjpzLGRhdGE6e2JvdW5kczp0LHZlcnRpY2VzOm59fSxbcy5idWZmZXIsdC5idWZmZXIsbi5idWZmZXJdKX19KCk7Cgo=",null,false),new Worker(i,t)}}());function xa(t){return ua(0,null,"",t)}var Ea=null;try{var wa="undefined"!=typeof module&&"function"==typeof module.require&&module.require("worker_threads")||"function"==typeof __non_webpack_require__&&__non_webpack_require__("worker_threads")||"function"==typeof require&&require("worker_threads");Ea=wa.Worker}catch(t){}var ba="[object process]"===Object.prototype.toString.call("undefined"!=typeof process?process:0),Sa=function(t,e,A){return ba?function(t,e,A){var i=void 0===e?null:e,n=function(t,e){return Buffer.from(t,"base64").toString(e?"utf16":"utf8")}(t,void 0!==A&&A),r=n.indexOf("\n",10)+1,s=n.substring(r)+(i?"//# sourceMappingURL="+i:"");return function(t){return new Ea(s,Object.assign({},t,{eval:!0}))}}(t,null,false):function(t,e,A){var i;return function(t){return i=i||function(t,e,A){var i=void 0===e?null:e,n=function(t,e){var A=atob(t);if(e){for(var i=new Uint8Array(A.length),n=0,r=A.length;n<r;++n)i[n]=A.charCodeAt(n);return String.fromCharCode.apply(null,new Uint16Array(i.buffer))}return A}(t,void 0!==A&&A),r=n.indexOf("\n",10)+1,s=n.substring(r)+(i?"//# sourceMappingURL="+i:""),a=new Blob([s],{type:"application/javascript"});return URL.createObjectURL(a)}("Lyogcm9sbHVwLXBsdWdpbi13ZWItd29ya2VyLWxvYWRlciAqLwohZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7bGV0IGU7Y29uc3Qgcj17Y2F2ZTowLHRlcnJhaW46MX0scz0oe2RhdGE6e29wdGlvbnM6e2NodW5rU2l6ZTp0LGdlbmVyYXRvcjptLHNlZWQ6b30scHJvZ3JhbTphfX0pPT57KCh7bWVtb3J5OmUscHJvZ3JhbTpyfSk9Pntjb25zdCBzPU1hdGguY2VpbChlLnJlZHVjZSgoKGUse3R5cGU6cixzaXplOnN9KT0+ZStzKnIuQllURVNfUEVSX0VMRU1FTlQpLDApLzY1NTM2KSsyLG49bmV3IFdlYkFzc2VtYmx5Lk1lbW9yeSh7aW5pdGlhbDpzLG1heGltdW06c30pO3JldHVybiBXZWJBc3NlbWJseS5pbnN0YW50aWF0ZShyLHtlbnY6e21lbW9yeTpufX0pLnRoZW4oKHI9Pih7bWVtb3J5OmUucmVkdWNlKCgoZSx7aWQ6cyx0eXBlOnQsc2l6ZTptfSk9Pntjb25zdCBvPXIuZXhwb3J0cy5tYWxsb2MobSp0LkJZVEVTX1BFUl9FTEVNRU5UKTtyZXR1cm4gZVtzXT17YWRkcmVzczpvLHZpZXc6bmV3IHQobi5idWZmZXIsbyxtKX0sZX0pLHt9KSxydW46ci5leHBvcnRzLnJ1bn0pKSl9KSh7bWVtb3J5Olt7aWQ6ImNodW5rIix0eXBlOlVpbnQ4QXJyYXksc2l6ZTp0KnQqdCo0fV0scHJvZ3JhbTphfSkudGhlbigoKHttZW1vcnk6YSxydW46aX0pPT57ZT17Y2h1bmtTaXplOnQsZ2VuZXJhdG9yOnJbbV18fDAsbWVtb3J5OmEscnVuOmksc2VlZDpvfSxzZWxmLnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLHMpLHNlbGYuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsbiksc2VsZi5wb3N0TWVzc2FnZSghMCl9KSl9O3NlbGYuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIscyk7Y29uc3Qgbj0oe2RhdGE6e3g6cix5OnMsejpufX0pPT57ZS5ydW4oZS5tZW1vcnkuY2h1bmsuYWRkcmVzcyxlLmNodW5rU2l6ZSxlLmdlbmVyYXRvcixlLnNlZWQscixzLG4pO2NvbnN0IHQ9ZS5tZW1vcnkuY2h1bmsudmlldy5zbGljZSgwKTtzZWxmLnBvc3RNZXNzYWdlKHQsW3QuYnVmZmVyXSl9fSgpOwoK",null,false),new Worker(i,t)}}()}("Lyogcm9sbHVwLXBsdWdpbi13ZWItd29ya2VyLWxvYWRlciAqLwohZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7bGV0IGU7Y29uc3Qgcj17Y2F2ZTowLHRlcnJhaW46MX0scz0oe2RhdGE6e29wdGlvbnM6e2NodW5rU2l6ZTp0LGdlbmVyYXRvcjptLHNlZWQ6b30scHJvZ3JhbTphfX0pPT57KCh7bWVtb3J5OmUscHJvZ3JhbTpyfSk9Pntjb25zdCBzPU1hdGguY2VpbChlLnJlZHVjZSgoKGUse3R5cGU6cixzaXplOnN9KT0+ZStzKnIuQllURVNfUEVSX0VMRU1FTlQpLDApLzY1NTM2KSsyLG49bmV3IFdlYkFzc2VtYmx5Lk1lbW9yeSh7aW5pdGlhbDpzLG1heGltdW06c30pO3JldHVybiBXZWJBc3NlbWJseS5pbnN0YW50aWF0ZShyLHtlbnY6e21lbW9yeTpufX0pLnRoZW4oKHI9Pih7bWVtb3J5OmUucmVkdWNlKCgoZSx7aWQ6cyx0eXBlOnQsc2l6ZTptfSk9Pntjb25zdCBvPXIuZXhwb3J0cy5tYWxsb2MobSp0LkJZVEVTX1BFUl9FTEVNRU5UKTtyZXR1cm4gZVtzXT17YWRkcmVzczpvLHZpZXc6bmV3IHQobi5idWZmZXIsbyxtKX0sZX0pLHt9KSxydW46ci5leHBvcnRzLnJ1bn0pKSl9KSh7bWVtb3J5Olt7aWQ6ImNodW5rIix0eXBlOlVpbnQ4QXJyYXksc2l6ZTp0KnQqdCo0fV0scHJvZ3JhbTphfSkudGhlbigoKHttZW1vcnk6YSxydW46aX0pPT57ZT17Y2h1bmtTaXplOnQsZ2VuZXJhdG9yOnJbbV18fDAsbWVtb3J5OmEscnVuOmksc2VlZDpvfSxzZWxmLnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLHMpLHNlbGYuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsbiksc2VsZi5wb3N0TWVzc2FnZSghMCl9KSl9O3NlbGYuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIscyk7Y29uc3Qgbj0oe2RhdGE6e3g6cix5OnMsejpufX0pPT57ZS5ydW4oZS5tZW1vcnkuY2h1bmsuYWRkcmVzcyxlLmNodW5rU2l6ZSxlLmdlbmVyYXRvcixlLnNlZWQscixzLG4pO2NvbnN0IHQ9ZS5tZW1vcnkuY2h1bmsudmlldy5zbGljZSgwKTtzZWxmLnBvc3RNZXNzYWdlKHQsW3QuYnVmZmVyXSl9fSgpOwoK");class Ba extends cr{constructor({chunkMaterial:t=null,chunkSize:e=32,renderRadius:A=5,seed:i=Math.floor(2147483647*Math.random()),storage:n=null,worldgen:r=null}={}){super(),this.chunkMaterial=t,this.chunkSize=e,this.aux={chunk:new Mt,origin:new Mt,voxel:new Mt},this.anchorChunk=new Mt(1/0,1/0,1/0),this.dataChunks=new Map,this.renderChunks=new Map,this.renderRadius=A,this.renderGrid=Ba.getRenderGrid(A),this.loading={data:new Map,neighbors:new Map,mesh:new Map},this.saving=new Map,this.storage=n,this.workers={mesher:new na({buffer:e*e*e*4*8,options:{chunkSize:e},instances:4,program:da,script:ya}),...r?{worldgen:new na({options:{chunkSize:e,generator:r,seed:i},instances:4,program:xa,script:Sa})}:{}}}dispose(){const{renderChunks:t,workers:e}=this;t.forEach((t=>t.dispose())),[e.mesher,e.worldgen].forEach((t=>{t&&t.dispose()}))}reset(){const{anchorChunk:t,dataChunks:e,renderChunks:A,loading:i,workers:n}=this;t.set(1/0,1/0,1/0),e.clear(),A.forEach((t=>{t.dispose(),this.remove(t)})),A.clear(),i.data.forEach((t=>{t.abort=!0})),i.data.clear(),i.neighbors.clear(),i.mesh.forEach((t=>{t.abort=!0})),i.mesh.clear(),[n.mesher,n.worldgen].forEach((t=>{t&&(t.queue.length=0)}))}importChunks(t,e=!0){const{chunkSize:A,dataChunks:i}=this,[n]=new Uint16Array(t.slice(0,2)),r=JSON.parse((new TextDecoder).decode(t.slice(2,2+n))),s=6+A*A*A*4;if(this.reset(),r.chunkSize!==A)throw new Error("World chunkSize is: ${chunkSize} but imported chunkSize is: ${metadata.chunkSize}. They need to match.");for(let e=2+n;e<t.byteLength;e+=s){const A=new Int16Array(t.slice(e,e+6));i.set(`${A[0]}:${A[1]}:${A[2]}`,new Uint8Array(t.slice(e+6,e+s)))}return e&&(this.scale.setScalar(r.scale),this.updateMatrixWorld()),r}generateChunk(t,e,A){const{chunkSize:i,dataChunks:n,loading:{data:r},storage:s,workers:a}=this,o=`${t}:${e}:${A}`;if(r.has(o))return;const l={abort:!1};r.set(o,l),ca((()=>{l.abort||(s?s.get(o):Promise.resolve(!1)).then((n=>{if(!l.abort)return n||(a.worldgen?a.worldgen.run({x:t,y:e,z:A}):new Uint8Array(i*i*i*4))})).then((i=>{l.abort||(r.delete(o),n.set(o,i),this.loadPendingNeighbors(t,e,A))}))}))}loadChunk(t,e,A){const{chunkMaterial:i,chunkSize:n,dataChunks:r,renderChunks:s,loading:a,workers:o}=this,l=`${t}:${e}:${A}`;if(a.mesh.has(l))return;let c=!1;const h=[];for(let i=A;i<=A+1;i++)for(let A=e;A<=e+1;A++)for(let e=t;e<=t+1;e++){const t=`${e}:${A}:${i}`;r.has(t)?h.push(r.get(t)):(this.generateChunk(e,A,i),c=!0)}if(c)return void a.neighbors.set(l,!0);a.neighbors.delete(l);const u={abort:!1};a.mesh.set(l,u),ca((()=>{u.abort||o.mesher.run(h).then((r=>{if(u.abort)return;const o=s.get(l);if(r)if(a.mesh.delete(l),o)o.update(r);else{const a=new ia({chunkMaterial:i,chunkSize:n,geometry:r,position:{x:t,y:e,z:A}});this.add(a),s.set(l,a)}else o&&(o.dispose(),this.remove(o))}))}))}loadPendingNeighbors(t,e,A){const{loading:{neighbors:i}}=this;for(let n=A-1;n<=A+1;n++)for(let A=e-1;A<=e+1;A++)for(let e=t-1;e<=t+1;e++)i.has(`${e}:${A}:${n}`)&&this.loadChunk(e,A,n)}saveChunk(t,e,A){const{dataChunks:i,saving:n,storage:r}=this,s=`${t}:${e}:${A}`;r&&r.set&&!n.has(s)&&(n.set(s,!0),setTimeout((()=>{n.delete(s),r.set(s,i.get(s))}),r.saveInterval||0))}updateChunks(t){const{aux:{chunk:e},anchorChunk:A,chunkSize:i,renderChunks:n,renderGrid:r,renderRadius:s}=this;if(this.worldToLocal(e.copy(t)).divideScalar(i).floor(),A.equals(e))return;A.copy(e);const a=1.25*s;n.forEach(((t,e)=>{A.distanceTo(t.chunk)>a&&(t.dispose(),this.remove(t),n.delete(e))})),r.forEach((t=>{e.addVectors(A,t);const i=`${e.x}:${e.y}:${e.z}`;n.has(i)||this.loadChunk(e.x,e.y,e.z)}))}updateVolume(t,e,A,i){const{aux:{chunk:n,origin:r,voxel:s},chunkSize:a,dataChunks:o,loading:{mesh:l}}=this;this.worldToLocal(r.copy(t)).floor();const c=new Map;return Ba.getBrush(e).forEach((t=>{s.addVectors(r,t),n.copy(s).divideScalar(a).floor(),s.addScaledVector(n,-a).floor();const e=`${n.x}:${n.y}:${n.z}`,l=o.get(e);if(l){const t=4*(s.z*a*a+s.y*a+s.x);l[t]=A,i&&l.set([i.r,i.g,i.b],t+1),this.saveChunk(n.x,n.y,n.z),c.set(e,!0),0===s.x&&c.set(`${n.x-1}:${n.y}:${n.z}`,!0),0===s.y&&c.set(`${n.x}:${n.y-1}:${n.z}`,!0),0===s.z&&c.set(`${n.x}:${n.y}:${n.z-1}`,!0),0===s.x&&0===s.y&&0===s.z&&c.set(`${n.x-1}:${n.y-1}:${n.z-1}`,!0),0===s.x&&0===s.y&&c.set(`${n.x-1}:${n.y-1}:${n.z}`,!0),0===s.y&&0===s.z&&c.set(`${n.x}:${n.y-1}:${n.z-1}`,!0),0===s.x&&0===s.z&&c.set(`${n.x-1}:${n.y}:${n.z-1}`,!0)}})),c.forEach(((t,e)=>{l.has(e)&&(l.get(e).abort=!0,l.delete(e));const[A,i,n]=e.split(":");this.loadChunk(parseInt(A,10),parseInt(i,10),parseInt(n,10))})),c.size}static getBrush(t){const{brushes:e}=Ba;let A=e.get(t);if(!A){A=[];const i=(new Mt).setScalar(.5);for(let e=-t;e<=t+1;e+=1)for(let n=-t;n<=t+1;n+=1)for(let r=-t;r<=t+1;r+=1){const s=new Mt(r,n,e);s.distanceTo(i)<=t&&A.push(s)}A.sort(((t,e)=>t.distanceTo(i)-e.distanceTo(i))),e.set(t,A)}return A}static getRenderGrid(t){const e=[],A=new Mt;for(let i=-t;i<=t;i+=1)for(let n=-t;n<=t;n+=1)for(let r=-t;r<=t;r+=1){const s=new Mt(r,n,i);s.distanceTo(A)<=t&&e.push(s)}return e.sort(((t,e)=>t.distanceTo(A)-e.distanceTo(A))),e}}Ba.brushes=new Map;const Da="https://rawcdn.githack.com/danielesteban/softxels-example-worlds/561b9e385621338bd82216e6eab25bec53f65a4e/";var Qa={enableDragAndDrop:!0,initialWorldURL:`${Da}world1.bin`,renderRadius:10,worldMenu:[{name:"Museum",url:`${Da}world1.bin`},{name:"Bedroom",url:`${Da}world2.bin`},{name:"Cloister",url:`${Da}world3.bin`}]};class Ta{constructor(t,e){this.dom=document.createElement("div"),this.dom.id="worlds",document.body.appendChild(this.dom),t.forEach((t=>{const A=document.createElement("button");A.innerText=t.name,A.addEventListener("click",(()=>e(t)),!1),this.dom.appendChild(A)}))}dispose(){const{dom:t}=this;document.body.removeChild(t)}}function La(t){let e,A,i,n=0;for(let r=0;r<t.length;++r){const s=t[r];if(s.isInterleavedBufferAttribute)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. InterleavedBufferAttributes are not supported."),null;if(void 0===e&&(e=s.array.constructor),e!==s.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(void 0===A&&(A=s.itemSize),A!==s.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(void 0===i&&(i=s.normalized),i!==s.normalized)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;n+=s.array.length}const r=new e(n);let s=0;for(let e=0;e<t.length;++e)r.set(t[e].array,s),s+=t[e].array.length;return new Ge(r,A,i)}class Na extends wr{static setupAnimations(){const t=(t,e,A)=>(new _t).setFromEuler(new le(t,e,A)).toArray(),e=new Float32Array([0,1]),A=new Float32Array([...t(0,0,0),...t(.5*Math.PI,0,0)]),i=new Float32Array([...t(0,0,.5*Math.PI),...t(0,0,.25*Math.PI)]),n=new Float32Array([...t(0,0,0),...t(0,0,-.25*Math.PI)]),r=Array.from({length:3},((t,e)=>new Float32Array([0,1-.2*e])));Na.animations=[new Zr("thumb",1,Array.from({length:3},((t,A)=>new Yr(`.bones[${A+1}].quaternion`,e,0===A?i:n)))),new Zr("index",1,Array.from({length:3},((t,i)=>new Yr(`.bones[${i+4}].quaternion`,e,A)))),new Zr("middle",1,Array.from({length:9},((t,e)=>new Yr(`.bones[${e+7}].quaternion`,r[Math.floor(e/3)],A))))]}static setupGeometry(){const t=[],e=(e,A)=>{const{w:i,h:n,d:r,x:s,y:a,z:o}=e,l=new vA(i,n,r,Math.round(100*i),Math.round(100*n),Math.round(100*r));l.deleteAttribute("normal"),l.deleteAttribute("uv"),l.translate(s,a,o);const c=l.toNonIndexed(),{count:h}=c.getAttribute("position"),u=new Ge(new Float32Array(3*h),3),d=new Ge(new Float32Array(4*h),4),g=new Ge(new Float32Array(4*h),4);let p;for(let t=0;t<h;t+=1)t%6==0&&(p=1-.1*Math.random()-(A?0:.1)),u.setXYZ(t,p,p,p),d.setXYZW(t,A,0,0,0),g.setXYZW(t,1,0,0,0);c.setAttribute("color",u),c.setAttribute("skinIndex",d),c.setAttribute("skinWeight",g),t.push(c)},{dimensions:{base:A,phalange:i}}=Na;e(A,0);for(let t=1;t<16;t+=1)e(i,t);Na.geometry=function(t,e=1e-4){e=Math.max(e,Number.EPSILON);const A={},i=t.getIndex(),n=t.getAttribute("position"),r=i?i.count:n.count;let s=0;const a=Object.keys(t.attributes),o={},l={},c=[],h=["getX","getY","getZ","getW"];for(let e=0,A=a.length;e<A;e++){const A=a[e];o[A]=[];const i=t.morphAttributes[A];i&&(l[A]=new Array(i.length).fill().map((()=>[])))}const u=Math.log10(1/e),d=Math.pow(10,u);for(let e=0;e<r;e++){const n=i?i.getX(e):e;let r="";for(let e=0,A=a.length;e<A;e++){const A=a[e],i=t.getAttribute(A),s=i.itemSize;for(let t=0;t<s;t++)r+=~~(i[h[t]](n)*d)+","}if(r in A)c.push(A[r]);else{for(let e=0,A=a.length;e<A;e++){const A=a[e],i=t.getAttribute(A),r=t.morphAttributes[A],s=i.itemSize,c=o[A],u=l[A];for(let t=0;t<s;t++){const e=h[t];if(c.push(i[e](n)),r)for(let t=0,A=r.length;t<A;t++)u[t].push(r[t][e](n))}}A[r]=s,c.push(s),s++}}const g=t.clone();for(let e=0,A=a.length;e<A;e++){const A=a[e],i=t.getAttribute(A),n=new i.array.constructor(o[A]),r=new Ge(n,i.itemSize,i.normalized);if(g.setAttribute(A,r),A in l)for(let e=0;e<l[A].length;e++){const i=t.morphAttributes[A][e],n=new i.array.constructor(l[A][e]),r=new Ge(n,i.itemSize,i.normalized);g.morphAttributes[A][e]=r}}return g.setIndex(c),g}(function(t,e=!1){const A=null!==t[0].index,i=new Set(Object.keys(t[0].attributes)),n=new Set(Object.keys(t[0].morphAttributes)),r={},s={},a=t[0].morphTargetsRelative,o=new je;let l=0;for(let c=0;c<t.length;++c){const h=t[c];let u=0;if(A!==(null!==h.index))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+c+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const t in h.attributes){if(!i.has(t))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+c+'. All geometries must have compatible attributes; make sure "'+t+'" attribute exists among all geometries, or in none of them.'),null;void 0===r[t]&&(r[t]=[]),r[t].push(h.attributes[t]),u++}if(u!==i.size)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+c+". Make sure all geometries have the same number of attributes."),null;if(a!==h.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+c+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const t in h.morphAttributes){if(!n.has(t))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+c+".  .morphAttributes must be consistent throughout all geometries."),null;void 0===s[t]&&(s[t]=[]),s[t].push(h.morphAttributes[t])}if(o.userData.mergedUserData=o.userData.mergedUserData||[],o.userData.mergedUserData.push(h.userData),e){let t;if(A)t=h.index.count;else{if(void 0===h.attributes.position)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+c+". The geometry must have either an index or a position attribute"),null;t=h.attributes.position.count}o.addGroup(l,t,c),l+=t}}if(A){let e=0;const A=[];for(let i=0;i<t.length;++i){const n=t[i].index;for(let t=0;t<n.count;++t)A.push(n.getX(t)+e);e+=t[i].attributes.position.count}o.setIndex(A)}for(const t in r){const e=La(r[t]);if(!e)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the "+t+" attribute."),null;o.setAttribute(t,e)}for(const t in s){const e=s[t][0].length;if(0===e)break;o.morphAttributes=o.morphAttributes||{},o.morphAttributes[t]=[];for(let A=0;A<e;++A){const e=[];for(let i=0;i<s[t].length;++i)e.push(s[t][i][A]);const i=La(e);if(!i)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the "+t+" morphAttribute."),null;o.morphAttributes[t].push(i)}}return o}(t)),Na.bones=[new Mt(0,0,0)];for(let t=0;t<5;t+=1)for(let e=0;e<3;e+=1){let n,r;0===t?(n=-.03,r=-.01):(n=.0225*(t-1)-.034,r=.5*A.h),Na.bones.push(new Mt((0===e?n:0)+.001*Math.random()-5e-4,0===e?r:i.h,.001*Math.random()-5e-4))}}static setupMaterial(){Na.material=new Ue({color:1118481,vertexColors:!0})}constructor({color:t,handedness:e="right"}={}){Na.animations||Na.setupAnimations(),Na.geometry&&Na.bones||Na.setupGeometry(),Na.material||Na.setupMaterial();let{material:A}=Na;t&&(A=A.clone(),A.color.copy(t)),super(Na.geometry,A),this.handedness=e,this.position.set(0,-.1/3,.05),this.rotation.set(-.5*Math.PI,.5*Math.PI,0),"right"===e&&(this.scale.set(-1,1,1),this.rotation.y=-.5*Math.PI);const i=[new br];this.add(i[0]);for(let t=0;t<5;t+=1){let t=i[0];for(let e=0;e<3;e+=1){const e=new br;i.push(e),t.add(e),t=e}}this.bind(new Qr(i)),this.skeleton.bones.forEach(((t,e)=>t.position.copy(Na.bones[e]))),this.mixer=new us(this),this.fingers=Na.animations.map((t=>{const e=this.mixer.clipAction(t);return e.clampWhenFinished=!0,e.loop=2200,e.timeScale=-1,e.play(),e}))}onAnimationTick(t){const{mixer:e}=this;e.update(t)}setFinger(t,e){const A=this.state||0,i={thumb:1&A,index:2&A,middle:4&A};i[t]=e,this.setFingers(i)}setFingers(t){const{fingers:e}=this,{animationSpeed:A}=Na;"object"==typeof t&&(t=(t.thumb?1:0)|(t.index?2:0)|(t.middle?4:0)),this.state!==t&&(this.state=t,e.forEach(((e,i)=>{const n=A*(t&1<<i?1:-1);e.timeScale!==n&&(e.timeScale=n,e.paused=!1,e.play())})))}}Na.animationSpeed=4,Na.dimensions={base:{w:.08,h:.08,d:.015,x:0,y:0,z:0},phalange:{w:.02,h:.02,d:.02,x:0,y:.01,z:0}};class Ra{constructor(t,e){this.attachments=[],this.buttons={primary:!1,secondary:!1,tertiary:!1,interact:!1,run:!1},this.buttonState={...this.buttons},this.controllers=Array.from({length:2},((t,A)=>{const i=e.getController(A);return i.buttons={trigger:!1,grip:!1,primary:!1,secondary:!1,tertiary:!1},i.joystick=new X,i.addEventListener("connected",(t=>{i.gamepad=t.data.gamepad,i.hand=new Na({handedness:t.data.handedness}),i.add(i.hand),this.attachments.forEach((t=>{t.handedness===i.hand.handedness&&i.add(t)}))})),i.addEventListener("disconnected",(()=>{this.attachments.forEach((t=>{t.parent===i&&i.remove(t)})),i.remove(i.hand),delete i.gamepad,delete i.hand})),i})),this.gamepad=!1,this.look=new X,this.movement=new X,this.mouse=new X,this.keyboard=new X,this.pointer=new X,this.speed=4,this.target=t,this.onGamepadDisconnected=this.onGamepadDisconnected.bind(this),this.onGamepadConnected=this.onGamepadConnected.bind(this),this.onKeyDown=this.onKeyDown.bind(this),this.onKeyUp=this.onKeyUp.bind(this),this.onMouseDown=this.onMouseDown.bind(this),this.onMouseUp=this.onMouseUp.bind(this),this.onMouseMove=this.onMouseMove.bind(this),this.onMouseWheel=this.onMouseWheel.bind(this),this.onPointerLock=this.onPointerLock.bind(this),window.addEventListener("gamepaddisconnected",this.onGamepadDisconnected,!1),window.addEventListener("gamepadconnected",this.onGamepadConnected,!1),window.addEventListener("keydown",this.onKeyDown,!1),window.addEventListener("keyup",this.onKeyUp,!1),t.addEventListener("mousedown",this.onMouseDown,!1),window.addEventListener("mouseup",this.onMouseUp,!1),window.addEventListener("mousemove",this.onMouseMove,!1),window.addEventListener("wheel",this.onMouseWheel,{passive:!1}),document.addEventListener("pointerlockchange",this.onPointerLock,!1)}dispose(){window.removeEventListener("gamepaddisconnected",this.onGamepadDisconnected),window.removeEventListener("gamepadconnected",this.onGamepadConnected),window.removeEventListener("keydown",this.onKeyDown),window.removeEventListener("keyup",this.onKeyUp),this.target.removeEventListener("mousedown",this.onMouseDown),window.removeEventListener("mouseup",this.onMouseUp),window.removeEventListener("mousemove",this.onMouseMove),window.removeEventListener("wheel",this.onMouseWheel),document.removeEventListener("pointerlockchange",this.onPointerLock),document.body.classList.remove("pointerlock")}lock(){const{isLocked:t,target:e}=this;t||e.requestPointerLock()}unlock(){const{isLocked:t}=this;t&&document.exitPointerLock()}onAnimationTick(t){const{buttons:e,buttonState:A,controllers:i,gamepad:n,keyboard:r,look:s,mouse:a,movement:o}=this;i.forEach((({buttons:e,gamepad:A,hand:i,joystick:n})=>{A&&([["trigger",A.buttons[0]&&A.buttons[0].pressed],["grip",A.buttons[1]&&A.buttons[1].pressed],["primary",A.buttons[4]&&A.buttons[4].pressed],["secondary",A.buttons[5]&&A.buttons[5].pressed],["tertiary",A.buttons[3]&&A.buttons[3].pressed],["forwards",A.axes[3]<=-.75],["backwards",A.axes[3]>=.75],["leftwards",A.axes[2]<=-.75],["rightwards",A.axes[2]>=.75]].forEach((([t,A])=>{e[`${t}Down`]=A&&e[t]!==A,e[`${t}Up`]=!A&&e[t]!==A,e[t]=A})),i.setFingers({thumb:A.buttons[3]&&A.buttons[3].touched,index:A.buttons[0]&&A.buttons[0].pressed,middle:A.buttons[1]&&A.buttons[1].pressed}),i.onAnimationTick(t),n.set(Math.abs(A.axes[2])>.1?A.axes[2]:0,Math.abs(A.axes[3])>.1?-A.axes[3]:0))})),s.copy(a),a.set(0,0),o.copy(r);let l={};if(!1!==n){const{axes:t,buttons:e}=navigator.getGamepads()[n];Math.max(Math.abs(t[0]),Math.abs(t[1]))>.1&&o.set(t[0],-t[1]),Math.max(Math.abs(t[2]),Math.abs(t[3]))>.1&&s.set(.03*-t[2],.03*t[3]),l={primary:e[6]&&e[6].pressed,secondary:e[7]&&e[7].pressed,tertiary:!1,interact:e[0]&&e[0].pressed,run:e[10]&&e[10].pressed}}["primary","secondary","tertiary","interact","run"].forEach((t=>{const i=A[t]||l[t];e[`${t}Down`]=i&&e[t]!==i,e[`${t}Up`]=!i&&e[t]!==i,e[t]=i}))}onGamepadDisconnected({gamepad:{index:t}}){const{gamepad:e}=this;e===t&&(this.gamepad=!1)}onGamepadConnected({gamepad:{index:t}}){this.gamepad=t}onKeyDown({key:t,repeat:e,target:A}){const{buttonState:i,isLocked:n,keyboard:r}=this;if(n&&!e&&"INPUT"!==A.tagName)switch(t.toLowerCase()){case"w":r.y=1;break;case"s":r.y=-1;break;case"a":r.x=-1;break;case"d":r.x=1;break;case"e":i.interact=!0;break;case"shift":i.run=!0}}onKeyUp({key:t}){const{buttonState:e,isLocked:A,keyboard:i}=this;if(A)switch(t.toLowerCase()){case"w":i.y>0&&(i.y=0);break;case"s":i.y<0&&(i.y=0);break;case"a":i.x<0&&(i.x=0);break;case"d":i.x>0&&(i.x=0);break;case"e":e.interact=!1;break;case"shift":e.run=!1}}onMouseDown({button:t}){const{buttonState:e,isLocked:A}=this;if(A)switch(t){case 0:e.primary=!0;break;case 1:e.tertiary=!0;break;case 2:e.secondary=!0}else this.lock()}onMouseUp({button:t}){const{buttonState:e,isLocked:A}=this;if(A)switch(t){case 0:e.primary=!1;break;case 1:e.tertiary=!1;break;case 2:e.secondary=!1}}onMouseMove({clientX:t,clientY:e,movementX:A,movementY:i}){const{isLocked:n,mouse:r,pointer:s}=this;n&&(r.x-=.003*A,r.y-=.003*i,s.set(t/window.innerWidth*2-1,-e/window.innerHeight*2+1))}onMouseWheel(t){t.ctrlKey&&t.preventDefault();const{minSpeed:e,speedRange:A}=Ra,{speed:i}=this,n=Math.min(Math.max((Math.log(i)-e)/A-3e-4*t.deltaY,0),1);this.speed=Math.exp(e+n*A)}onPointerLock(){const{buttonState:t,keyboard:e}=this;this.isLocked=!!document.pointerLockElement,document.body.classList[this.isLocked?"add":"remove"]("pointerlock"),this.isLocked||(t.primary=!1,t.secondary=!1,t.tertiary=!1,t.interact=!1,t.run=!1,e.set(0,0))}}Ra.minSpeed=Math.log(1),Ra.maxSpeed=Math.log(10),Ra.speedRange=Ra.maxSpeed-Ra.minSpeed;const Pa=new Mt,ka=new Mt,Ua=new Mt,za=new Mt,Fa=new Mt,Ga=new Mt(0,1,0),Oa=new $t,Va=new $t;const Ha=new xA(75,window.innerWidth/window.innerHeight,.1,1e3),Wa=new class{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Xr(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=Xr();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}},Ya={dom:document.getElementById("fps"),count:0,lastTick:Wa.oldTime/1e3},Ja=new fr({antialias:!0,powerPreference:"high-performance",stencil:!1});Ja.outputEncoding=Q,Ja.setSize(window.innerWidth,window.innerHeight),document.getElementById("renderer").appendChild(Ja.domElement);const Ka=new class{constructor({enabled:t,samples:e}){this.blurScale=.5,this.isEnabled=t;const A=new UA(2,2,1,1);A.deleteAttribute("normal"),A.deleteAttribute("uv");const i=["precision highp float;","in vec3 position;","out vec2 uv;","void main() {","  gl_Position = vec4(position.xy, 0, 1);","  uv = position.xy * 0.5 + 0.5;","}"].join("\n");this.blurTargetA=new Ct(window.innerWidth*this.blurScale,window.innerHeight*this.blurScale,{depthBuffer:!1,samples:e,type:d}),this.blurTargetB=new Ct(this.blurTargetA.width,this.blurTargetA.height,{depthBuffer:!1,samples:e,type:d}),this.blur=new fA(A,new Lr({glslVersion:P,uniforms:{direction:{value:new X},inputTexture:{value:null},resolution:{value:new X(this.blurTargetA.width,this.blurTargetA.height)}},vertexShader:i,fragmentShader:["precision highp float;","in vec2 uv;","out vec4 fragColor;","uniform vec2 direction;","uniform sampler2D inputTexture;","uniform vec2 resolution;","void main() {","  vec2 off1 = vec2(1.3846153846) * direction;","  vec2 off2 = vec2(3.2307692308) * direction;","  vec3 color = texture(inputTexture, uv).rgb * 0.2270270270;","  color += texture(inputTexture, uv + (off1 / resolution)).rgb * 0.3162162162;","  color += texture(inputTexture, uv - (off1 / resolution)).rgb * 0.3162162162;","  color += texture(inputTexture, uv + (off2 / resolution)).rgb * 0.0702702703;","  color += texture(inputTexture, uv - (off2 / resolution)).rgb * 0.0702702703;","  fragColor = vec4(color, 1.0);","}"].join("\n")})),this.blur.frustumCulled=!1,this.blur.matrixAutoUpdate=!1,this.screenTarget=new Ct(window.innerWidth,window.innerHeight,{depthTexture:new dr(window.innerWidth,window.innerHeight,u),samples:e,type:d}),this.screen=new fA(A,new Lr({glslVersion:P,uniforms:{cameraNear:{value:0},cameraFar:{value:0},resolution:this.blur.material.uniforms.resolution,blurTexture:{value:this.blurTargetB.texture},colorTexture:{value:this.screenTarget.texture},depthTexture:{value:this.screenTarget.depthTexture}},vertexShader:i,fragmentShader:["precision highp float;","in vec2 uv;","out vec4 fragColor;","uniform float cameraNear;","uniform float cameraFar;","uniform vec2 resolution;","uniform sampler2D blurTexture;","uniform sampler2D colorTexture;","uniform sampler2D depthTexture;","float perspectiveDepthToViewZ(const in float invClipZ, const in float near, const in float far) {","  return (near * far) / ((far - near) * invClipZ - far);","}","vec3 LinearTosRGB(in vec3 value) {","  return vec3( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ) );","}","vec3 composite(const in vec2 uv) {","  vec3 blur = texture(blurTexture, uv).rgb;","  vec3 color = texture(colorTexture, uv).rgb;","  float depth = -perspectiveDepthToViewZ(texture(depthTexture, uv).r, cameraNear, cameraFar);","  float vignette = smoothstep(-0.2, 0.2, 0.4 - distance(uv, vec2(0.5, 0.5)));","  return mix(color, blur, clamp(depth / 24.0, 0.0, 1.0) * 0.6 - vignette * 0.3);","}","void main() {","  fragColor = vec4(LinearTosRGB(composite(uv)), 1.0);","  if (fract(uv.y * resolution.y / 2.0) > 0.6) {","    float vignette = smoothstep(-0.2, 0.2, 0.6 - distance(uv, vec2(0.5, 0.5)));","    fragColor.rgb *= mix(vec3(1.0), vec3(0.8), 1.0 - vignette);","  }","}"].join("\n")})),this.screen.frustumCulled=!1,this.screen.matrixAutoUpdate=!1}onResize(t,e){const{blur:A,blurScale:i,blurTargetA:n,blurTargetB:r,screenTarget:s}=this;n.setSize(t*i,e*i),r.setSize(n.width,n.height),A.material.uniforms.resolution.value.set(n.width,n.height),s.setSize(t,e)}render(t,e,A){const{blur:i,blurTargetA:n,blurTargetB:r,screen:s,screenTarget:a}=this;t.setRenderTarget(a),t.render(e,A),i.material.uniforms.direction.value.set(1,0),i.material.uniforms.inputTexture.value=a.texture,t.setRenderTarget(n),t.render(i,A),i.material.uniforms.direction.value.set(0,1),i.material.uniforms.inputTexture.value=n.texture,t.setRenderTarget(r),t.render(i,A),s.material.uniforms.cameraNear.value=A.near,s.material.uniforms.cameraFar.value=A.far,t.setRenderTarget(null),t.render(s,A)}}({enabled:!localStorage.getItem("vfx:disabled")&&!navigator.userAgent.includes("Mobile")&&!navigator.userAgent.includes("Quest"),samples:4}),Za=new class extends mr{constructor({camera:t,renderer:e}){super(),this.world=new Ba({renderRadius:Qa.renderRadius}),this.add(this.world),this.input=new Ra(e.domElement,e.xr),this.player=new cr,this.player.camera=t,this.player.head=new Mt,this.player.targetFloor=this.player.position.y,this.player.targetPosition=this.player.position.clone(),this.player.targetRotation=this.player.camera.rotation.clone(),this.player.add(t),this.add(this.player),this.loading=document.getElementById("loading"),this.onDragEnter=this.onDragEnter.bind(this),this.onDragOver=this.onDragOver.bind(this),this.onDrop=this.onDrop.bind(this),window.addEventListener("dragenter",this.onDragEnter,!1),window.addEventListener("dragover",this.onDragOver,!1),window.addEventListener("drop",this.onDrop,!1),Qa.initialWorldURL&&this.load(Qa.initialWorldURL),Qa.worldMenu&&(this.menu=new Ta(Qa.worldMenu,(t=>{this.world.reset(),this.load(t.url)})))}onUnload(){const{input:t,loading:e,menu:A,world:i}=this;t.dispose(),e.classList.remove("enabled"),A&&A.dispose(),i.dispose(),window.removeEventListener("dragenter",this.onDragEnter),window.removeEventListener("dragover",this.onDragOver),window.removeEventListener("drop",this.onDrop)}load(t){const{loading:e,player:A,world:i}=this;this.isLoading=!0,e.classList.add("enabled"),("string"==typeof t?fetch(t).then((t=>t.arrayBuffer())):Promise.resolve(t)).then((t=>new Promise(((e,A)=>ta(new Uint8Array(t),((t,i)=>{t?A(t):e(i.buffer)})))))).then((t=>{const n=i.importChunks(t);Qa.autoUpdateRenderRadius||i.updateChunks(i.localToWorld(za.set(0,i.chunkSize*i.renderRadius*.25,0))),A.position.fromArray(n.spawn),A.position.y=A.targetFloor=this.ground(A.position,4),A.isWalking=-1!==A.targetFloor,A.targetPosition.copy(A.position),A.camera.position.set(0,1.6,0),A.camera.rotation.set(0,0,0,"YXZ"),A.targetRotation.copy(A.camera.rotation),A.camera.getWorldPosition(A.head),this.isLoading=!1,e.classList.remove("enabled")}))}onAnimationTick(t,e,A){const{input:i,isLoading:n,player:r,world:s}=this;i.onAnimationTick(t),this.processPlayerInput(A.xr),this.processPlayerMovement(t,A.xr),Qa.autoUpdateRenderRadius&&!n&&s.updateChunks(r.head)}onEnterVR(){const{input:t,player:e}=this;t.controllers.forEach((t=>e.add(t)))}onExitVR(){const{input:t,player:e}=this;e.camera.position.set(0,1.6,0),e.camera.rotation.copy(e.targetRotation),t.controllers.forEach((t=>e.remove(t)))}onDragEnter(t){t.preventDefault()}onDragOver(t){t.preventDefault()}onDrop(t){t.preventDefault();const[e]=t.dataTransfer.files;if(!e)return;const A=new FileReader;A.onload=()=>this.load(A.result),A.readAsArrayBuffer(e)}processPlayerInput(t){const{input:e,player:A}=this;let i=e.buttons.interactDown;if(t.isPresenting&&e.controllers.forEach((e=>{e.hand&&(e.buttons.secondaryDown&&Promise.resolve().then((()=>t.getSession().end())),i=i||e.buttons.primaryDown)})),i&&(A.isWalking=!A.isWalking,A.isWalking)){const t=this.ground(A.targetPosition,4);-1!==t&&(A.targetFloor=t)}}processPlayerMovement(t,e){const{input:A,player:i}=this;let n=i.camera,r=A.movement.x||A.movement.y?A.movement:null,s=A.buttons.run;if(e.isPresenting?(e.updateCamera(i.camera),n=e.getCamera(),A.controllers.forEach((t=>{t.hand&&("left"===t.hand.handedness&&(t.joystick.x||t.joystick.y)&&(r=t.joystick,s=t.buttons.tertiary),"right"===t.hand.handedness&&(t.buttons.leftwardsDown||t.buttons.rightwardsDown)&&(n.getWorldPosition(za),za.y=i.position.y,Va.makeTranslation(za.x,za.y,za.z),Va.multiply(Oa.makeRotationAxis(Ga,Math.PI*(t.buttons.leftwardsDown?.25:-.25))),Va.multiply(Oa.makeTranslation(-za.x,-za.y,-za.z)),i.applyMatrix4(Va),i.updateMatrixWorld(),i.targetPosition.copy(i.position),e.updateCamera(i.camera)))}))):((A.look.x||A.look.y)&&(i.targetRotation.y+=A.look.x,i.targetRotation.x+=A.look.y,i.targetRotation.x=Math.min(Math.max(i.targetRotation.x,-.5*Math.PI),.5*Math.PI)),n.rotation.y=q.damp(n.rotation.y,i.targetRotation.y,20,t),n.rotation.x=q.damp(n.rotation.x,i.targetRotation.x,20,t)),r){n.getWorldDirection(ka),i.isWalking&&(ka.y=0,ka.normalize()),Ua.crossVectors(ka,Ga).normalize(),Pa.set(0,0,0).addScaledVector(Ua,r.x).addScaledVector(ka,r.y);const e=Pa.length();e>1&&Pa.divideScalar(e);const a=A.speed*(s?2:1)*t;if(n.getWorldPosition(ka).sub(i.position).add(i.targetPosition).addScaledVector(Pa,a),i.isWalking){const t=this.ground(ka,4);-1!==t&&Math.abs(t-i.targetPosition.y)<2&&(i.targetPosition.addScaledVector(Pa,a),i.targetFloor=t)}else i.targetPosition.addScaledVector(Pa,a)}i.isWalking&&(i.targetPosition.y=q.damp(i.targetPosition.y,i.targetFloor,10,t)),i.position.x=q.damp(i.position.x,i.targetPosition.x,10,t),i.position.y=q.damp(i.position.y,i.targetPosition.y,10,t),i.position.z=q.damp(i.position.z,i.targetPosition.z,10,t),i.updateMatrixWorld(),e.isPresenting&&e.updateCamera(i.camera),n.getWorldPosition(i.head)}ground(t,e=4){const{world:A}=this;if(A.worldToLocal(Fa.copy(t)).floor(),this.test(Fa.x,Fa.y,Fa.z))return-1;for(Fa.y--;Fa.y>=0;Fa.y--)if(this.test(Fa.x,Fa.y,Fa.z)){for(let t=1;t<=e;t++)if(this.test(Fa.x,Fa.y+t,Fa.z))return-1;return Fa.y++,A.localToWorld(Fa).y}return-1}test(t,e,A){const{world:i}=this;for(let n=0;n<2;n++)for(let r=0;r<2;r++)for(let s=0;s<2;s++){let a=t+n,o=e+r,l=A+s;const c=Math.floor(a/i.chunkSize),h=Math.floor(o/i.chunkSize),u=Math.floor(l/i.chunkSize),d=i.dataChunks.get(`${c}:${h}:${u}`);if(!d)return!1;a-=c*i.chunkSize,o-=h*i.chunkSize,l-=u*i.chunkSize;if(d[4*(l*i.chunkSize*i.chunkSize+o*i.chunkSize+a)]>=128)return!0}return!1}}({camera:Ha,renderer:Ja});window.addEventListener("resize",(()=>{Ja.setSize(window.innerWidth,window.innerHeight),Ka.onResize(window.innerWidth,window.innerHeight),Ha.aspect=window.innerWidth/window.innerHeight,Ha.updateProjectionMatrix(),Za.onResize&&Za.onResize(window.innerWidth,window.innerHeight)}),!1),document.addEventListener("visibilitychange",(()=>{"visible"===document.visibilityState&&(Wa.start(),Ya.count=-1,Ya.lastTick=Wa.oldTime/1e3)}),!1),Ja.setAnimationLoop((()=>{const t=Math.min(Wa.getDelta(),1),e=Wa.oldTime/1e3;if(Za.onAnimationTick(t,e,Ja),Ka.isEnabled&&!Ja.xr.isPresenting?Ka.render(Ja,Za,Ha):Ja.render(Za,Ha),Ya.count+=1,e>=Ya.lastTick+1){const t=Math.round(Ya.count/(e-Ya.lastTick));Ya.dom.innerText=`${t}fps`,Ya.lastTick=e,Ya.count=0}}));{const t=Ja.getContext(),e=t.getExtension("WEBGL_debug_renderer_info");e&&(document.getElementById("debug").innerText=t.getParameter(e.UNMASKED_RENDERER_WEBGL))}{const t=document.createElement("div");t.className="dialog controls";const e=()=>t.classList.toggle("enabled");document.getElementById("controls").addEventListener("click",e,!1),t.addEventListener("click",e,!1);const A=document.createElement("div");t.appendChild(A),document.body.appendChild(t),[["Mouse & Keyboard",[["W A S D","Move"],["Shift","Run"],["Mouse","Look"],["E","Walk/Fly"],["Wheel","Set speed"]]],["Gamepad",[["Left stick","Move (press to run)"],["Right stick","Look"],["A","Walk/Fly"]]],["VR",[["Left stick","Move (press to run)"],["Right stick","Rotate view"],["A/X","Walk/Fly"],["B/Y","Exit VR"]]]].forEach((([t,e])=>{const i=document.createElement("div"),n=document.createElement("h1");n.innerText=t,i.appendChild(n),e.forEach((t=>{const e=document.createElement("div");t.forEach(((t,A)=>{const i=document.createElement("div");i.innerText=`${t}${0===A?":":""}`,e.appendChild(i)})),i.appendChild(e)})),A.appendChild(i)}))}{const t=document.getElementById("vfx"),e=t.getElementsByTagName("span")[0],A=()=>{const{isEnabled:t}=Ka;e.className=t?"enabled":"",e.innerText=t?"[ON]":"[OFF]"};A(),t.addEventListener("click",(()=>{Ka.isEnabled=!Ka.isEnabled,A(),localStorage[(Ka.isEnabled?"remove":"set")+"Item"]("vfx:disabled","1")}),!1)}navigator.xr&&(Ja.xr.enabled=!0,Ja.xr.cameraAutoUpdate=!1,navigator.xr.isSessionSupported("immersive-vr").then((t=>{if(!t)return;const e=document.createElement("div");e.id="vr";{const t="http://www.w3.org/2000/svg",A=document.createElementNS(t,"svg");A.setAttribute("width",24),A.setAttribute("height",24),A.setAttribute("viewBox","0 0 512 512"),A.setAttribute("fill","currentColor"),["m299.452 386.371c-27.984 9.338-58.852 9.336-86.916-.004-7.863-2.618-16.354 1.635-18.969 9.495-2.616 7.86 1.635 16.354 9.496 18.97 17.09 5.688 35.031 8.531 52.967 8.531s35.868-2.846 52.918-8.535c7.858-2.622 12.103-11.118 9.48-18.977-2.621-7.857-11.116-12.1-18.976-9.48z","m430.736 97.999c-6.384-45.79-45.703-81.932-94.402-81.932h-17.134v-1.067c0-8.284-6.716-15-15-15h-96.4c-8.284 0-15 6.716-15 15v1.066h-17.133c-48.291 0-87.664 35.638-94.36 81.922-28.118 6.399-49.173 31.584-49.173 61.611v128.534c0 41.106 33.483 57.859 48.692 61.474 6.868 92.539 84.571 162.393 175.174 162.393 92.396 0 168.358-71.705 175.167-162.389 39.424-9.36 48.699-45.128 48.699-61.477v-128.534c.001-30.012-21.034-55.187-49.13-61.601zm-111.536-51.933h17.133c42.442 0 59.975 34.701 63.62 50.334h-80.753zm-96.4-16.066h66.4v66.4h-66.4zm-47.133 16.066h17.133v50.334h-80.691c9.729-40.756 46.651-50.334 63.558-50.334zm80.333 435.934c-74.035 0-137.32-56.086-144.904-130.667h73.97c18.407 0 36.417-7.459 49.412-20.464.077-.077.153-.155.229-.234 5.643-5.52 13.385-8.679 21.293-8.679 7.91 0 15.652 3.16 21.294 8.68.075.078.151.156.229.233 12.995 13.005 31.005 20.464 49.413 20.464h73.963c-7.533 73.301-69.642 130.667-144.899 130.667zm193.867-193.866c0 18.564-15.131 33.199-33.2 33.199h-89.731c-10.392 0-20.558-4.161-27.948-11.428-.081-.085-.163-.169-.246-.253-11.246-11.246-26.824-17.696-42.741-17.696-15.916 0-31.494 6.45-42.74 17.696-.083.083-.166.167-.247.252-7.391 7.268-17.557 11.429-27.948 11.429h-89.733c-18.012 0-33.2-14.572-33.2-33.199v-128.534c0-18.306 14.894-33.199 33.2-33.199h321.333c18.307 0 33.2 14.894 33.2 33.199v128.534z"].forEach((e=>{const i=document.createElementNS(t,"path");i.setAttribute("d",e),A.appendChild(i)})),e.appendChild(A)}const A=document.createElement("div");A.innerText="Enter VR",e.appendChild(A);let i=null;const n=()=>{i.removeEventListener("end",n),i=null,A.innerText="Enter VR",Za.onExitVR&&Za.onExitVR()};e.addEventListener("click",(()=>{i?i.end():navigator.xr.requestSession("immersive-vr",{optionalFeatures:["local-floor"]}).then((t=>{t.addEventListener("end",n),Ja.xr.setSession(t).then((()=>{i=t,A.innerText="Exit VR",Za.onEnterVR&&Za.onEnterVR()}))}))}),!1),document.body.appendChild(e)}))),window.addEventListener("contextmenu",(t=>t.preventDefault()),!1)}();
