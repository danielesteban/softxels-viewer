!function(){"use strict";const t="141",e=100,i=301,n=302,r=306,A=1e3,s=1001,a=1002,o=1003,l=1006,c=1008,h=1009,u=1014,d=1015,p=1016,g=1020,m=1023,f=1026,v=1027,_=33776,x=33777,M=33778,y=33779,w=2300,C=2301,b=2302,I=2400,E=2401,S=2402,D=2500,T=3e3,B=3001,L="srgb",P="srgb-linear",R=7680,N=35044,Q="300 es",z=1035;class U{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const i=this._listeners;return void 0!==i[t]&&-1!==i[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const i=this._listeners[t];if(void 0!==i){const t=i.indexOf(e);-1!==t&&i.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const i=e.slice(0);for(let e=0,n=i.length;e<n;e++)i[e].call(this,t);t.target=null}}}const k=[];for(let t=0;t<256;t++)k[t]=(t<16?"0":"")+t.toString(16);let F=1234567;const O=Math.PI/180,G=180/Math.PI;function V(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,i=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(k[255&t]+k[t>>8&255]+k[t>>16&255]+k[t>>24&255]+"-"+k[255&e]+k[e>>8&255]+"-"+k[e>>16&15|64]+k[e>>24&255]+"-"+k[63&i|128]+k[i>>8&255]+"-"+k[i>>16&255]+k[i>>24&255]+k[255&n]+k[n>>8&255]+k[n>>16&255]+k[n>>24&255]).toLowerCase()}function H(t,e,i){return Math.max(e,Math.min(i,t))}function W(t,e){return(t%e+e)%e}function Y(t,e,i){return(1-i)*t+i*e}function J(t){return 0==(t&t-1)&&0!==t}function K(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))}function Z(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}var j=Object.freeze({__proto__:null,DEG2RAD:O,RAD2DEG:G,generateUUID:V,clamp:H,euclideanModulo:W,mapLinear:function(t,e,i,n,r){return n+(t-e)*(r-n)/(i-e)},inverseLerp:function(t,e,i){return t!==e?(i-t)/(e-t):0},lerp:Y,damp:function(t,e,i,n){return Y(t,e,1-Math.exp(-i*n))},pingpong:function(t,e=1){return e-Math.abs(W(t,2*e)-e)},smoothstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*(3-2*t)},smootherstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){void 0!==t&&(F=t);let e=F+=1831565813;return e=Math.imul(e^e>>>15,1|e),e^=e+Math.imul(e^e>>>7,61|e),((e^e>>>14)>>>0)/4294967296},degToRad:function(t){return t*O},radToDeg:function(t){return t*G},isPowerOfTwo:J,ceilPowerOfTwo:K,floorPowerOfTwo:Z,setQuaternionFromProperEuler:function(t,e,i,n,r){const A=Math.cos,s=Math.sin,a=A(i/2),o=s(i/2),l=A((e+n)/2),c=s((e+n)/2),h=A((e-n)/2),u=s((e-n)/2),d=A((n-e)/2),p=s((n-e)/2);switch(r){case"XYX":t.set(a*c,o*h,o*u,a*l);break;case"YZY":t.set(o*u,a*c,o*h,a*l);break;case"ZXZ":t.set(o*h,o*u,a*c,a*l);break;case"XZX":t.set(a*c,o*p,o*d,a*l);break;case"YXY":t.set(o*d,a*c,o*p,a*l);break;case"ZYZ":t.set(o*p,o*d,a*c,a*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}},normalize:function(t,e){switch(e.constructor){case Float32Array:return t;case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw new Error("Invalid component type.")}},denormalize:function(t,e){switch(e.constructor){case Float32Array:return t;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}});class q{constructor(t=0,e=0){this.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6],this.y=n[1]*e+n[4]*i+n[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,i){return void 0!==i&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),n=Math.sin(e),r=this.x-t.x,A=this.y-t.y;return this.x=r*i-A*n+t.x,this.y=r*n+A*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class X{constructor(){this.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,i,n,r,A,s,a,o){const l=this.elements;return l[0]=t,l[1]=n,l[2]=s,l[3]=e,l[4]=r,l[5]=a,l[6]=i,l[7]=A,l[8]=o,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,n=e.elements,r=this.elements,A=i[0],s=i[3],a=i[6],o=i[1],l=i[4],c=i[7],h=i[2],u=i[5],d=i[8],p=n[0],g=n[3],m=n[6],f=n[1],v=n[4],_=n[7],x=n[2],M=n[5],y=n[8];return r[0]=A*p+s*f+a*x,r[3]=A*g+s*v+a*M,r[6]=A*m+s*_+a*y,r[1]=o*p+l*f+c*x,r[4]=o*g+l*v+c*M,r[7]=o*m+l*_+c*y,r[2]=h*p+u*f+d*x,r[5]=h*g+u*v+d*M,r[8]=h*m+u*_+d*y,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],A=t[4],s=t[5],a=t[6],o=t[7],l=t[8];return e*A*l-e*s*o-i*r*l+i*s*a+n*r*o-n*A*a}invert(){const t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],A=t[4],s=t[5],a=t[6],o=t[7],l=t[8],c=l*A-s*o,h=s*a-l*r,u=o*r-A*a,d=e*c+i*h+n*u;if(0===d)return this.set(0,0,0,0,0,0,0,0,0);const p=1/d;return t[0]=c*p,t[1]=(n*o-l*i)*p,t[2]=(s*i-n*A)*p,t[3]=h*p,t[4]=(l*e-n*a)*p,t[5]=(n*r-s*e)*p,t[6]=u*p,t[7]=(i*a-o*e)*p,t[8]=(A*e-i*r)*p,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,n,r,A,s){const a=Math.cos(r),o=Math.sin(r);return this.set(i*a,i*o,-i*(a*A+o*s)+A+t,-n*o,n*a,-n*(-o*A+a*s)+s+e,0,0,1),this}scale(t,e){const i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=e,i[4]*=e,i[7]*=e,this}rotate(t){const e=Math.cos(t),i=Math.sin(t),n=this.elements,r=n[0],A=n[3],s=n[6],a=n[1],o=n[4],l=n[7];return n[0]=e*r+i*a,n[3]=e*A+i*o,n[6]=e*s+i*l,n[1]=-i*r+e*a,n[4]=-i*A+e*o,n[7]=-i*s+e*l,this}translate(t,e){const i=this.elements;return i[0]+=t*i[2],i[3]+=t*i[5],i[6]+=t*i[8],i[1]+=e*i[2],i[4]+=e*i[5],i[7]+=e*i[8],this}equals(t){const e=this.elements,i=t.elements;for(let t=0;t<9;t++)if(e[t]!==i[t])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}function $(t){for(let e=t.length-1;e>=0;--e)if(t[e]>65535)return!0;return!1}function tt(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function et(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function it(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}const nt={[L]:{[P]:et},[P]:{[L]:it}},rt={legacyMode:!0,get workingColorSpace(){return P},set workingColorSpace(t){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(t,e,i){if(this.legacyMode||e===i||!e||!i)return t;if(nt[e]&&void 0!==nt[e][i]){const n=nt[e][i];return t.r=n(t.r),t.g=n(t.g),t.b=n(t.b),t}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(t,e){return this.convert(t,this.workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this.workingColorSpace)}},At={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},st={r:0,g:0,b:0},at={h:0,s:0,l:0},ot={h:0,s:0,l:0};function lt(t,e,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+6*(e-t)*(2/3-i):t}function ct(t,e){return e.r=t.r,e.g=t.g,e.b=t.b,e}class ht{constructor(t,e,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===e&&void 0===i?this.set(t):this.setRGB(t,e,i)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e="srgb"){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,rt.toWorkingColorSpace(this,e),this}setRGB(t,e,i,n="srgb-linear"){return this.r=t,this.g=e,this.b=i,rt.toWorkingColorSpace(this,n),this}setHSL(t,e,i,n="srgb-linear"){if(t=W(t,1),e=H(e,0,1),i=H(i,0,1),0===e)this.r=this.g=this.b=i;else{const n=i<=.5?i*(1+e):i+e-i*e,r=2*i-n;this.r=lt(r,n,t+1/3),this.g=lt(r,n,t),this.b=lt(r,n,t-1/3)}return rt.toWorkingColorSpace(this,n),this}setStyle(t,e="srgb"){function i(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const r=n[1],A=n[2];switch(r){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(A))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,rt.toWorkingColorSpace(this,e),i(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(A))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,rt.toWorkingColorSpace(this,e),i(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(A)){const n=parseFloat(t[1])/360,r=parseInt(t[2],10)/100,A=parseInt(t[3],10)/100;return i(t[4]),this.setHSL(n,r,A,e)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=n[1],i=t.length;if(3===i)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,rt.toWorkingColorSpace(this,e),this;if(6===i)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,rt.toWorkingColorSpace(this,e),this}return t&&t.length>0?this.setColorName(t,e):this}setColorName(t,e="srgb"){const i=At[t.toLowerCase()];return void 0!==i?this.setHex(i,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=et(t.r),this.g=et(t.g),this.b=et(t.b),this}copyLinearToSRGB(t){return this.r=it(t.r),this.g=it(t.g),this.b=it(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t="srgb"){return rt.fromWorkingColorSpace(ct(this,st),t),H(255*st.r,0,255)<<16^H(255*st.g,0,255)<<8^H(255*st.b,0,255)<<0}getHexString(t="srgb"){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e="srgb-linear"){rt.fromWorkingColorSpace(ct(this,st),e);const i=st.r,n=st.g,r=st.b,A=Math.max(i,n,r),s=Math.min(i,n,r);let a,o;const l=(s+A)/2;if(s===A)a=0,o=0;else{const t=A-s;switch(o=l<=.5?t/(A+s):t/(2-A-s),A){case i:a=(n-r)/t+(n<r?6:0);break;case n:a=(r-i)/t+2;break;case r:a=(i-n)/t+4}a/=6}return t.h=a,t.s=o,t.l=l,t}getRGB(t,e="srgb-linear"){return rt.fromWorkingColorSpace(ct(this,st),e),t.r=st.r,t.g=st.g,t.b=st.b,t}getStyle(t="srgb"){return rt.fromWorkingColorSpace(ct(this,st),t),t!==L?`color(${t} ${st.r} ${st.g} ${st.b})`:`rgb(${255*st.r|0},${255*st.g|0},${255*st.b|0})`}offsetHSL(t,e,i){return this.getHSL(at),at.h+=t,at.s+=e,at.l+=i,this.setHSL(at.h,at.s,at.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(at),t.getHSL(ot);const i=Y(at.h,ot.h,e),n=Y(at.s,ot.s,e),r=Y(at.l,ot.l,e);return this.setHSL(i,n,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}let ut;ht.NAMES=At;class dt{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===ut&&(ut=tt("canvas")),ut.width=t.width,ut.height=t.height;const i=ut.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=ut}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const e=tt("canvas");e.width=t.width,e.height=t.height;const i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const n=i.getImageData(0,0,t.width,t.height),r=n.data;for(let t=0;t<r.length;t++)r[t]=255*et(r[t]/255);return i.putImageData(n,0,0),e}if(t.data){const e=t.data.slice(0);for(let t=0;t<e.length;t++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[t]=Math.floor(255*et(e[t]/255)):e[t]=et(e[t]);return{data:e,width:t.width,height:t.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}class pt{constructor(t=null){this.isSource=!0,this.uuid=V(),this.data=t,this.version=0}set needsUpdate(t){!0===t&&this.version++}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.images[this.uuid])return t.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(null!==n){let t;if(Array.isArray(n)){t=[];for(let e=0,i=n.length;e<i;e++)n[e].isDataTexture?t.push(gt(n[e].image)):t.push(gt(n[e]))}else t=gt(n);i.url=t}return e||(t.images[this.uuid]=i),i}}function gt(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?dt.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let mt=0;class ft extends U{constructor(t=ft.DEFAULT_IMAGE,e=ft.DEFAULT_MAPPING,i=1001,n=1001,r=1006,A=1008,s=1023,a=1009,o=1,l=3e3){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:mt++}),this.uuid=V(),this.name="",this.source=new pt(t),this.mipmaps=[],this.mapping=e,this.wrapS=i,this.wrapT=n,this.magFilter=r,this.minFilter=A,this.anisotropy=o,this.format=s,this.internalFormat=null,this.type=a,this.offset=new q(0,0),this.repeat=new q(1,1),this.center=new q(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new X,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=l,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case A:t.x=t.x-Math.floor(t.x);break;case s:t.x=t.x<0?0:1;break;case a:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case A:t.y=t.y-Math.floor(t.y);break;case s:t.y=t.y<0?0:1;break;case a:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}}ft.DEFAULT_IMAGE=null,ft.DEFAULT_MAPPING=300;class vt{constructor(t=0,e=0,i=0,n=1){this.isVector4=!0,this.x=t,this.y=e,this.z=i,this.w=n}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,i,n){return this.x=t,this.y=e,this.z=i,this.w=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,i=this.y,n=this.z,r=this.w,A=t.elements;return this.x=A[0]*e+A[4]*i+A[8]*n+A[12]*r,this.y=A[1]*e+A[5]*i+A[9]*n+A[13]*r,this.z=A[2]*e+A[6]*i+A[10]*n+A[14]*r,this.w=A[3]*e+A[7]*i+A[11]*n+A[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,i,n,r;const A=.01,s=.1,a=t.elements,o=a[0],l=a[4],c=a[8],h=a[1],u=a[5],d=a[9],p=a[2],g=a[6],m=a[10];if(Math.abs(l-h)<A&&Math.abs(c-p)<A&&Math.abs(d-g)<A){if(Math.abs(l+h)<s&&Math.abs(c+p)<s&&Math.abs(d+g)<s&&Math.abs(o+u+m-3)<s)return this.set(1,0,0,0),this;e=Math.PI;const t=(o+1)/2,a=(u+1)/2,f=(m+1)/2,v=(l+h)/4,_=(c+p)/4,x=(d+g)/4;return t>a&&t>f?t<A?(i=0,n=.707106781,r=.707106781):(i=Math.sqrt(t),n=v/i,r=_/i):a>f?a<A?(i=.707106781,n=0,r=.707106781):(n=Math.sqrt(a),i=v/n,r=x/n):f<A?(i=.707106781,n=.707106781,r=0):(r=Math.sqrt(f),i=_/r,n=x/r),this.set(i,n,r,e),this}let f=Math.sqrt((g-d)*(g-d)+(c-p)*(c-p)+(h-l)*(h-l));return Math.abs(f)<.001&&(f=1),this.x=(g-d)/f,this.y=(c-p)/f,this.z=(h-l)/f,this.w=Math.acos((o+u+m-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this.w=t.w+(e.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,i){return void 0!==i&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class _t extends U{constructor(t,e,i={}){super(),this.isWebGLRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new vt(0,0,t,e),this.scissorTest=!1,this.viewport=new vt(0,0,t,e);const n={width:t,height:e,depth:1};this.texture=new ft(n,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==i.generateMipmaps&&i.generateMipmaps,this.texture.internalFormat=void 0!==i.internalFormat?i.internalFormat:null,this.texture.minFilter=void 0!==i.minFilter?i.minFilter:l,this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0!==i.stencilBuffer&&i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null,this.samples=void 0!==i.samples?i.samples:0}setSize(t,e,i=1){this.width===t&&this.height===e&&this.depth===i||(this.width=t,this.height=e,this.depth=i,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new pt(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class xt extends ft{constructor(t=null,e=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:i,depth:n},this.magFilter=o,this.minFilter=o,this.wrapR=s,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Mt{constructor(t=0,e=0,i=0,n=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=n}static slerp(t,e,i,n){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),i.slerpQuaternions(t,e,n)}static slerpFlat(t,e,i,n,r,A,s){let a=i[n+0],o=i[n+1],l=i[n+2],c=i[n+3];const h=r[A+0],u=r[A+1],d=r[A+2],p=r[A+3];if(0===s)return t[e+0]=a,t[e+1]=o,t[e+2]=l,void(t[e+3]=c);if(1===s)return t[e+0]=h,t[e+1]=u,t[e+2]=d,void(t[e+3]=p);if(c!==p||a!==h||o!==u||l!==d){let t=1-s;const e=a*h+o*u+l*d+c*p,i=e>=0?1:-1,n=1-e*e;if(n>Number.EPSILON){const r=Math.sqrt(n),A=Math.atan2(r,e*i);t=Math.sin(t*A)/r,s=Math.sin(s*A)/r}const r=s*i;if(a=a*t+h*r,o=o*t+u*r,l=l*t+d*r,c=c*t+p*r,t===1-s){const t=1/Math.sqrt(a*a+o*o+l*l+c*c);a*=t,o*=t,l*=t,c*=t}}t[e]=a,t[e+1]=o,t[e+2]=l,t[e+3]=c}static multiplyQuaternionsFlat(t,e,i,n,r,A){const s=i[n],a=i[n+1],o=i[n+2],l=i[n+3],c=r[A],h=r[A+1],u=r[A+2],d=r[A+3];return t[e]=s*d+l*c+a*u-o*h,t[e+1]=a*d+l*h+o*c-s*u,t[e+2]=o*d+l*u+s*h-a*c,t[e+3]=l*d-s*c-a*h-o*u,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=t._x,n=t._y,r=t._z,A=t._order,s=Math.cos,a=Math.sin,o=s(i/2),l=s(n/2),c=s(r/2),h=a(i/2),u=a(n/2),d=a(r/2);switch(A){case"XYZ":this._x=h*l*c+o*u*d,this._y=o*u*c-h*l*d,this._z=o*l*d+h*u*c,this._w=o*l*c-h*u*d;break;case"YXZ":this._x=h*l*c+o*u*d,this._y=o*u*c-h*l*d,this._z=o*l*d-h*u*c,this._w=o*l*c+h*u*d;break;case"ZXY":this._x=h*l*c-o*u*d,this._y=o*u*c+h*l*d,this._z=o*l*d+h*u*c,this._w=o*l*c-h*u*d;break;case"ZYX":this._x=h*l*c-o*u*d,this._y=o*u*c+h*l*d,this._z=o*l*d-h*u*c,this._w=o*l*c+h*u*d;break;case"YZX":this._x=h*l*c+o*u*d,this._y=o*u*c+h*l*d,this._z=o*l*d-h*u*c,this._w=o*l*c-h*u*d;break;case"XZY":this._x=h*l*c-o*u*d,this._y=o*u*c-h*l*d,this._z=o*l*d+h*u*c,this._w=o*l*c+h*u*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+A)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,n=Math.sin(i);return this._x=t.x*n,this._y=t.y*n,this._z=t.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],n=e[4],r=e[8],A=e[1],s=e[5],a=e[9],o=e[2],l=e[6],c=e[10],h=i+s+c;if(h>0){const t=.5/Math.sqrt(h+1);this._w=.25/t,this._x=(l-a)*t,this._y=(r-o)*t,this._z=(A-n)*t}else if(i>s&&i>c){const t=2*Math.sqrt(1+i-s-c);this._w=(l-a)/t,this._x=.25*t,this._y=(n+A)/t,this._z=(r+o)/t}else if(s>c){const t=2*Math.sqrt(1+s-i-c);this._w=(r-o)/t,this._x=(n+A)/t,this._y=.25*t,this._z=(a+l)/t}else{const t=2*Math.sqrt(1+c-i-s);this._w=(A-n)/t,this._x=(r+o)/t,this._y=(a+l)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(H(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(0===i)return this;const n=Math.min(1,e/i);return this.slerp(t,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,n=t._y,r=t._z,A=t._w,s=e._x,a=e._y,o=e._z,l=e._w;return this._x=i*l+A*s+n*o-r*a,this._y=n*l+A*a+r*s-i*o,this._z=r*l+A*o+i*a-n*s,this._w=A*l-i*s-n*a-r*o,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const i=this._x,n=this._y,r=this._z,A=this._w;let s=A*t._w+i*t._x+n*t._y+r*t._z;if(s<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,s=-s):this.copy(t),s>=1)return this._w=A,this._x=i,this._y=n,this._z=r,this;const a=1-s*s;if(a<=Number.EPSILON){const t=1-e;return this._w=t*A+e*this._w,this._x=t*i+e*this._x,this._y=t*n+e*this._y,this._z=t*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const o=Math.sqrt(a),l=Math.atan2(o,s),c=Math.sin((1-e)*l)/o,h=Math.sin(e*l)/o;return this._w=A*c+this._w*h,this._x=i*c+this._x*h,this._y=n*c+this._y*h,this._z=r*c+this._z*h,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){const t=Math.random(),e=Math.sqrt(1-t),i=Math.sqrt(t),n=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(e*Math.cos(n),i*Math.sin(r),i*Math.cos(r),e*Math.sin(n))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class yt{constructor(t=0,e=0,i=0){this.isVector3=!0,this.x=t,this.y=e,this.z=i}set(t,e,i){return void 0===i&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Ct.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Ct.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,n=this.z,r=t.elements;return this.x=r[0]*e+r[3]*i+r[6]*n,this.y=r[1]*e+r[4]*i+r[7]*n,this.z=r[2]*e+r[5]*i+r[8]*n,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,n=this.z,r=t.elements,A=1/(r[3]*e+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*e+r[4]*i+r[8]*n+r[12])*A,this.y=(r[1]*e+r[5]*i+r[9]*n+r[13])*A,this.z=(r[2]*e+r[6]*i+r[10]*n+r[14])*A,this}applyQuaternion(t){const e=this.x,i=this.y,n=this.z,r=t.x,A=t.y,s=t.z,a=t.w,o=a*e+A*n-s*i,l=a*i+s*e-r*n,c=a*n+r*i-A*e,h=-r*e-A*i-s*n;return this.x=o*a+h*-r+l*-s-c*-A,this.y=l*a+h*-A+c*-r-o*-s,this.z=c*a+h*-s+o*-A-l*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,n=this.z,r=t.elements;return this.x=r[0]*e+r[4]*i+r[8]*n,this.y=r[1]*e+r[5]*i+r[9]*n,this.z=r[2]*e+r[6]*i+r[10]*n,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,n=t.y,r=t.z,A=e.x,s=e.y,a=e.z;return this.x=n*a-r*s,this.y=r*A-i*a,this.z=i*s-n*A,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return wt.copy(this).projectOnVector(t),this.sub(wt)}reflect(t){return this.sub(wt.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(H(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,n=this.z-t.z;return e*e+i*i+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const n=Math.sin(e)*t;return this.x=n*Math.sin(i),this.y=Math.cos(e)*t,this.z=n*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),n=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=n,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,i){return void 0!==i&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=2*(Math.random()-.5),e=Math.random()*Math.PI*2,i=Math.sqrt(1-t**2);return this.x=i*Math.cos(e),this.y=i*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const wt=new yt,Ct=new Mt;class bt{constructor(t=new yt(1/0,1/0,1/0),e=new yt(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,i=1/0,n=1/0,r=-1/0,A=-1/0,s=-1/0;for(let a=0,o=t.length;a<o;a+=3){const o=t[a],l=t[a+1],c=t[a+2];o<e&&(e=o),l<i&&(i=l),c<n&&(n=c),o>r&&(r=o),l>A&&(A=l),c>s&&(s=c)}return this.min.set(e,i,n),this.max.set(r,A,s),this}setFromBufferAttribute(t){let e=1/0,i=1/0,n=1/0,r=-1/0,A=-1/0,s=-1/0;for(let a=0,o=t.count;a<o;a++){const o=t.getX(a),l=t.getY(a),c=t.getZ(a);o<e&&(e=o),l<i&&(i=l),c<n&&(n=c),o>r&&(r=o),l>A&&(A=l),c>s&&(s=c)}return this.min.set(e,i,n),this.max.set(r,A,s),this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=Et.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(void 0!==i)if(e&&null!=i.attributes&&void 0!==i.attributes.position){const e=i.attributes.position;for(let i=0,n=e.count;i<n;i++)Et.fromBufferAttribute(e,i).applyMatrix4(t.matrixWorld),this.expandByPoint(Et)}else null===i.boundingBox&&i.computeBoundingBox(),St.copy(i.boundingBox),St.applyMatrix4(t.matrixWorld),this.union(St);const n=t.children;for(let t=0,i=n.length;t<i;t++)this.expandByObject(n[t],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,Et),Et.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Nt),Qt.subVectors(this.max,Nt),Dt.subVectors(t.a,Nt),Tt.subVectors(t.b,Nt),Bt.subVectors(t.c,Nt),Lt.subVectors(Tt,Dt),Pt.subVectors(Bt,Tt),Rt.subVectors(Dt,Bt);let e=[0,-Lt.z,Lt.y,0,-Pt.z,Pt.y,0,-Rt.z,Rt.y,Lt.z,0,-Lt.x,Pt.z,0,-Pt.x,Rt.z,0,-Rt.x,-Lt.y,Lt.x,0,-Pt.y,Pt.x,0,-Rt.y,Rt.x,0];return!!kt(e,Dt,Tt,Bt,Qt)&&(e=[1,0,0,0,1,0,0,0,1],!!kt(e,Dt,Tt,Bt,Qt)&&(zt.crossVectors(Lt,Pt),e=[zt.x,zt.y,zt.z],kt(e,Dt,Tt,Bt,Qt)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Et.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(Et).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(It[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),It[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),It[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),It[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),It[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),It[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),It[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),It[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(It)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const It=[new yt,new yt,new yt,new yt,new yt,new yt,new yt,new yt],Et=new yt,St=new bt,Dt=new yt,Tt=new yt,Bt=new yt,Lt=new yt,Pt=new yt,Rt=new yt,Nt=new yt,Qt=new yt,zt=new yt,Ut=new yt;function kt(t,e,i,n,r){for(let A=0,s=t.length-3;A<=s;A+=3){Ut.fromArray(t,A);const s=r.x*Math.abs(Ut.x)+r.y*Math.abs(Ut.y)+r.z*Math.abs(Ut.z),a=e.dot(Ut),o=i.dot(Ut),l=n.dot(Ut);if(Math.max(-Math.max(a,o,l),Math.min(a,o,l))>s)return!1}return!0}const Ft=new bt,Ot=new yt,Gt=new yt,Vt=new yt;class Ht{constructor(t=new yt,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;void 0!==e?i.copy(e):Ft.setFromPoints(t).getCenter(i);let n=0;for(let e=0,r=t.length;e<r;e++)n=Math.max(n,i.distanceToSquared(t[e]));return this.radius=Math.sqrt(n),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){Vt.subVectors(t,this.center);const e=Vt.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),i=.5*(t-this.radius);this.center.add(Vt.multiplyScalar(i/t)),this.radius+=i}return this}union(t){return!0===this.center.equals(t.center)?Gt.set(0,0,1).multiplyScalar(t.radius):Gt.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(Ot.copy(t.center).add(Gt)),this.expandByPoint(Ot.copy(t.center).sub(Gt)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Wt=new yt,Yt=new yt,Jt=new yt,Kt=new yt,Zt=new yt,jt=new yt,qt=new yt;class Xt{constructor(t=new yt,e=new yt(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Wt)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Wt.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Wt.copy(this.direction).multiplyScalar(e).add(this.origin),Wt.distanceToSquared(t))}distanceSqToSegment(t,e,i,n){Yt.copy(t).add(e).multiplyScalar(.5),Jt.copy(e).sub(t).normalize(),Kt.copy(this.origin).sub(Yt);const r=.5*t.distanceTo(e),A=-this.direction.dot(Jt),s=Kt.dot(this.direction),a=-Kt.dot(Jt),o=Kt.lengthSq(),l=Math.abs(1-A*A);let c,h,u,d;if(l>0)if(c=A*a-s,h=A*s-a,d=r*l,c>=0)if(h>=-d)if(h<=d){const t=1/l;c*=t,h*=t,u=c*(c+A*h+2*s)+h*(A*c+h+2*a)+o}else h=r,c=Math.max(0,-(A*h+s)),u=-c*c+h*(h+2*a)+o;else h=-r,c=Math.max(0,-(A*h+s)),u=-c*c+h*(h+2*a)+o;else h<=-d?(c=Math.max(0,-(-A*r+s)),h=c>0?-r:Math.min(Math.max(-r,-a),r),u=-c*c+h*(h+2*a)+o):h<=d?(c=0,h=Math.min(Math.max(-r,-a),r),u=h*(h+2*a)+o):(c=Math.max(0,-(A*r+s)),h=c>0?r:Math.min(Math.max(-r,-a),r),u=-c*c+h*(h+2*a)+o);else h=A>0?-r:r,c=Math.max(0,-(A*h+s)),u=-c*c+h*(h+2*a)+o;return i&&i.copy(this.direction).multiplyScalar(c).add(this.origin),n&&n.copy(Jt).multiplyScalar(h).add(Yt),u}intersectSphere(t,e){Wt.subVectors(t.center,this.origin);const i=Wt.dot(this.direction),n=Wt.dot(Wt)-i*i,r=t.radius*t.radius;if(n>r)return null;const A=Math.sqrt(r-n),s=i-A,a=i+A;return s<0&&a<0?null:s<0?this.at(a,e):this.at(s,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){const i=this.distanceToPlane(t);return null===i?null:this.at(i,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;return t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,n,r,A,s,a;const o=1/this.direction.x,l=1/this.direction.y,c=1/this.direction.z,h=this.origin;return o>=0?(i=(t.min.x-h.x)*o,n=(t.max.x-h.x)*o):(i=(t.max.x-h.x)*o,n=(t.min.x-h.x)*o),l>=0?(r=(t.min.y-h.y)*l,A=(t.max.y-h.y)*l):(r=(t.max.y-h.y)*l,A=(t.min.y-h.y)*l),i>A||r>n?null:((r>i||i!=i)&&(i=r),(A<n||n!=n)&&(n=A),c>=0?(s=(t.min.z-h.z)*c,a=(t.max.z-h.z)*c):(s=(t.max.z-h.z)*c,a=(t.min.z-h.z)*c),i>a||s>n?null:((s>i||i!=i)&&(i=s),(a<n||n!=n)&&(n=a),n<0?null:this.at(i>=0?i:n,e)))}intersectsBox(t){return null!==this.intersectBox(t,Wt)}intersectTriangle(t,e,i,n,r){Zt.subVectors(e,t),jt.subVectors(i,t),qt.crossVectors(Zt,jt);let A,s=this.direction.dot(qt);if(s>0){if(n)return null;A=1}else{if(!(s<0))return null;A=-1,s=-s}Kt.subVectors(this.origin,t);const a=A*this.direction.dot(jt.crossVectors(Kt,jt));if(a<0)return null;const o=A*this.direction.dot(Zt.cross(Kt));if(o<0)return null;if(a+o>s)return null;const l=-A*Kt.dot(qt);return l<0?null:this.at(l/s,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class $t{constructor(){this.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,i,n,r,A,s,a,o,l,c,h,u,d,p,g){const m=this.elements;return m[0]=t,m[4]=e,m[8]=i,m[12]=n,m[1]=r,m[5]=A,m[9]=s,m[13]=a,m[2]=o,m[6]=l,m[10]=c,m[14]=h,m[3]=u,m[7]=d,m[11]=p,m[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new $t).fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,n=1/te.setFromMatrixColumn(t,0).length(),r=1/te.setFromMatrixColumn(t,1).length(),A=1/te.setFromMatrixColumn(t,2).length();return e[0]=i[0]*n,e[1]=i[1]*n,e[2]=i[2]*n,e[3]=0,e[4]=i[4]*r,e[5]=i[5]*r,e[6]=i[6]*r,e[7]=0,e[8]=i[8]*A,e[9]=i[9]*A,e[10]=i[10]*A,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,i=t.x,n=t.y,r=t.z,A=Math.cos(i),s=Math.sin(i),a=Math.cos(n),o=Math.sin(n),l=Math.cos(r),c=Math.sin(r);if("XYZ"===t.order){const t=A*l,i=A*c,n=s*l,r=s*c;e[0]=a*l,e[4]=-a*c,e[8]=o,e[1]=i+n*o,e[5]=t-r*o,e[9]=-s*a,e[2]=r-t*o,e[6]=n+i*o,e[10]=A*a}else if("YXZ"===t.order){const t=a*l,i=a*c,n=o*l,r=o*c;e[0]=t+r*s,e[4]=n*s-i,e[8]=A*o,e[1]=A*c,e[5]=A*l,e[9]=-s,e[2]=i*s-n,e[6]=r+t*s,e[10]=A*a}else if("ZXY"===t.order){const t=a*l,i=a*c,n=o*l,r=o*c;e[0]=t-r*s,e[4]=-A*c,e[8]=n+i*s,e[1]=i+n*s,e[5]=A*l,e[9]=r-t*s,e[2]=-A*o,e[6]=s,e[10]=A*a}else if("ZYX"===t.order){const t=A*l,i=A*c,n=s*l,r=s*c;e[0]=a*l,e[4]=n*o-i,e[8]=t*o+r,e[1]=a*c,e[5]=r*o+t,e[9]=i*o-n,e[2]=-o,e[6]=s*a,e[10]=A*a}else if("YZX"===t.order){const t=A*a,i=A*o,n=s*a,r=s*o;e[0]=a*l,e[4]=r-t*c,e[8]=n*c+i,e[1]=c,e[5]=A*l,e[9]=-s*l,e[2]=-o*l,e[6]=i*c+n,e[10]=t-r*c}else if("XZY"===t.order){const t=A*a,i=A*o,n=s*a,r=s*o;e[0]=a*l,e[4]=-c,e[8]=o*l,e[1]=t*c+r,e[5]=A*l,e[9]=i*c-n,e[2]=n*c-i,e[6]=s*l,e[10]=r*c+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(ie,t,ne)}lookAt(t,e,i){const n=this.elements;return se.subVectors(t,e),0===se.lengthSq()&&(se.z=1),se.normalize(),re.crossVectors(i,se),0===re.lengthSq()&&(1===Math.abs(i.z)?se.x+=1e-4:se.z+=1e-4,se.normalize(),re.crossVectors(i,se)),re.normalize(),Ae.crossVectors(se,re),n[0]=re.x,n[4]=Ae.x,n[8]=se.x,n[1]=re.y,n[5]=Ae.y,n[9]=se.y,n[2]=re.z,n[6]=Ae.z,n[10]=se.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,n=e.elements,r=this.elements,A=i[0],s=i[4],a=i[8],o=i[12],l=i[1],c=i[5],h=i[9],u=i[13],d=i[2],p=i[6],g=i[10],m=i[14],f=i[3],v=i[7],_=i[11],x=i[15],M=n[0],y=n[4],w=n[8],C=n[12],b=n[1],I=n[5],E=n[9],S=n[13],D=n[2],T=n[6],B=n[10],L=n[14],P=n[3],R=n[7],N=n[11],Q=n[15];return r[0]=A*M+s*b+a*D+o*P,r[4]=A*y+s*I+a*T+o*R,r[8]=A*w+s*E+a*B+o*N,r[12]=A*C+s*S+a*L+o*Q,r[1]=l*M+c*b+h*D+u*P,r[5]=l*y+c*I+h*T+u*R,r[9]=l*w+c*E+h*B+u*N,r[13]=l*C+c*S+h*L+u*Q,r[2]=d*M+p*b+g*D+m*P,r[6]=d*y+p*I+g*T+m*R,r[10]=d*w+p*E+g*B+m*N,r[14]=d*C+p*S+g*L+m*Q,r[3]=f*M+v*b+_*D+x*P,r[7]=f*y+v*I+_*T+x*R,r[11]=f*w+v*E+_*B+x*N,r[15]=f*C+v*S+_*L+x*Q,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],n=t[8],r=t[12],A=t[1],s=t[5],a=t[9],o=t[13],l=t[2],c=t[6],h=t[10],u=t[14];return t[3]*(+r*a*c-n*o*c-r*s*h+i*o*h+n*s*u-i*a*u)+t[7]*(+e*a*u-e*o*h+r*A*h-n*A*u+n*o*l-r*a*l)+t[11]*(+e*o*c-e*s*u-r*A*c+i*A*u+r*s*l-i*o*l)+t[15]*(-n*s*l-e*a*c+e*s*h+n*A*c-i*A*h+i*a*l)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const n=this.elements;return t.isVector3?(n[12]=t.x,n[13]=t.y,n[14]=t.z):(n[12]=t,n[13]=e,n[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],A=t[4],s=t[5],a=t[6],o=t[7],l=t[8],c=t[9],h=t[10],u=t[11],d=t[12],p=t[13],g=t[14],m=t[15],f=c*g*o-p*h*o+p*a*u-s*g*u-c*a*m+s*h*m,v=d*h*o-l*g*o-d*a*u+A*g*u+l*a*m-A*h*m,_=l*p*o-d*c*o+d*s*u-A*p*u-l*s*m+A*c*m,x=d*c*a-l*p*a-d*s*h+A*p*h+l*s*g-A*c*g,M=e*f+i*v+n*_+r*x;if(0===M)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const y=1/M;return t[0]=f*y,t[1]=(p*h*r-c*g*r-p*n*u+i*g*u+c*n*m-i*h*m)*y,t[2]=(s*g*r-p*a*r+p*n*o-i*g*o-s*n*m+i*a*m)*y,t[3]=(c*a*r-s*h*r-c*n*o+i*h*o+s*n*u-i*a*u)*y,t[4]=v*y,t[5]=(l*g*r-d*h*r+d*n*u-e*g*u-l*n*m+e*h*m)*y,t[6]=(d*a*r-A*g*r-d*n*o+e*g*o+A*n*m-e*a*m)*y,t[7]=(A*h*r-l*a*r+l*n*o-e*h*o-A*n*u+e*a*u)*y,t[8]=_*y,t[9]=(d*c*r-l*p*r-d*i*u+e*p*u+l*i*m-e*c*m)*y,t[10]=(A*p*r-d*s*r+d*i*o-e*p*o-A*i*m+e*s*m)*y,t[11]=(l*s*r-A*c*r-l*i*o+e*c*o+A*i*u-e*s*u)*y,t[12]=x*y,t[13]=(l*p*n-d*c*n+d*i*h-e*p*h-l*i*g+e*c*g)*y,t[14]=(d*s*n-A*p*n-d*i*a+e*p*a+A*i*g-e*s*g)*y,t[15]=(A*c*n-l*s*n+l*i*a-e*c*a-A*i*h+e*s*h)*y,this}scale(t){const e=this.elements,i=t.x,n=t.y,r=t.z;return e[0]*=i,e[4]*=n,e[8]*=r,e[1]*=i,e[5]*=n,e[9]*=r,e[2]*=i,e[6]*=n,e[10]*=r,e[3]*=i,e[7]*=n,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],n=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,n))}makeTranslation(t,e,i){return this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),n=Math.sin(e),r=1-i,A=t.x,s=t.y,a=t.z,o=r*A,l=r*s;return this.set(o*A+i,o*s-n*a,o*a+n*s,0,o*s+n*a,l*s+i,l*a-n*A,0,o*a-n*s,l*a+n*A,r*a*a+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,n,r,A){return this.set(1,i,r,0,t,1,A,0,e,n,1,0,0,0,0,1),this}compose(t,e,i){const n=this.elements,r=e._x,A=e._y,s=e._z,a=e._w,o=r+r,l=A+A,c=s+s,h=r*o,u=r*l,d=r*c,p=A*l,g=A*c,m=s*c,f=a*o,v=a*l,_=a*c,x=i.x,M=i.y,y=i.z;return n[0]=(1-(p+m))*x,n[1]=(u+_)*x,n[2]=(d-v)*x,n[3]=0,n[4]=(u-_)*M,n[5]=(1-(h+m))*M,n[6]=(g+f)*M,n[7]=0,n[8]=(d+v)*y,n[9]=(g-f)*y,n[10]=(1-(h+p))*y,n[11]=0,n[12]=t.x,n[13]=t.y,n[14]=t.z,n[15]=1,this}decompose(t,e,i){const n=this.elements;let r=te.set(n[0],n[1],n[2]).length();const A=te.set(n[4],n[5],n[6]).length(),s=te.set(n[8],n[9],n[10]).length();this.determinant()<0&&(r=-r),t.x=n[12],t.y=n[13],t.z=n[14],ee.copy(this);const a=1/r,o=1/A,l=1/s;return ee.elements[0]*=a,ee.elements[1]*=a,ee.elements[2]*=a,ee.elements[4]*=o,ee.elements[5]*=o,ee.elements[6]*=o,ee.elements[8]*=l,ee.elements[9]*=l,ee.elements[10]*=l,e.setFromRotationMatrix(ee),i.x=r,i.y=A,i.z=s,this}makePerspective(t,e,i,n,r,A){void 0===A&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements,a=2*r/(e-t),o=2*r/(i-n),l=(e+t)/(e-t),c=(i+n)/(i-n),h=-(A+r)/(A-r),u=-2*A*r/(A-r);return s[0]=a,s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=o,s[9]=c,s[13]=0,s[2]=0,s[6]=0,s[10]=h,s[14]=u,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(t,e,i,n,r,A){const s=this.elements,a=1/(e-t),o=1/(i-n),l=1/(A-r),c=(e+t)*a,h=(i+n)*o,u=(A+r)*l;return s[0]=2*a,s[4]=0,s[8]=0,s[12]=-c,s[1]=0,s[5]=2*o,s[9]=0,s[13]=-h,s[2]=0,s[6]=0,s[10]=-2*l,s[14]=-u,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let t=0;t<16;t++)if(e[t]!==i[t])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}const te=new yt,ee=new $t,ie=new yt(0,0,0),ne=new yt(1,1,1),re=new yt,Ae=new yt,se=new yt,ae=new $t,oe=new Mt;class le{constructor(t=0,e=0,i=0,n=le.DefaultOrder){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=n}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,n=this._order){return this._x=t,this._y=e,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){const n=t.elements,r=n[0],A=n[4],s=n[8],a=n[1],o=n[5],l=n[9],c=n[2],h=n[6],u=n[10];switch(e){case"XYZ":this._y=Math.asin(H(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-l,u),this._z=Math.atan2(-A,r)):(this._x=Math.atan2(h,o),this._z=0);break;case"YXZ":this._x=Math.asin(-H(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(s,u),this._z=Math.atan2(a,o)):(this._y=Math.atan2(-c,r),this._z=0);break;case"ZXY":this._x=Math.asin(H(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-c,u),this._z=Math.atan2(-A,o)):(this._y=0,this._z=Math.atan2(a,r));break;case"ZYX":this._y=Math.asin(-H(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(h,u),this._z=Math.atan2(a,r)):(this._x=0,this._z=Math.atan2(-A,o));break;case"YZX":this._z=Math.asin(H(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,o),this._y=Math.atan2(-c,r)):(this._x=0,this._y=Math.atan2(s,u));break;case"XZY":this._z=Math.asin(-H(A,-1,1)),Math.abs(A)<.9999999?(this._x=Math.atan2(h,o),this._y=Math.atan2(s,r)):(this._x=Math.atan2(-l,u),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===i&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return ae.makeRotationFromQuaternion(t),this.setFromRotationMatrix(ae,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return oe.setFromEuler(this),this.setFromQuaternion(oe,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}le.DefaultOrder="XYZ",le.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class ce{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}isEnabled(t){return 0!=(this.mask&(1<<t|0))}}let he=0;const ue=new yt,de=new Mt,pe=new $t,ge=new yt,me=new yt,fe=new yt,ve=new Mt,_e=new yt(1,0,0),xe=new yt(0,1,0),Me=new yt(0,0,1),ye={type:"added"},we={type:"removed"};class Ce extends U{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:he++}),this.uuid=V(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ce.DefaultUp.clone();const t=new yt,e=new le,i=new Mt,n=new yt(1,1,1);e._onChange((function(){i.setFromEuler(e,!1)})),i._onChange((function(){e.setFromQuaternion(i,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new $t},normalMatrix:{value:new X}}),this.matrix=new $t,this.matrixWorld=new $t,this.matrixAutoUpdate=Ce.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ce,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return de.setFromAxisAngle(t,e),this.quaternion.multiply(de),this}rotateOnWorldAxis(t,e){return de.setFromAxisAngle(t,e),this.quaternion.premultiply(de),this}rotateX(t){return this.rotateOnAxis(_e,t)}rotateY(t){return this.rotateOnAxis(xe,t)}rotateZ(t){return this.rotateOnAxis(Me,t)}translateOnAxis(t,e){return ue.copy(t).applyQuaternion(this.quaternion),this.position.add(ue.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(_e,t)}translateY(t){return this.translateOnAxis(xe,t)}translateZ(t){return this.translateOnAxis(Me,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(pe.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?ge.copy(t):ge.set(t,e,i);const n=this.parent;this.updateWorldMatrix(!0,!1),me.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?pe.lookAt(me,ge,this.up):pe.lookAt(ge,me,this.up),this.quaternion.setFromRotationMatrix(pe),n&&(pe.extractRotation(n.matrixWorld),de.setFromRotationMatrix(pe),this.quaternion.premultiply(de.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(ye)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(we)),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(we)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),pe.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),pe.multiply(t.parent.matrixWorld)),t.applyMatrix4(pe),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,n=this.children.length;i<n;i++){const n=this.children[i].getObjectByProperty(t,e);if(void 0!==n)return n}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(me,t,fe),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(me,ve,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].updateMatrixWorld(t)}updateWorldMatrix(t,e){const i=this.parent;if(!0===t&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,i=t.length;e<i;e++)t[e].updateWorldMatrix(!1,!0)}}toJSON(t){const e=void 0===t||"string"==typeof t,i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const n={};function r(e,i){return void 0===e[i.uuid]&&(e[i.uuid]=i.toJSON(t)),i.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(n.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&(n.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=r(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const i=e.shapes;if(Array.isArray(i))for(let e=0,n=i.length;e<n;e++){const n=i[e];r(t.shapes,n)}else r(t.shapes,i)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(t.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let i=0,n=this.material.length;i<n;i++)e.push(r(t.materials,this.material[i]));n.material=e}else n.material=r(t.materials,this.material);if(this.children.length>0){n.children=[];for(let e=0;e<this.children.length;e++)n.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){n.animations=[];for(let e=0;e<this.animations.length;e++){const i=this.animations[e];n.animations.push(r(t.animations,i))}}if(e){const e=A(t.geometries),n=A(t.materials),r=A(t.textures),s=A(t.images),a=A(t.shapes),o=A(t.skeletons),l=A(t.animations),c=A(t.nodes);e.length>0&&(i.geometries=e),n.length>0&&(i.materials=n),r.length>0&&(i.textures=r),s.length>0&&(i.images=s),a.length>0&&(i.shapes=a),o.length>0&&(i.skeletons=o),l.length>0&&(i.animations=l),c.length>0&&(i.nodes=c)}return i.object=n,i;function A(t){const e=[];for(const i in t){const n=t[i];delete n.metadata,e.push(n)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const i=t.children[e];this.add(i.clone())}return this}}Ce.DefaultUp=new yt(0,1,0),Ce.DefaultMatrixAutoUpdate=!0;const be=new yt,Ie=new yt,Ee=new yt,Se=new yt,De=new yt,Te=new yt,Be=new yt,Le=new yt,Pe=new yt,Re=new yt;class Ne{constructor(t=new yt,e=new yt,i=new yt){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,n){n.subVectors(i,e),be.subVectors(t,e),n.cross(be);const r=n.lengthSq();return r>0?n.multiplyScalar(1/Math.sqrt(r)):n.set(0,0,0)}static getBarycoord(t,e,i,n,r){be.subVectors(n,e),Ie.subVectors(i,e),Ee.subVectors(t,e);const A=be.dot(be),s=be.dot(Ie),a=be.dot(Ee),o=Ie.dot(Ie),l=Ie.dot(Ee),c=A*o-s*s;if(0===c)return r.set(-2,-1,-1);const h=1/c,u=(o*a-s*l)*h,d=(A*l-s*a)*h;return r.set(1-u-d,d,u)}static containsPoint(t,e,i,n){return this.getBarycoord(t,e,i,n,Se),Se.x>=0&&Se.y>=0&&Se.x+Se.y<=1}static getUV(t,e,i,n,r,A,s,a){return this.getBarycoord(t,e,i,n,Se),a.set(0,0),a.addScaledVector(r,Se.x),a.addScaledVector(A,Se.y),a.addScaledVector(s,Se.z),a}static isFrontFacing(t,e,i,n){return be.subVectors(i,e),Ie.subVectors(t,e),be.cross(Ie).dot(n)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,n){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[n]),this}setFromAttributeAndIndices(t,e,i,n){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return be.subVectors(this.c,this.b),Ie.subVectors(this.a,this.b),.5*be.cross(Ie).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Ne.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Ne.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,i,n,r){return Ne.getUV(t,this.a,this.b,this.c,e,i,n,r)}containsPoint(t){return Ne.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Ne.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const i=this.a,n=this.b,r=this.c;let A,s;De.subVectors(n,i),Te.subVectors(r,i),Le.subVectors(t,i);const a=De.dot(Le),o=Te.dot(Le);if(a<=0&&o<=0)return e.copy(i);Pe.subVectors(t,n);const l=De.dot(Pe),c=Te.dot(Pe);if(l>=0&&c<=l)return e.copy(n);const h=a*c-l*o;if(h<=0&&a>=0&&l<=0)return A=a/(a-l),e.copy(i).addScaledVector(De,A);Re.subVectors(t,r);const u=De.dot(Re),d=Te.dot(Re);if(d>=0&&u<=d)return e.copy(r);const p=u*o-a*d;if(p<=0&&o>=0&&d<=0)return s=o/(o-d),e.copy(i).addScaledVector(Te,s);const g=l*d-u*c;if(g<=0&&c-l>=0&&u-d>=0)return Be.subVectors(r,n),s=(c-l)/(c-l+(u-d)),e.copy(n).addScaledVector(Be,s);const m=1/(g+p+h);return A=p*m,s=h*m,e.copy(i).addScaledVector(De,A).addScaledVector(Te,s)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let Qe=0;class ze extends U{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Qe++}),this.uuid=V(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=e,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=R,this.stencilZFail=R,this.stencilZPass=R,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const i=t[e];if(void 0===i){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===i;continue}const n=this[e];void 0!==n?n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[e]=i:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}}toJSON(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function n(t){const e=[];for(const i in t){const n=t[i];delete n.metadata,e.push(n)}return e}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),void 0!==this.sheen&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(i.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(i.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(i.combine=this.combine)),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(i.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&(i.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(i.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(i.blending=this.blending),0!==this.side&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(i.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(i.flatShading=this.flatShading),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),!1===this.fog&&(i.fog=!1),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),e){const e=n(t.textures),r=n(t.images);e.length>0&&(i.textures=e),r.length>0&&(i.images=r)}return i}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let i=null;if(null!==e){const t=e.length;i=new Array(t);for(let n=0;n!==t;++n)i[n]=e[n].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}get vertexTangents(){return console.warn("THREE."+this.type+": .vertexTangents has been removed."),!1}set vertexTangents(t){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}ze.fromType=function(){return null};class Ue extends ze{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new ht(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const ke=new yt,Fe=new q;class Oe{constructor(t,e,i){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===i,this.usage=N,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let n=0,r=this.itemSize;n<r;n++)this.array[t+n]=e.array[i+n];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){const e=this.array;let i=0;for(let n=0,r=t.length;n<r;n++){let r=t[n];void 0===r&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",n),r=new ht),e[i++]=r.r,e[i++]=r.g,e[i++]=r.b}return this}copyVector2sArray(t){const e=this.array;let i=0;for(let n=0,r=t.length;n<r;n++){let r=t[n];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",n),r=new q),e[i++]=r.x,e[i++]=r.y}return this}copyVector3sArray(t){const e=this.array;let i=0;for(let n=0,r=t.length;n<r;n++){let r=t[n];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",n),r=new yt),e[i++]=r.x,e[i++]=r.y,e[i++]=r.z}return this}copyVector4sArray(t){const e=this.array;let i=0;for(let n=0,r=t.length;n<r;n++){let r=t[n];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",n),r=new vt),e[i++]=r.x,e[i++]=r.y,e[i++]=r.z,e[i++]=r.w}return this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,i=this.count;e<i;e++)Fe.fromBufferAttribute(this,e),Fe.applyMatrix3(t),this.setXY(e,Fe.x,Fe.y);else if(3===this.itemSize)for(let e=0,i=this.count;e<i;e++)ke.fromBufferAttribute(this,e),ke.applyMatrix3(t),this.setXYZ(e,ke.x,ke.y,ke.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)ke.fromBufferAttribute(this,e),ke.applyMatrix4(t),this.setXYZ(e,ke.x,ke.y,ke.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)ke.fromBufferAttribute(this,e),ke.applyNormalMatrix(t),this.setXYZ(e,ke.x,ke.y,ke.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)ke.fromBufferAttribute(this,e),ke.transformDirection(t),this.setXYZ(e,ke.x,ke.y,ke.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){return this.array[t*this.itemSize]}setX(t,e){return this.array[t*this.itemSize]=e,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,e){return this.array[t*this.itemSize+1]=e,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,e){return this.array[t*this.itemSize+2]=e,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,e){return this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this}setXYZW(t,e,i,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==N&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}}class Ge extends Oe{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class Ve extends Oe{constructor(t,e,i){super(new Uint32Array(t),e,i)}}class He extends Oe{constructor(t,e,i){super(new Float32Array(t),e,i)}}let We=0;const Ye=new $t,Je=new Ce,Ke=new yt,Ze=new bt,je=new bt,qe=new yt;class Xe extends U{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:We++}),this.uuid=V(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new($(t)?Ve:Ge)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(void 0!==i){const e=(new X).getNormalMatrix(t);i.applyNormalMatrix(e),i.needsUpdate=!0}const n=this.attributes.tangent;return void 0!==n&&(n.transformDirection(t),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return Ye.makeRotationFromQuaternion(t),this.applyMatrix4(Ye),this}rotateX(t){return Ye.makeRotationX(t),this.applyMatrix4(Ye),this}rotateY(t){return Ye.makeRotationY(t),this.applyMatrix4(Ye),this}rotateZ(t){return Ye.makeRotationZ(t),this.applyMatrix4(Ye),this}translate(t,e,i){return Ye.makeTranslation(t,e,i),this.applyMatrix4(Ye),this}scale(t,e,i){return Ye.makeScale(t,e,i),this.applyMatrix4(Ye),this}lookAt(t){return Je.lookAt(t),Je.updateMatrix(),this.applyMatrix4(Je.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ke).negate(),this.translate(Ke.x,Ke.y,Ke.z),this}setFromPoints(t){const e=[];for(let i=0,n=t.length;i<n;i++){const n=t[i];e.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new He(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new bt);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new yt(-1/0,-1/0,-1/0),new yt(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,i=e.length;t<i;t++){const i=e[t];Ze.setFromBufferAttribute(i),this.morphTargetsRelative?(qe.addVectors(this.boundingBox.min,Ze.min),this.boundingBox.expandByPoint(qe),qe.addVectors(this.boundingBox.max,Ze.max),this.boundingBox.expandByPoint(qe)):(this.boundingBox.expandByPoint(Ze.min),this.boundingBox.expandByPoint(Ze.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Ht);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new yt,1/0);if(t){const i=this.boundingSphere.center;if(Ze.setFromBufferAttribute(t),e)for(let t=0,i=e.length;t<i;t++){const i=e[t];je.setFromBufferAttribute(i),this.morphTargetsRelative?(qe.addVectors(Ze.min,je.min),Ze.expandByPoint(qe),qe.addVectors(Ze.max,je.max),Ze.expandByPoint(qe)):(Ze.expandByPoint(je.min),Ze.expandByPoint(je.max))}Ze.getCenter(i);let n=0;for(let e=0,r=t.count;e<r;e++)qe.fromBufferAttribute(t,e),n=Math.max(n,i.distanceToSquared(qe));if(e)for(let r=0,A=e.length;r<A;r++){const A=e[r],s=this.morphTargetsRelative;for(let e=0,r=A.count;e<r;e++)qe.fromBufferAttribute(A,e),s&&(Ke.fromBufferAttribute(t,e),qe.add(Ke)),n=Math.max(n,i.distanceToSquared(qe))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const i=t.array,n=e.position.array,r=e.normal.array,A=e.uv.array,s=n.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Oe(new Float32Array(4*s),4));const a=this.getAttribute("tangent").array,o=[],l=[];for(let t=0;t<s;t++)o[t]=new yt,l[t]=new yt;const c=new yt,h=new yt,u=new yt,d=new q,p=new q,g=new q,m=new yt,f=new yt;function v(t,e,i){c.fromArray(n,3*t),h.fromArray(n,3*e),u.fromArray(n,3*i),d.fromArray(A,2*t),p.fromArray(A,2*e),g.fromArray(A,2*i),h.sub(c),u.sub(c),p.sub(d),g.sub(d);const r=1/(p.x*g.y-g.x*p.y);isFinite(r)&&(m.copy(h).multiplyScalar(g.y).addScaledVector(u,-p.y).multiplyScalar(r),f.copy(u).multiplyScalar(p.x).addScaledVector(h,-g.x).multiplyScalar(r),o[t].add(m),o[e].add(m),o[i].add(m),l[t].add(f),l[e].add(f),l[i].add(f))}let _=this.groups;0===_.length&&(_=[{start:0,count:i.length}]);for(let t=0,e=_.length;t<e;++t){const e=_[t],n=e.start;for(let t=n,r=n+e.count;t<r;t+=3)v(i[t+0],i[t+1],i[t+2])}const x=new yt,M=new yt,y=new yt,w=new yt;function C(t){y.fromArray(r,3*t),w.copy(y);const e=o[t];x.copy(e),x.sub(y.multiplyScalar(y.dot(e))).normalize(),M.crossVectors(w,e);const i=M.dot(l[t])<0?-1:1;a[4*t]=x.x,a[4*t+1]=x.y,a[4*t+2]=x.z,a[4*t+3]=i}for(let t=0,e=_.length;t<e;++t){const e=_[t],n=e.start;for(let t=n,r=n+e.count;t<r;t+=3)C(i[t+0]),C(i[t+1]),C(i[t+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let i=this.getAttribute("normal");if(void 0===i)i=new Oe(new Float32Array(3*e.count),3),this.setAttribute("normal",i);else for(let t=0,e=i.count;t<e;t++)i.setXYZ(t,0,0,0);const n=new yt,r=new yt,A=new yt,s=new yt,a=new yt,o=new yt,l=new yt,c=new yt;if(t)for(let h=0,u=t.count;h<u;h+=3){const u=t.getX(h+0),d=t.getX(h+1),p=t.getX(h+2);n.fromBufferAttribute(e,u),r.fromBufferAttribute(e,d),A.fromBufferAttribute(e,p),l.subVectors(A,r),c.subVectors(n,r),l.cross(c),s.fromBufferAttribute(i,u),a.fromBufferAttribute(i,d),o.fromBufferAttribute(i,p),s.add(l),a.add(l),o.add(l),i.setXYZ(u,s.x,s.y,s.z),i.setXYZ(d,a.x,a.y,a.z),i.setXYZ(p,o.x,o.y,o.z)}else for(let t=0,s=e.count;t<s;t+=3)n.fromBufferAttribute(e,t+0),r.fromBufferAttribute(e,t+1),A.fromBufferAttribute(e,t+2),l.subVectors(A,r),c.subVectors(n,r),l.cross(c),i.setXYZ(t+0,l.x,l.y,l.z),i.setXYZ(t+1,l.x,l.y,l.z),i.setXYZ(t+2,l.x,l.y,l.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const i=this.attributes;for(const n in i){if(void 0===t.attributes[n])continue;const r=i[n].array,A=t.attributes[n],s=A.array,a=A.itemSize*e,o=Math.min(s.length,r.length-a);for(let t=0,e=a;t<o;t++,e++)r[e]=s[t]}return this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)qe.fromBufferAttribute(t,e),qe.normalize(),t.setXYZ(e,qe.x,qe.y,qe.z)}toNonIndexed(){function t(t,e){const i=t.array,n=t.itemSize,r=t.normalized,A=new i.constructor(e.length*n);let s=0,a=0;for(let r=0,o=e.length;r<o;r++){s=t.isInterleavedBufferAttribute?e[r]*t.data.stride+t.offset:e[r]*n;for(let t=0;t<n;t++)A[a++]=i[s++]}return new Oe(A,n,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Xe,i=this.index.array,n=this.attributes;for(const r in n){const A=t(n[r],i);e.setAttribute(r,A)}const r=this.morphAttributes;for(const n in r){const A=[],s=r[n];for(let e=0,n=s.length;e<n;e++){const n=t(s[e],i);A.push(n)}e.morphAttributes[n]=A}e.morphTargetsRelative=this.morphTargetsRelative;const A=this.groups;for(let t=0,i=A.length;t<i;t++){const i=A[t];e.addGroup(i.start,i.count,i.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const i in e)void 0!==e[i]&&(t[i]=e[i]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const e in i){const n=i[e];t.data.attributes[e]=n.toJSON(t.data)}const n={};let r=!1;for(const e in this.morphAttributes){const i=this.morphAttributes[e],A=[];for(let e=0,n=i.length;e<n;e++){const n=i[e];A.push(n.toJSON(t.data))}A.length>0&&(n[e]=A,r=!0)}r&&(t.data.morphAttributes=n,t.data.morphTargetsRelative=this.morphTargetsRelative);const A=this.groups;A.length>0&&(t.data.groups=JSON.parse(JSON.stringify(A)));const s=this.boundingSphere;return null!==s&&(t.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;null!==i&&this.setIndex(i.clone(e));const n=t.attributes;for(const t in n){const i=n[t];this.setAttribute(t,i.clone(e))}const r=t.morphAttributes;for(const t in r){const i=[],n=r[t];for(let t=0,r=n.length;t<r;t++)i.push(n[t].clone(e));this.morphAttributes[t]=i}this.morphTargetsRelative=t.morphTargetsRelative;const A=t.groups;for(let t=0,e=A.length;t<e;t++){const e=A[t];this.addGroup(e.start,e.count,e.materialIndex)}const s=t.boundingBox;null!==s&&(this.boundingBox=s.clone());const a=t.boundingSphere;return null!==a&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,void 0!==t.parameters&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const $e=new $t,ti=new Xt,ei=new Ht,ii=new yt,ni=new yt,ri=new yt,Ai=new yt,si=new yt,ai=new yt,oi=new yt,li=new yt,ci=new yt,hi=new q,ui=new q,di=new q,pi=new yt,gi=new yt;class mi extends Ce{constructor(t=new Xe,e=new Ue){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const i=t[e[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=i.length;t<e;t++){const e=i[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}raycast(t,e){const i=this.geometry,n=this.material,r=this.matrixWorld;if(void 0===n)return;if(null===i.boundingSphere&&i.computeBoundingSphere(),ei.copy(i.boundingSphere),ei.applyMatrix4(r),!1===t.ray.intersectsSphere(ei))return;if($e.copy(r).invert(),ti.copy(t.ray).applyMatrix4($e),null!==i.boundingBox&&!1===ti.intersectsBox(i.boundingBox))return;let A;const s=i.index,a=i.attributes.position,o=i.morphAttributes.position,l=i.morphTargetsRelative,c=i.attributes.uv,h=i.attributes.uv2,u=i.groups,d=i.drawRange;if(null!==s)if(Array.isArray(n))for(let i=0,r=u.length;i<r;i++){const r=u[i],p=n[r.materialIndex];for(let i=Math.max(r.start,d.start),n=Math.min(s.count,Math.min(r.start+r.count,d.start+d.count));i<n;i+=3){const n=s.getX(i),u=s.getX(i+1),d=s.getX(i+2);A=fi(this,p,t,ti,a,o,l,c,h,n,u,d),A&&(A.faceIndex=Math.floor(i/3),A.face.materialIndex=r.materialIndex,e.push(A))}}else{for(let i=Math.max(0,d.start),r=Math.min(s.count,d.start+d.count);i<r;i+=3){const r=s.getX(i),u=s.getX(i+1),d=s.getX(i+2);A=fi(this,n,t,ti,a,o,l,c,h,r,u,d),A&&(A.faceIndex=Math.floor(i/3),e.push(A))}}else if(void 0!==a)if(Array.isArray(n))for(let i=0,r=u.length;i<r;i++){const r=u[i],s=n[r.materialIndex];for(let i=Math.max(r.start,d.start),n=Math.min(a.count,Math.min(r.start+r.count,d.start+d.count));i<n;i+=3){A=fi(this,s,t,ti,a,o,l,c,h,i,i+1,i+2),A&&(A.faceIndex=Math.floor(i/3),A.face.materialIndex=r.materialIndex,e.push(A))}}else{for(let i=Math.max(0,d.start),r=Math.min(a.count,d.start+d.count);i<r;i+=3){A=fi(this,n,t,ti,a,o,l,c,h,i,i+1,i+2),A&&(A.faceIndex=Math.floor(i/3),e.push(A))}}}}function fi(t,e,i,n,r,A,s,a,o,l,c,h){ii.fromBufferAttribute(r,l),ni.fromBufferAttribute(r,c),ri.fromBufferAttribute(r,h);const u=t.morphTargetInfluences;if(A&&u){oi.set(0,0,0),li.set(0,0,0),ci.set(0,0,0);for(let t=0,e=A.length;t<e;t++){const e=u[t],i=A[t];0!==e&&(Ai.fromBufferAttribute(i,l),si.fromBufferAttribute(i,c),ai.fromBufferAttribute(i,h),s?(oi.addScaledVector(Ai,e),li.addScaledVector(si,e),ci.addScaledVector(ai,e)):(oi.addScaledVector(Ai.sub(ii),e),li.addScaledVector(si.sub(ni),e),ci.addScaledVector(ai.sub(ri),e)))}ii.add(oi),ni.add(li),ri.add(ci)}t.isSkinnedMesh&&(t.boneTransform(l,ii),t.boneTransform(c,ni),t.boneTransform(h,ri));const d=function(t,e,i,n,r,A,s,a){let o;if(o=1===e.side?n.intersectTriangle(s,A,r,!0,a):n.intersectTriangle(r,A,s,2!==e.side,a),null===o)return null;gi.copy(a),gi.applyMatrix4(t.matrixWorld);const l=i.ray.origin.distanceTo(gi);return l<i.near||l>i.far?null:{distance:l,point:gi.clone(),object:t}}(t,e,i,n,ii,ni,ri,pi);if(d){a&&(hi.fromBufferAttribute(a,l),ui.fromBufferAttribute(a,c),di.fromBufferAttribute(a,h),d.uv=Ne.getUV(pi,ii,ni,ri,hi,ui,di,new q)),o&&(hi.fromBufferAttribute(o,l),ui.fromBufferAttribute(o,c),di.fromBufferAttribute(o,h),d.uv2=Ne.getUV(pi,ii,ni,ri,hi,ui,di,new q));const t={a:l,b:c,c:h,normal:new yt,materialIndex:0};Ne.getNormal(ii,ni,ri,t.normal),d.face=t}return d}class vi extends Xe{constructor(t=1,e=1,i=1,n=1,r=1,A=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:n,heightSegments:r,depthSegments:A};const s=this;n=Math.floor(n),r=Math.floor(r),A=Math.floor(A);const a=[],o=[],l=[],c=[];let h=0,u=0;function d(t,e,i,n,r,A,d,p,g,m,f){const v=A/g,_=d/m,x=A/2,M=d/2,y=p/2,w=g+1,C=m+1;let b=0,I=0;const E=new yt;for(let A=0;A<C;A++){const s=A*_-M;for(let a=0;a<w;a++){const h=a*v-x;E[t]=h*n,E[e]=s*r,E[i]=y,o.push(E.x,E.y,E.z),E[t]=0,E[e]=0,E[i]=p>0?1:-1,l.push(E.x,E.y,E.z),c.push(a/g),c.push(1-A/m),b+=1}}for(let t=0;t<m;t++)for(let e=0;e<g;e++){const i=h+e+w*t,n=h+e+w*(t+1),r=h+(e+1)+w*(t+1),A=h+(e+1)+w*t;a.push(i,n,A),a.push(n,r,A),I+=6}s.addGroup(u,I,f),u+=I,h+=b}d("z","y","x",-1,-1,i,e,t,A,r,0),d("z","y","x",1,-1,i,e,-t,A,r,1),d("x","z","y",1,1,t,i,e,n,A,2),d("x","z","y",1,-1,t,i,-e,n,A,3),d("x","y","z",1,-1,t,e,i,n,r,4),d("x","y","z",-1,-1,t,e,-i,n,r,5),this.setIndex(a),this.setAttribute("position",new He(o,3)),this.setAttribute("normal",new He(l,3)),this.setAttribute("uv",new He(c,2))}static fromJSON(t){return new vi(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function _i(t){const e={};for(const i in t){e[i]={};for(const n in t[i]){const r=t[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?e[i][n]=r.clone():Array.isArray(r)?e[i][n]=r.slice():e[i][n]=r}}return e}function xi(t){const e={};for(let i=0;i<t.length;i++){const n=_i(t[i]);for(const t in n)e[t]=n[t]}return e}const Mi={clone:_i,merge:xi};class yi extends ze{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=_i(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const n=this.uniforms[i].value;n&&n.isTexture?e.uniforms[i]={type:"t",value:n.toJSON(t).uuid}:n&&n.isColor?e.uniforms[i]={type:"c",value:n.getHex()}:n&&n.isVector2?e.uniforms[i]={type:"v2",value:n.toArray()}:n&&n.isVector3?e.uniforms[i]={type:"v3",value:n.toArray()}:n&&n.isVector4?e.uniforms[i]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?e.uniforms[i]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?e.uniforms[i]={type:"m4",value:n.toArray()}:e.uniforms[i]={value:n}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const i={};for(const t in this.extensions)!0===this.extensions[t]&&(i[t]=!0);return Object.keys(i).length>0&&(e.extensions=i),e}}class wi extends Ce{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new $t,this.projectionMatrix=new $t,this.projectionMatrixInverse=new $t}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}class Ci extends wi{constructor(t=50,e=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*G*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*O*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*G*Math.atan(Math.tan(.5*O*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,i,n,r,A){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=A,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*O*this.fov)/this.zoom,i=2*e,n=this.aspect*i,r=-.5*n;const A=this.view;if(null!==this.view&&this.view.enabled){const t=A.fullWidth,s=A.fullHeight;r+=A.offsetX*n/t,e-=A.offsetY*i/s,n*=A.width/t,i*=A.height/s}const s=this.filmOffset;0!==s&&(r+=t*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,e,e-i,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const bi=90;class Ii extends Ce{constructor(t,e,i){if(super(),this.type="CubeCamera",!0!==i.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=i;const n=new Ci(bi,1,t,e);n.layers=this.layers,n.up.set(0,-1,0),n.lookAt(new yt(1,0,0)),this.add(n);const r=new Ci(bi,1,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new yt(-1,0,0)),this.add(r);const A=new Ci(bi,1,t,e);A.layers=this.layers,A.up.set(0,0,1),A.lookAt(new yt(0,1,0)),this.add(A);const s=new Ci(bi,1,t,e);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new yt(0,-1,0)),this.add(s);const a=new Ci(bi,1,t,e);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new yt(0,0,1)),this.add(a);const o=new Ci(bi,1,t,e);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new yt(0,0,-1)),this.add(o)}update(t,e){null===this.parent&&this.updateMatrixWorld();const i=this.renderTarget,[n,r,A,s,a,o]=this.children,l=t.getRenderTarget(),c=t.toneMapping,h=t.xr.enabled;t.toneMapping=0,t.xr.enabled=!1;const u=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,t.setRenderTarget(i,0),t.render(e,n),t.setRenderTarget(i,1),t.render(e,r),t.setRenderTarget(i,2),t.render(e,A),t.setRenderTarget(i,3),t.render(e,s),t.setRenderTarget(i,4),t.render(e,a),i.texture.generateMipmaps=u,t.setRenderTarget(i,5),t.render(e,o),t.setRenderTarget(l),t.toneMapping=c,t.xr.enabled=h,i.texture.needsPMREMUpdate=!0}}class Ei extends ft{constructor(t,e,n,r,A,s,a,o,l,c){super(t=void 0!==t?t:[],e=void 0!==e?e:i,n,r,A,s,a,o,l,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class Si extends _t{constructor(t,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const i={width:t,height:t,depth:1},n=[i,i,i,i,i,i];this.texture=new Ei(n,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:l}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},n=new vi(5,5,5),r=new yi({name:"CubemapFromEquirect",uniforms:_i(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:1,blending:0});r.uniforms.tEquirect.value=e;const A=new mi(n,r),s=e.minFilter;e.minFilter===c&&(e.minFilter=l);return new Ii(1,10,this).update(t,A),e.minFilter=s,A.geometry.dispose(),A.material.dispose(),this}clear(t,e,i,n){const r=t.getRenderTarget();for(let r=0;r<6;r++)t.setRenderTarget(this,r),t.clear(e,i,n);t.setRenderTarget(r)}}const Di=new yt,Ti=new yt,Bi=new X;class Li{constructor(t=new yt(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,i,n){return this.normal.set(t,e,i),this.constant=n,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,i){const n=Di.subVectors(i,e).cross(Ti.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(n,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const i=t.delta(Di),n=this.normal.dot(i);if(0===n)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/n;return r<0||r>1?null:e.copy(i).multiplyScalar(r).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return e<0&&i>0||i<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const i=e||Bi.getNormalMatrix(t),n=this.coplanarPoint(Di).applyMatrix4(t),r=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const Pi=new Ht,Ri=new yt;class Ni{constructor(t=new Li,e=new Li,i=new Li,n=new Li,r=new Li,A=new Li){this.planes=[t,e,i,n,r,A]}set(t,e,i,n,r,A){const s=this.planes;return s[0].copy(t),s[1].copy(e),s[2].copy(i),s[3].copy(n),s[4].copy(r),s[5].copy(A),this}copy(t){const e=this.planes;for(let i=0;i<6;i++)e[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t){const e=this.planes,i=t.elements,n=i[0],r=i[1],A=i[2],s=i[3],a=i[4],o=i[5],l=i[6],c=i[7],h=i[8],u=i[9],d=i[10],p=i[11],g=i[12],m=i[13],f=i[14],v=i[15];return e[0].setComponents(s-n,c-a,p-h,v-g).normalize(),e[1].setComponents(s+n,c+a,p+h,v+g).normalize(),e[2].setComponents(s+r,c+o,p+u,v+m).normalize(),e[3].setComponents(s-r,c-o,p-u,v-m).normalize(),e[4].setComponents(s-A,c-l,p-d,v-f).normalize(),e[5].setComponents(s+A,c+l,p+d,v+f).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),Pi.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Pi)}intersectsSprite(t){return Pi.center.set(0,0,0),Pi.radius=.7071067811865476,Pi.applyMatrix4(t.matrixWorld),this.intersectsSphere(Pi)}intersectsSphere(t){const e=this.planes,i=t.center,n=-t.radius;for(let t=0;t<6;t++){if(e[t].distanceToPoint(i)<n)return!1}return!0}intersectsBox(t){const e=this.planes;for(let i=0;i<6;i++){const n=e[i];if(Ri.x=n.normal.x>0?t.max.x:t.min.x,Ri.y=n.normal.y>0?t.max.y:t.min.y,Ri.z=n.normal.z>0?t.max.z:t.min.z,n.distanceToPoint(Ri)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let i=0;i<6;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Qi(){let t=null,e=!1,i=null,n=null;function r(e,A){i(e,A),n=t.requestAnimationFrame(r)}return{start:function(){!0!==e&&null!==i&&(n=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(t){i=t},setContext:function(e){t=e}}}function zi(t,e){const i=e.isWebGL2,n=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),n.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const i=n.get(e);i&&(t.deleteBuffer(i.buffer),n.delete(e))},update:function(e,r){if(e.isGLBufferAttribute){const t=n.get(e);return void((!t||t.version<e.version)&&n.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const A=n.get(e);void 0===A?n.set(e,function(e,n){const r=e.array,A=e.usage,s=t.createBuffer();let a;if(t.bindBuffer(n,s),t.bufferData(n,r,A),e.onUploadCallback(),r instanceof Float32Array)a=5126;else if(r instanceof Uint16Array)if(e.isFloat16BufferAttribute){if(!i)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");a=5131}else a=5123;else if(r instanceof Int16Array)a=5122;else if(r instanceof Uint32Array)a=5125;else if(r instanceof Int32Array)a=5124;else if(r instanceof Int8Array)a=5120;else if(r instanceof Uint8Array)a=5121;else{if(!(r instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+r);a=5121}return{buffer:s,type:a,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version}}(e,r)):A.version<e.version&&(!function(e,n,r){const A=n.array,s=n.updateRange;t.bindBuffer(r,e),-1===s.count?t.bufferSubData(r,0,A):(i?t.bufferSubData(r,s.offset*A.BYTES_PER_ELEMENT,A,s.offset,s.count):t.bufferSubData(r,s.offset*A.BYTES_PER_ELEMENT,A.subarray(s.offset,s.offset+s.count)),s.count=-1)}(A.buffer,e,r),A.version=e.version)}}}class Ui extends Xe{constructor(t=1,e=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:n};const r=t/2,A=e/2,s=Math.floor(i),a=Math.floor(n),o=s+1,l=a+1,c=t/s,h=e/a,u=[],d=[],p=[],g=[];for(let t=0;t<l;t++){const e=t*h-A;for(let i=0;i<o;i++){const n=i*c-r;d.push(n,-e,0),p.push(0,0,1),g.push(i/s),g.push(1-t/a)}}for(let t=0;t<a;t++)for(let e=0;e<s;e++){const i=e+o*t,n=e+o*(t+1),r=e+1+o*(t+1),A=e+1+o*t;u.push(i,n,A),u.push(n,r,A)}this.setIndex(u),this.setAttribute("position",new He(d,3)),this.setAttribute("normal",new He(p,3)),this.setAttribute("uv",new He(g,2))}static fromJSON(t){return new Ui(t.width,t.height,t.widthSegments,t.heightSegments)}}const ki={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\nvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = mix(F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence);\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",iridescence_fragment:"#ifdef USE_IRIDESCENCE\nconst mat3 XYZ_TO_REC709 = mat3(\n    3.2404542, -0.9692660,  0.0556434,\n   -1.5371385,  1.8760108, -0.2040259,\n   -0.4985314,  0.0415560,  1.0572252\n);\nvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n   vec3 sqrtF0 = sqrt( fresnel0 );\n   return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n}\nvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n   return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n}\nfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n   return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n}\nvec3 evalSensitivity( float OPD, vec3 shift ) {\n   float phase = 2.0 * PI * OPD * 1.0e-9;\n   vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n   vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n   vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n   vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( -pow2( phase ) * var );\n   xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[0] ) * exp( -4.5282e+09 * pow2( phase ) );\n   xyz /= 1.0685e-7;\n   vec3 srgb = XYZ_TO_REC709 * xyz;\n   return srgb;\n}\nvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n   vec3 I;\n   float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n   float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n   float cosTheta2Sq = 1.0 - sinTheta2Sq;\n   if ( cosTheta2Sq < 0.0 ) {\n       return vec3( 1.0 );\n   }\n   float cosTheta2 = sqrt( cosTheta2Sq );\n   float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n   float R12 = F_Schlick( R0, 1.0, cosTheta1 );\n   float R21 = R12;\n   float T121 = 1.0 - R12;\n   float phi12 = 0.0;\n   if ( iridescenceIOR < outsideIOR ) phi12 = PI;\n   float phi21 = PI - phi12;\n   vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );   vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n   vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n   vec3 phi23 = vec3( 0.0 );\n   if ( baseIOR[0] < iridescenceIOR ) phi23[0] = PI;\n   if ( baseIOR[1] < iridescenceIOR ) phi23[1] = PI;\n   if ( baseIOR[2] < iridescenceIOR ) phi23[2] = PI;\n   float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n   vec3 phi = vec3( phi21 ) + phi23;\n   vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n   vec3 r123 = sqrt( R123 );\n   vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n   vec3 C0 = R12 + Rs;\n   I = C0;\n   vec3 Cm = Rs - T121;\n   for ( int m = 1; m <= 2; ++m ) {\n       Cm *= r123;\n       vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n       I += Cm * Sm;\n   }\n   return max( I, vec3( 0.0 ) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n\t#else\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\nfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\nif ( material.iridescenceThickness == 0.0 ) {\n\tmaterial.iridescence = 0.0;\n} else {\n\tmaterial.iridescence = saturate( material.iridescence );\n}\nif ( material.iridescence > 0.0 ) {\n\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n\t#endif\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},Fi={common:{diffuse:{value:new ht(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new X},uv2Transform:{value:new X},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new q(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ht(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ht(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new X}},sprite:{diffuse:{value:new ht(16777215)},opacity:{value:1},center:{value:new q(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new X}}},Oi={basic:{uniforms:xi([Fi.common,Fi.specularmap,Fi.envmap,Fi.aomap,Fi.lightmap,Fi.fog]),vertexShader:ki.meshbasic_vert,fragmentShader:ki.meshbasic_frag},lambert:{uniforms:xi([Fi.common,Fi.specularmap,Fi.envmap,Fi.aomap,Fi.lightmap,Fi.emissivemap,Fi.fog,Fi.lights,{emissive:{value:new ht(0)}}]),vertexShader:ki.meshlambert_vert,fragmentShader:ki.meshlambert_frag},phong:{uniforms:xi([Fi.common,Fi.specularmap,Fi.envmap,Fi.aomap,Fi.lightmap,Fi.emissivemap,Fi.bumpmap,Fi.normalmap,Fi.displacementmap,Fi.fog,Fi.lights,{emissive:{value:new ht(0)},specular:{value:new ht(1118481)},shininess:{value:30}}]),vertexShader:ki.meshphong_vert,fragmentShader:ki.meshphong_frag},standard:{uniforms:xi([Fi.common,Fi.envmap,Fi.aomap,Fi.lightmap,Fi.emissivemap,Fi.bumpmap,Fi.normalmap,Fi.displacementmap,Fi.roughnessmap,Fi.metalnessmap,Fi.fog,Fi.lights,{emissive:{value:new ht(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ki.meshphysical_vert,fragmentShader:ki.meshphysical_frag},toon:{uniforms:xi([Fi.common,Fi.aomap,Fi.lightmap,Fi.emissivemap,Fi.bumpmap,Fi.normalmap,Fi.displacementmap,Fi.gradientmap,Fi.fog,Fi.lights,{emissive:{value:new ht(0)}}]),vertexShader:ki.meshtoon_vert,fragmentShader:ki.meshtoon_frag},matcap:{uniforms:xi([Fi.common,Fi.bumpmap,Fi.normalmap,Fi.displacementmap,Fi.fog,{matcap:{value:null}}]),vertexShader:ki.meshmatcap_vert,fragmentShader:ki.meshmatcap_frag},points:{uniforms:xi([Fi.points,Fi.fog]),vertexShader:ki.points_vert,fragmentShader:ki.points_frag},dashed:{uniforms:xi([Fi.common,Fi.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ki.linedashed_vert,fragmentShader:ki.linedashed_frag},depth:{uniforms:xi([Fi.common,Fi.displacementmap]),vertexShader:ki.depth_vert,fragmentShader:ki.depth_frag},normal:{uniforms:xi([Fi.common,Fi.bumpmap,Fi.normalmap,Fi.displacementmap,{opacity:{value:1}}]),vertexShader:ki.meshnormal_vert,fragmentShader:ki.meshnormal_frag},sprite:{uniforms:xi([Fi.sprite,Fi.fog]),vertexShader:ki.sprite_vert,fragmentShader:ki.sprite_frag},background:{uniforms:{uvTransform:{value:new X},t2D:{value:null}},vertexShader:ki.background_vert,fragmentShader:ki.background_frag},cube:{uniforms:xi([Fi.envmap,{opacity:{value:1}}]),vertexShader:ki.cube_vert,fragmentShader:ki.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ki.equirect_vert,fragmentShader:ki.equirect_frag},distanceRGBA:{uniforms:xi([Fi.common,Fi.displacementmap,{referencePosition:{value:new yt},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ki.distanceRGBA_vert,fragmentShader:ki.distanceRGBA_frag},shadow:{uniforms:xi([Fi.lights,Fi.fog,{color:{value:new ht(0)},opacity:{value:1}}]),vertexShader:ki.shadow_vert,fragmentShader:ki.shadow_frag}};function Gi(t,e,i,n,A,s){const a=new ht(0);let o,l,c=!0===A?0:1,h=null,u=0,d=null;function p(t,e){i.buffers.color.setClear(t.r,t.g,t.b,e,s)}return{getClearColor:function(){return a},setClearColor:function(t,e=1){a.set(t),c=e,p(a,c)},getClearAlpha:function(){return c},setClearAlpha:function(t){c=t,p(a,c)},render:function(i,A){let s=!1,g=!0===A.isScene?A.background:null;g&&g.isTexture&&(g=e.get(g));const m=t.xr,f=m.getSession&&m.getSession();f&&"additive"===f.environmentBlendMode&&(g=null),null===g?p(a,c):g&&g.isColor&&(p(g,1),s=!0),(t.autoClear||s)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),g&&(g.isCubeTexture||g.mapping===r)?(void 0===l&&(l=new mi(new vi(1,1,1),new yi({name:"BackgroundCubeMaterial",uniforms:_i(Oi.cube.uniforms),vertexShader:Oi.cube.vertexShader,fragmentShader:Oi.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(t,e,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(l)),l.material.uniforms.envMap.value=g,l.material.uniforms.flipEnvMap.value=g.isCubeTexture&&!1===g.isRenderTargetTexture?-1:1,h===g&&u===g.version&&d===t.toneMapping||(l.material.needsUpdate=!0,h=g,u=g.version,d=t.toneMapping),l.layers.enableAll(),i.unshift(l,l.geometry,l.material,0,0,null)):g&&g.isTexture&&(void 0===o&&(o=new mi(new Ui(2,2),new yi({name:"BackgroundMaterial",uniforms:_i(Oi.background.uniforms),vertexShader:Oi.background.vertexShader,fragmentShader:Oi.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(o)),o.material.uniforms.t2D.value=g,!0===g.matrixAutoUpdate&&g.updateMatrix(),o.material.uniforms.uvTransform.value.copy(g.matrix),h===g&&u===g.version&&d===t.toneMapping||(o.material.needsUpdate=!0,h=g,u=g.version,d=t.toneMapping),o.layers.enableAll(),i.unshift(o,o.geometry,o.material,0,0,null))}}}function Vi(t,e,i,n){const r=t.getParameter(34921),A=n.isWebGL2?null:e.get("OES_vertex_array_object"),s=n.isWebGL2||null!==A,a={},o=d(null);let l=o,c=!1;function h(e){return n.isWebGL2?t.bindVertexArray(e):A.bindVertexArrayOES(e)}function u(e){return n.isWebGL2?t.deleteVertexArray(e):A.deleteVertexArrayOES(e)}function d(t){const e=[],i=[],n=[];for(let t=0;t<r;t++)e[t]=0,i[t]=0,n[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:i,attributeDivisors:n,object:t,attributes:{},index:null}}function p(){const t=l.newAttributes;for(let e=0,i=t.length;e<i;e++)t[e]=0}function g(t){m(t,0)}function m(i,r){const A=l.newAttributes,s=l.enabledAttributes,a=l.attributeDivisors;if(A[i]=1,0===s[i]&&(t.enableVertexAttribArray(i),s[i]=1),a[i]!==r){(n.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](i,r),a[i]=r}}function f(){const e=l.newAttributes,i=l.enabledAttributes;for(let n=0,r=i.length;n<r;n++)i[n]!==e[n]&&(t.disableVertexAttribArray(n),i[n]=0)}function v(e,i,r,A,s,a){!0!==n.isWebGL2||5124!==r&&5125!==r?t.vertexAttribPointer(e,i,r,A,s,a):t.vertexAttribIPointer(e,i,r,s,a)}function _(){x(),c=!0,l!==o&&(l=o,h(l.object))}function x(){o.geometry=null,o.program=null,o.wireframe=!1}return{setup:function(r,o,u,_,x){let M=!1;if(s){const e=function(e,i,r){const s=!0===r.wireframe;let o=a[e.id];void 0===o&&(o={},a[e.id]=o);let l=o[i.id];void 0===l&&(l={},o[i.id]=l);let c=l[s];void 0===c&&(c=d(n.isWebGL2?t.createVertexArray():A.createVertexArrayOES()),l[s]=c);return c}(_,u,o);l!==e&&(l=e,h(l.object)),M=function(t,e,i,n){const r=l.attributes,A=e.attributes;let s=0;const a=i.getAttributes();for(const e in a){if(a[e].location>=0){const i=r[e];let n=A[e];if(void 0===n&&("instanceMatrix"===e&&t.instanceMatrix&&(n=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(n=t.instanceColor)),void 0===i)return!0;if(i.attribute!==n)return!0;if(n&&i.data!==n.data)return!0;s++}}return l.attributesNum!==s||l.index!==n}(r,_,u,x),M&&function(t,e,i,n){const r={},A=e.attributes;let s=0;const a=i.getAttributes();for(const e in a){if(a[e].location>=0){let i=A[e];void 0===i&&("instanceMatrix"===e&&t.instanceMatrix&&(i=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(i=t.instanceColor));const n={};n.attribute=i,i&&i.data&&(n.data=i.data),r[e]=n,s++}}l.attributes=r,l.attributesNum=s,l.index=n}(r,_,u,x)}else{const t=!0===o.wireframe;l.geometry===_.id&&l.program===u.id&&l.wireframe===t||(l.geometry=_.id,l.program=u.id,l.wireframe=t,M=!0)}null!==x&&i.update(x,34963),(M||c)&&(c=!1,function(r,A,s,a){if(!1===n.isWebGL2&&(r.isInstancedMesh||a.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;p();const o=a.attributes,l=s.getAttributes(),c=A.defaultAttributeValues;for(const e in l){const n=l[e];if(n.location>=0){let A=o[e];if(void 0===A&&("instanceMatrix"===e&&r.instanceMatrix&&(A=r.instanceMatrix),"instanceColor"===e&&r.instanceColor&&(A=r.instanceColor)),void 0!==A){const e=A.normalized,s=A.itemSize,o=i.get(A);if(void 0===o)continue;const l=o.buffer,c=o.type,h=o.bytesPerElement;if(A.isInterleavedBufferAttribute){const i=A.data,o=i.stride,u=A.offset;if(i.isInstancedInterleavedBuffer){for(let t=0;t<n.locationSize;t++)m(n.location+t,i.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===a._maxInstanceCount&&(a._maxInstanceCount=i.meshPerAttribute*i.count)}else for(let t=0;t<n.locationSize;t++)g(n.location+t);t.bindBuffer(34962,l);for(let t=0;t<n.locationSize;t++)v(n.location+t,s/n.locationSize,c,e,o*h,(u+s/n.locationSize*t)*h)}else{if(A.isInstancedBufferAttribute){for(let t=0;t<n.locationSize;t++)m(n.location+t,A.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===a._maxInstanceCount&&(a._maxInstanceCount=A.meshPerAttribute*A.count)}else for(let t=0;t<n.locationSize;t++)g(n.location+t);t.bindBuffer(34962,l);for(let t=0;t<n.locationSize;t++)v(n.location+t,s/n.locationSize,c,e,s*h,s/n.locationSize*t*h)}}else if(void 0!==c){const i=c[e];if(void 0!==i)switch(i.length){case 2:t.vertexAttrib2fv(n.location,i);break;case 3:t.vertexAttrib3fv(n.location,i);break;case 4:t.vertexAttrib4fv(n.location,i);break;default:t.vertexAttrib1fv(n.location,i)}}}}f()}(r,o,u,_),null!==x&&t.bindBuffer(34963,i.get(x).buffer))},reset:_,resetDefaultState:x,dispose:function(){_();for(const t in a){const e=a[t];for(const t in e){const i=e[t];for(const t in i)u(i[t].object),delete i[t];delete e[t]}delete a[t]}},releaseStatesOfGeometry:function(t){if(void 0===a[t.id])return;const e=a[t.id];for(const t in e){const i=e[t];for(const t in i)u(i[t].object),delete i[t];delete e[t]}delete a[t.id]},releaseStatesOfProgram:function(t){for(const e in a){const i=a[e];if(void 0===i[t.id])continue;const n=i[t.id];for(const t in n)u(n[t].object),delete n[t];delete i[t.id]}},initAttributes:p,enableAttribute:g,disableUnusedAttributes:f}}function Hi(t,e,i,n){const r=n.isWebGL2;let A;this.setMode=function(t){A=t},this.render=function(e,n){t.drawArrays(A,e,n),i.update(n,A,1)},this.renderInstances=function(n,s,a){if(0===a)return;let o,l;if(r)o=t,l="drawArraysInstanced";else if(o=e.get("ANGLE_instanced_arrays"),l="drawArraysInstancedANGLE",null===o)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");o[l](A,n,s,a),i.update(s,A,a)}}function Wi(t,e,i){let n;function r(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const A="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let s=void 0!==i.precision?i.precision:"highp";const a=r(s);a!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",a,"instead."),s=a);const o=A||e.has("WEBGL_draw_buffers"),l=!0===i.logarithmicDepthBuffer,c=t.getParameter(34930),h=t.getParameter(35660),u=t.getParameter(3379),d=t.getParameter(34076),p=t.getParameter(34921),g=t.getParameter(36347),m=t.getParameter(36348),f=t.getParameter(36349),v=h>0,_=A||e.has("OES_texture_float");return{isWebGL2:A,drawBuffers:o,getMaxAnisotropy:function(){if(void 0!==n)return n;if(!0===e.has("EXT_texture_filter_anisotropic")){const i=e.get("EXT_texture_filter_anisotropic");n=t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n},getMaxPrecision:r,precision:s,logarithmicDepthBuffer:l,maxTextures:c,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:g,maxVaryings:m,maxFragmentUniforms:f,vertexTextures:v,floatFragmentTextures:_,floatVertexTextures:v&&_,maxSamples:A?t.getParameter(36183):0}}function Yi(t){const e=this;let i=null,n=0,r=!1,A=!1;const s=new Li,a=new X,o={value:null,needsUpdate:!1};function l(){o.value!==i&&(o.value=i,o.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function c(t,i,n,r){const A=null!==t?t.length:0;let l=null;if(0!==A){if(l=o.value,!0!==r||null===l){const e=n+4*A,r=i.matrixWorldInverse;a.getNormalMatrix(r),(null===l||l.length<e)&&(l=new Float32Array(e));for(let e=0,i=n;e!==A;++e,i+=4)s.copy(t[e]).applyMatrix4(r,a),s.normal.toArray(l,i),l[i+3]=s.constant}o.value=l,o.needsUpdate=!0}return e.numPlanes=A,e.numIntersection=0,l}this.uniform=o,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,A){const s=0!==t.length||e||0!==n||r;return r=e,i=c(t,A,0),n=t.length,s},this.beginShadows=function(){A=!0,c(null)},this.endShadows=function(){A=!1,l()},this.setState=function(e,s,a){const h=e.clippingPlanes,u=e.clipIntersection,d=e.clipShadows,p=t.get(e);if(!r||null===h||0===h.length||A&&!d)A?c(null):l();else{const t=A?0:n,e=4*t;let r=p.clippingState||null;o.value=r,r=c(h,s,e,a);for(let t=0;t!==e;++t)r[t]=i[t];p.clippingState=r,this.numIntersection=u?this.numPlanes:0,this.numPlanes+=t}}}function Ji(t){let e=new WeakMap;function r(t,e){return 303===e?t.mapping=i:304===e&&(t.mapping=n),t}function A(t){const i=t.target;i.removeEventListener("dispose",A);const n=e.get(i);void 0!==n&&(e.delete(i),n.dispose())}return{get:function(i){if(i&&i.isTexture&&!1===i.isRenderTargetTexture){const n=i.mapping;if(303===n||304===n){if(e.has(i)){return r(e.get(i).texture,i.mapping)}{const n=i.image;if(n&&n.height>0){const s=new Si(n.height/2);return s.fromEquirectangularTexture(t,i),e.set(i,s),i.addEventListener("dispose",A),r(s.texture,i.mapping)}return null}}}return i},dispose:function(){e=new WeakMap}}}Oi.physical={uniforms:xi([Oi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new q(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new ht(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new q},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new ht(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new ht(1,1,1)},specularColorMap:{value:null}}]),vertexShader:ki.meshphysical_vert,fragmentShader:ki.meshphysical_frag};class Ki extends wi{constructor(t=-1,e=1,i=1,n=-1,r=.1,A=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=i,this.bottom=n,this.near=r,this.far=A,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,i,n,r,A){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=A,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let r=i-t,A=i+t,s=n+e,a=n-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=t*this.view.offsetX,A=r+t*this.view.width,s-=e*this.view.offsetY,a=s-e*this.view.height}this.projectionMatrix.makeOrthographic(r,A,s,a,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}const Zi=[.125,.215,.35,.446,.526,.582],ji=20,qi=new Ki,Xi=new ht;let $i=null;const tn=(1+Math.sqrt(5))/2,en=1/tn,nn=[new yt(1,1,1),new yt(-1,1,1),new yt(1,1,-1),new yt(-1,1,-1),new yt(0,tn,en),new yt(0,tn,-en),new yt(en,0,tn),new yt(-en,0,tn),new yt(tn,en,0),new yt(-tn,en,0)];class rn{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,i=.1,n=100){$i=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(t,i,n,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=on(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=an(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget($i),t.scissorTest=!1,sn(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===i||t.mapping===n?this._setSize(0===t.image.length?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),$i=this._renderer.getRenderTarget();const r=e||this._allocateTargets();return this._textureToCubeUV(t,r),this._applyPMREM(r),this._cleanup(r),r}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,i={magFilter:l,minFilter:l,generateMipmaps:!1,type:p,format:m,encoding:T,depthBuffer:!1},n=An(t,e,i);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=An(t,e,i);const{_lodMax:n}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(t){const e=[],i=[],n=[];let r=t;const A=t-4+1+Zi.length;for(let s=0;s<A;s++){const A=Math.pow(2,r);i.push(A);let a=1/A;s>t-4?a=Zi[s-t+4-1]:0===s&&(a=0),n.push(a);const o=1/(A-2),l=-o,c=1+o,h=[l,l,c,l,c,c,l,l,c,c,l,c],u=6,d=6,p=3,g=2,m=1,f=new Float32Array(p*d*u),v=new Float32Array(g*d*u),_=new Float32Array(m*d*u);for(let t=0;t<u;t++){const e=t%3*2/3-1,i=t>2?0:-1,n=[e,i,0,e+2/3,i,0,e+2/3,i+1,0,e,i,0,e+2/3,i+1,0,e,i+1,0];f.set(n,p*d*t),v.set(h,g*d*t);const r=[t,t,t,t,t,t];_.set(r,m*d*t)}const x=new Xe;x.setAttribute("position",new Oe(f,p)),x.setAttribute("uv",new Oe(v,g)),x.setAttribute("faceIndex",new Oe(_,m)),e.push(x),r>4&&r--}return{lodPlanes:e,sizeLods:i,sigmas:n}}(n)),this._blurMaterial=function(t,e,i){const n=new Float32Array(ji),r=new yt(0,1,0);return new yi({name:"SphericalGaussianBlur",defines:{n:ji,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/i,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:ln(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}(n,t,e)}return n}_compileMaterial(t){const e=new mi(this._lodPlanes[0],t);this._renderer.compile(e,qi)}_sceneToCubeUV(t,e,i,n){const r=new Ci(90,1,e,i),A=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],a=this._renderer,o=a.autoClear,l=a.toneMapping;a.getClearColor(Xi),a.toneMapping=0,a.autoClear=!1;const c=new Ue({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),h=new mi(new vi,c);let u=!1;const d=t.background;d?d.isColor&&(c.color.copy(d),t.background=null,u=!0):(c.color.copy(Xi),u=!0);for(let e=0;e<6;e++){const i=e%3;0===i?(r.up.set(0,A[e],0),r.lookAt(s[e],0,0)):1===i?(r.up.set(0,0,A[e]),r.lookAt(0,s[e],0)):(r.up.set(0,A[e],0),r.lookAt(0,0,s[e]));const o=this._cubeSize;sn(n,i*o,e>2?o:0,o,o),a.setRenderTarget(n),u&&a.render(h,r),a.render(t,r)}h.geometry.dispose(),h.material.dispose(),a.toneMapping=l,a.autoClear=o,t.background=d}_textureToCubeUV(t,e){const r=this._renderer,A=t.mapping===i||t.mapping===n;A?(null===this._cubemapMaterial&&(this._cubemapMaterial=on()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===t.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=an());const s=A?this._cubemapMaterial:this._equirectMaterial,a=new mi(this._lodPlanes[0],s);s.uniforms.envMap.value=t;const o=this._cubeSize;sn(e,0,0,3*o,2*o),r.setRenderTarget(e),r.render(a,qi)}_applyPMREM(t){const e=this._renderer,i=e.autoClear;e.autoClear=!1;for(let e=1;e<this._lodPlanes.length;e++){const i=Math.sqrt(this._sigmas[e]*this._sigmas[e]-this._sigmas[e-1]*this._sigmas[e-1]),n=nn[(e-1)%nn.length];this._blur(t,e-1,e,i,n)}e.autoClear=i}_blur(t,e,i,n,r){const A=this._pingPongRenderTarget;this._halfBlur(t,A,e,i,n,"latitudinal",r),this._halfBlur(A,t,i,i,n,"longitudinal",r)}_halfBlur(t,e,i,n,r,A,s){const a=this._renderer,o=this._blurMaterial;"latitudinal"!==A&&"longitudinal"!==A&&console.error("blur direction must be either latitudinal or longitudinal!");const l=new mi(this._lodPlanes[n],o),c=o.uniforms,h=this._sizeLods[i]-1,u=isFinite(r)?Math.PI/(2*h):2*Math.PI/39,d=r/u,p=isFinite(r)?1+Math.floor(3*d):ji;p>ji&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${p} samples when the maximum is set to 20`);const g=[];let m=0;for(let t=0;t<ji;++t){const e=t/d,i=Math.exp(-e*e/2);g.push(i),0===t?m+=i:t<p&&(m+=2*i)}for(let t=0;t<g.length;t++)g[t]=g[t]/m;c.envMap.value=t.texture,c.samples.value=p,c.weights.value=g,c.latitudinal.value="latitudinal"===A,s&&(c.poleAxis.value=s);const{_lodMax:f}=this;c.dTheta.value=u,c.mipInt.value=f-i;const v=this._sizeLods[n];sn(e,3*v*(n>f-4?n-f+4:0),4*(this._cubeSize-v),3*v,2*v),a.setRenderTarget(e),a.render(l,qi)}}function An(t,e,i){const n=new _t(t,e,i);return n.texture.mapping=r,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function sn(t,e,i,n,r){t.viewport.set(e,i,n,r),t.scissor.set(e,i,n,r)}function an(){return new yi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:ln(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function on(){return new yi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:ln(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function ln(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function cn(t){let e=new WeakMap,r=null;function A(t){const i=t.target;i.removeEventListener("dispose",A);const n=e.get(i);void 0!==n&&(e.delete(i),n.dispose())}return{get:function(s){if(s&&s.isTexture){const a=s.mapping,o=303===a||304===a,l=a===i||a===n;if(o||l){if(s.isRenderTargetTexture&&!0===s.needsPMREMUpdate){s.needsPMREMUpdate=!1;let i=e.get(s);return null===r&&(r=new rn(t)),i=o?r.fromEquirectangular(s,i):r.fromCubemap(s,i),e.set(s,i),i.texture}if(e.has(s))return e.get(s).texture;{const i=s.image;if(o&&i&&i.height>0||l&&i&&function(t){let e=0;const i=6;for(let n=0;n<i;n++)void 0!==t[n]&&e++;return e===i}(i)){null===r&&(r=new rn(t));const i=o?r.fromEquirectangular(s):r.fromCubemap(s);return e.set(s,i),s.addEventListener("dispose",A),i.texture}return null}}}return s},dispose:function(){e=new WeakMap,null!==r&&(r.dispose(),r=null)}}}function hn(t){const e={};function i(i){if(void 0!==e[i])return e[i];let n;switch(i){case"WEBGL_depth_texture":n=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=t.getExtension(i)}return e[i]=n,n}return{has:function(t){return null!==i(t)},init:function(t){t.isWebGL2?i("EXT_color_buffer_float"):(i("WEBGL_depth_texture"),i("OES_texture_float"),i("OES_texture_half_float"),i("OES_texture_half_float_linear"),i("OES_standard_derivatives"),i("OES_element_index_uint"),i("OES_vertex_array_object"),i("ANGLE_instanced_arrays")),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float"),i("WEBGL_multisampled_render_to_texture")},get:function(t){const e=i(t);return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function un(t,e,i,n){const r={},A=new WeakMap;function s(t){const a=t.target;null!==a.index&&e.remove(a.index);for(const t in a.attributes)e.remove(a.attributes[t]);a.removeEventListener("dispose",s),delete r[a.id];const o=A.get(a);o&&(e.remove(o),A.delete(a)),n.releaseStatesOfGeometry(a),!0===a.isInstancedBufferGeometry&&delete a._maxInstanceCount,i.memory.geometries--}function a(t){const i=[],n=t.index,r=t.attributes.position;let s=0;if(null!==n){const t=n.array;s=n.version;for(let e=0,n=t.length;e<n;e+=3){const n=t[e+0],r=t[e+1],A=t[e+2];i.push(n,r,r,A,A,n)}}else{const t=r.array;s=r.version;for(let e=0,n=t.length/3-1;e<n;e+=3){const t=e+0,n=e+1,r=e+2;i.push(t,n,n,r,r,t)}}const a=new($(i)?Ve:Ge)(i,1);a.version=s;const o=A.get(t);o&&e.remove(o),A.set(t,a)}return{get:function(t,e){return!0===r[e.id]||(e.addEventListener("dispose",s),r[e.id]=!0,i.memory.geometries++),e},update:function(t){const i=t.attributes;for(const t in i)e.update(i[t],34962);const n=t.morphAttributes;for(const t in n){const i=n[t];for(let t=0,n=i.length;t<n;t++)e.update(i[t],34962)}},getWireframeAttribute:function(t){const e=A.get(t);if(e){const i=t.index;null!==i&&e.version<i.version&&a(t)}else a(t);return A.get(t)}}}function dn(t,e,i,n){const r=n.isWebGL2;let A,s,a;this.setMode=function(t){A=t},this.setIndex=function(t){s=t.type,a=t.bytesPerElement},this.render=function(e,n){t.drawElements(A,n,s,e*a),i.update(n,A,1)},this.renderInstances=function(n,o,l){if(0===l)return;let c,h;if(r)c=t,h="drawElementsInstanced";else if(c=e.get("ANGLE_instanced_arrays"),h="drawElementsInstancedANGLE",null===c)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[h](A,o,s,n*a,l),i.update(o,A,l)}}function pn(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,i,n){switch(e.calls++,i){case 4:e.triangles+=n*(t/3);break;case 1:e.lines+=n*(t/2);break;case 3:e.lines+=n*(t-1);break;case 2:e.lines+=n*t;break;case 0:e.points+=n*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function gn(t,e){return t[0]-e[0]}function mn(t,e){return Math.abs(e[1])-Math.abs(t[1])}function fn(t,e){let i=1;const n=e.isInterleavedBufferAttribute?e.data.array:e.array;n instanceof Int8Array?i=127:n instanceof Int16Array?i=32767:n instanceof Int32Array?i=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",n),t.divideScalar(i)}function vn(t,e,i){const n={},r=new Float32Array(8),A=new WeakMap,s=new vt,a=[];for(let t=0;t<8;t++)a[t]=[t,0];return{update:function(o,l,c,h){const u=o.morphTargetInfluences;if(!0===e.isWebGL2){const p=l.morphAttributes.position||l.morphAttributes.normal||l.morphAttributes.color,g=void 0!==p?p.length:0;let m=A.get(l);if(void 0===m||m.count!==g){void 0!==m&&m.texture.dispose();const _=void 0!==l.morphAttributes.position,x=void 0!==l.morphAttributes.normal,M=void 0!==l.morphAttributes.color,y=l.morphAttributes.position||[],w=l.morphAttributes.normal||[],C=l.morphAttributes.color||[];let b=0;!0===_&&(b=1),!0===x&&(b=2),!0===M&&(b=3);let I=l.attributes.position.count*b,E=1;I>e.maxTextureSize&&(E=Math.ceil(I/e.maxTextureSize),I=e.maxTextureSize);const S=new Float32Array(I*E*4*g),D=new xt(S,I,E,g);D.type=d,D.needsUpdate=!0;const T=4*b;for(let L=0;L<g;L++){const P=y[L],R=w[L],N=C[L],Q=I*E*4*L;for(let z=0;z<P.count;z++){const U=z*T;!0===_&&(s.fromBufferAttribute(P,z),!0===P.normalized&&fn(s,P),S[Q+U+0]=s.x,S[Q+U+1]=s.y,S[Q+U+2]=s.z,S[Q+U+3]=0),!0===x&&(s.fromBufferAttribute(R,z),!0===R.normalized&&fn(s,R),S[Q+U+4]=s.x,S[Q+U+5]=s.y,S[Q+U+6]=s.z,S[Q+U+7]=0),!0===M&&(s.fromBufferAttribute(N,z),!0===N.normalized&&fn(s,N),S[Q+U+8]=s.x,S[Q+U+9]=s.y,S[Q+U+10]=s.z,S[Q+U+11]=4===N.itemSize?s.w:1)}}function B(){D.dispose(),A.delete(l),l.removeEventListener("dispose",B)}m={count:g,texture:D,size:new q(I,E)},A.set(l,m),l.addEventListener("dispose",B)}let f=0;for(let k=0;k<u.length;k++)f+=u[k];const v=l.morphTargetsRelative?1:1-f;h.getUniforms().setValue(t,"morphTargetBaseInfluence",v),h.getUniforms().setValue(t,"morphTargetInfluences",u),h.getUniforms().setValue(t,"morphTargetsTexture",m.texture,i),h.getUniforms().setValue(t,"morphTargetsTextureSize",m.size)}else{const F=void 0===u?0:u.length;let O=n[l.id];if(void 0===O||O.length!==F){O=[];for(let Y=0;Y<F;Y++)O[Y]=[Y,0];n[l.id]=O}for(let J=0;J<F;J++){const K=O[J];K[0]=J,K[1]=u[J]}O.sort(mn);for(let Z=0;Z<8;Z++)Z<F&&O[Z][1]?(a[Z][0]=O[Z][0],a[Z][1]=O[Z][1]):(a[Z][0]=Number.MAX_SAFE_INTEGER,a[Z][1]=0);a.sort(gn);const G=l.morphAttributes.position,V=l.morphAttributes.normal;let H=0;for(let j=0;j<8;j++){const X=a[j],$=X[0],tt=X[1];$!==Number.MAX_SAFE_INTEGER&&tt?(G&&l.getAttribute("morphTarget"+j)!==G[$]&&l.setAttribute("morphTarget"+j,G[$]),V&&l.getAttribute("morphNormal"+j)!==V[$]&&l.setAttribute("morphNormal"+j,V[$]),r[j]=tt,H+=tt):(G&&!0===l.hasAttribute("morphTarget"+j)&&l.deleteAttribute("morphTarget"+j),V&&!0===l.hasAttribute("morphNormal"+j)&&l.deleteAttribute("morphNormal"+j),r[j]=0)}const W=l.morphTargetsRelative?1:1-H;h.getUniforms().setValue(t,"morphTargetBaseInfluence",W),h.getUniforms().setValue(t,"morphTargetInfluences",r)}}}}function _n(t,e,i,n){let r=new WeakMap;function A(t){const e=t.target;e.removeEventListener("dispose",A),i.remove(e.instanceMatrix),null!==e.instanceColor&&i.remove(e.instanceColor)}return{update:function(t){const s=n.render.frame,a=t.geometry,o=e.get(t,a);return r.get(o)!==s&&(e.update(o),r.set(o,s)),t.isInstancedMesh&&(!1===t.hasEventListener("dispose",A)&&t.addEventListener("dispose",A),i.update(t.instanceMatrix,34962),null!==t.instanceColor&&i.update(t.instanceColor,34962)),o},dispose:function(){r=new WeakMap}}}const xn=new ft,Mn=new xt,yn=new class extends ft{constructor(t=null,e=1,i=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:i,depth:n},this.magFilter=o,this.minFilter=o,this.wrapR=s,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}},wn=new Ei,Cn=[],bn=[],In=new Float32Array(16),En=new Float32Array(9),Sn=new Float32Array(4);function Dn(t,e,i){const n=t[0];if(n<=0||n>0)return t;const r=e*i;let A=Cn[r];if(void 0===A&&(A=new Float32Array(r),Cn[r]=A),0!==e){n.toArray(A,0);for(let n=1,r=0;n!==e;++n)r+=i,t[n].toArray(A,r)}return A}function Tn(t,e){if(t.length!==e.length)return!1;for(let i=0,n=t.length;i<n;i++)if(t[i]!==e[i])return!1;return!0}function Bn(t,e){for(let i=0,n=e.length;i<n;i++)t[i]=e[i]}function Ln(t,e){let i=bn[e];void 0===i&&(i=new Int32Array(e),bn[e]=i);for(let n=0;n!==e;++n)i[n]=t.allocateTextureUnit();return i}function Pn(t,e){const i=this.cache;i[0]!==e&&(t.uniform1f(this.addr,e),i[0]=e)}function Rn(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),i[0]=e.x,i[1]=e.y);else{if(Tn(i,e))return;t.uniform2fv(this.addr,e),Bn(i,e)}}function Nn(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),i[0]=e.x,i[1]=e.y,i[2]=e.z);else if(void 0!==e.r)i[0]===e.r&&i[1]===e.g&&i[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),i[0]=e.r,i[1]=e.g,i[2]=e.b);else{if(Tn(i,e))return;t.uniform3fv(this.addr,e),Bn(i,e)}}function Qn(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z&&i[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=e.w);else{if(Tn(i,e))return;t.uniform4fv(this.addr,e),Bn(i,e)}}function zn(t,e){const i=this.cache,n=e.elements;if(void 0===n){if(Tn(i,e))return;t.uniformMatrix2fv(this.addr,!1,e),Bn(i,e)}else{if(Tn(i,n))return;Sn.set(n),t.uniformMatrix2fv(this.addr,!1,Sn),Bn(i,n)}}function Un(t,e){const i=this.cache,n=e.elements;if(void 0===n){if(Tn(i,e))return;t.uniformMatrix3fv(this.addr,!1,e),Bn(i,e)}else{if(Tn(i,n))return;En.set(n),t.uniformMatrix3fv(this.addr,!1,En),Bn(i,n)}}function kn(t,e){const i=this.cache,n=e.elements;if(void 0===n){if(Tn(i,e))return;t.uniformMatrix4fv(this.addr,!1,e),Bn(i,e)}else{if(Tn(i,n))return;In.set(n),t.uniformMatrix4fv(this.addr,!1,In),Bn(i,n)}}function Fn(t,e){const i=this.cache;i[0]!==e&&(t.uniform1i(this.addr,e),i[0]=e)}function On(t,e){const i=this.cache;Tn(i,e)||(t.uniform2iv(this.addr,e),Bn(i,e))}function Gn(t,e){const i=this.cache;Tn(i,e)||(t.uniform3iv(this.addr,e),Bn(i,e))}function Vn(t,e){const i=this.cache;Tn(i,e)||(t.uniform4iv(this.addr,e),Bn(i,e))}function Hn(t,e){const i=this.cache;i[0]!==e&&(t.uniform1ui(this.addr,e),i[0]=e)}function Wn(t,e){const i=this.cache;Tn(i,e)||(t.uniform2uiv(this.addr,e),Bn(i,e))}function Yn(t,e){const i=this.cache;Tn(i,e)||(t.uniform3uiv(this.addr,e),Bn(i,e))}function Jn(t,e){const i=this.cache;Tn(i,e)||(t.uniform4uiv(this.addr,e),Bn(i,e))}function Kn(t,e,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.setTexture2D(e||xn,r)}function Zn(t,e,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.setTexture3D(e||yn,r)}function jn(t,e,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.setTextureCube(e||wn,r)}function qn(t,e,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.setTexture2DArray(e||Mn,r)}function Xn(t,e){t.uniform1fv(this.addr,e)}function $n(t,e){const i=Dn(e,this.size,2);t.uniform2fv(this.addr,i)}function tr(t,e){const i=Dn(e,this.size,3);t.uniform3fv(this.addr,i)}function er(t,e){const i=Dn(e,this.size,4);t.uniform4fv(this.addr,i)}function ir(t,e){const i=Dn(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,i)}function nr(t,e){const i=Dn(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,i)}function rr(t,e){const i=Dn(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,i)}function Ar(t,e){t.uniform1iv(this.addr,e)}function sr(t,e){t.uniform2iv(this.addr,e)}function ar(t,e){t.uniform3iv(this.addr,e)}function or(t,e){t.uniform4iv(this.addr,e)}function lr(t,e){t.uniform1uiv(this.addr,e)}function cr(t,e){t.uniform2uiv(this.addr,e)}function hr(t,e){t.uniform3uiv(this.addr,e)}function ur(t,e){t.uniform4uiv(this.addr,e)}function dr(t,e,i){const n=e.length,r=Ln(i,n);t.uniform1iv(this.addr,r);for(let t=0;t!==n;++t)i.setTexture2D(e[t]||xn,r[t])}function pr(t,e,i){const n=e.length,r=Ln(i,n);t.uniform1iv(this.addr,r);for(let t=0;t!==n;++t)i.setTexture3D(e[t]||yn,r[t])}function gr(t,e,i){const n=e.length,r=Ln(i,n);t.uniform1iv(this.addr,r);for(let t=0;t!==n;++t)i.setTextureCube(e[t]||wn,r[t])}function mr(t,e,i){const n=e.length,r=Ln(i,n);t.uniform1iv(this.addr,r);for(let t=0;t!==n;++t)i.setTexture2DArray(e[t]||Mn,r[t])}class fr{constructor(t,e,i){this.id=t,this.addr=i,this.cache=[],this.setValue=function(t){switch(t){case 5126:return Pn;case 35664:return Rn;case 35665:return Nn;case 35666:return Qn;case 35674:return zn;case 35675:return Un;case 35676:return kn;case 5124:case 35670:return Fn;case 35667:case 35671:return On;case 35668:case 35672:return Gn;case 35669:case 35673:return Vn;case 5125:return Hn;case 36294:return Wn;case 36295:return Yn;case 36296:return Jn;case 35678:case 36198:case 36298:case 36306:case 35682:return Kn;case 35679:case 36299:case 36307:return Zn;case 35680:case 36300:case 36308:case 36293:return jn;case 36289:case 36303:case 36311:case 36292:return qn}}(e.type)}}class vr{constructor(t,e,i){this.id=t,this.addr=i,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Xn;case 35664:return $n;case 35665:return tr;case 35666:return er;case 35674:return ir;case 35675:return nr;case 35676:return rr;case 5124:case 35670:return Ar;case 35667:case 35671:return sr;case 35668:case 35672:return ar;case 35669:case 35673:return or;case 5125:return lr;case 36294:return cr;case 36295:return hr;case 36296:return ur;case 35678:case 36198:case 36298:case 36306:case 35682:return dr;case 35679:case 36299:case 36307:return pr;case 35680:case 36300:case 36308:case 36293:return gr;case 36289:case 36303:case 36311:case 36292:return mr}}(e.type)}}class _r{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,i){const n=this.seq;for(let r=0,A=n.length;r!==A;++r){const A=n[r];A.setValue(t,e[A.id],i)}}}const xr=/(\w+)(\])?(\[|\.)?/g;function Mr(t,e){t.seq.push(e),t.map[e.id]=e}function yr(t,e,i){const n=t.name,r=n.length;for(xr.lastIndex=0;;){const A=xr.exec(n),s=xr.lastIndex;let a=A[1];const o="]"===A[2],l=A[3];if(o&&(a|=0),void 0===l||"["===l&&s+2===r){Mr(i,void 0===l?new fr(a,t,e):new vr(a,t,e));break}{let t=i.map[a];void 0===t&&(t=new _r(a),Mr(i,t)),i=t}}}class wr{constructor(t,e){this.seq=[],this.map={};const i=t.getProgramParameter(e,35718);for(let n=0;n<i;++n){const i=t.getActiveUniform(e,n);yr(i,t.getUniformLocation(e,i.name),this)}}setValue(t,e,i,n){const r=this.map[e];void 0!==r&&r.setValue(t,i,n)}setOptional(t,e,i){const n=e[i];void 0!==n&&this.setValue(t,i,n)}static upload(t,e,i,n){for(let r=0,A=e.length;r!==A;++r){const A=e[r],s=i[A.id];!1!==s.needsUpdate&&A.setValue(t,s.value,n)}}static seqWithValue(t,e){const i=[];for(let n=0,r=t.length;n!==r;++n){const r=t[n];r.id in e&&i.push(r)}return i}}function Cr(t,e,i){const n=t.createShader(e);return t.shaderSource(n,i),t.compileShader(n),n}let br=0;function Ir(t,e,i){const n=t.getShaderParameter(e,35713),r=t.getShaderInfoLog(e).trim();if(n&&""===r)return"";const A=/ERROR: 0:(\d+)/.exec(r);if(A){const n=parseInt(A[1]);return i.toUpperCase()+"\n\n"+r+"\n\n"+function(t,e){const i=t.split("\n"),n=[],r=Math.max(e-6,0),A=Math.min(e+6,i.length);for(let t=r;t<A;t++){const r=t+1;n.push(`${r===e?">":" "} ${r}: ${i[t]}`)}return n.join("\n")}(t.getShaderSource(e),n)}return r}function Er(t,e){const i=function(t){switch(t){case T:return["Linear","( value )"];case B:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+i[0]+i[1]+"; }"}function Sr(t,e){let i;switch(e){case 1:i="Linear";break;case 2:i="Reinhard";break;case 3:i="OptimizedCineon";break;case 4:i="ACESFilmic";break;case 5:i="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),i="Linear"}return"vec3 "+t+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}function Dr(t){return""!==t}function Tr(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Br(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Lr=/^[ \t]*#include +<([\w\d./]+)>/gm;function Pr(t){return t.replace(Lr,Rr)}function Rr(t,e){const i=ki[e];if(void 0===i)throw new Error("Can not resolve #include <"+e+">");return Pr(i)}const Nr=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Qr=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function zr(t){return t.replace(Qr,kr).replace(Nr,Ur)}function Ur(t,e,i,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),kr(t,e,i,n)}function kr(t,e,i,n){let r="";for(let t=parseInt(e);t<parseInt(i);t++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return r}function Fr(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function Or(t,e,A,s){const a=t.getContext(),o=A.defines;let l=A.vertexShader,c=A.fragmentShader;const h=function(t){let e="SHADOWMAP_TYPE_BASIC";return 1===t.shadowMapType?e="SHADOWMAP_TYPE_PCF":2===t.shadowMapType?e="SHADOWMAP_TYPE_PCF_SOFT":3===t.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(A),u=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case i:case n:e="ENVMAP_TYPE_CUBE";break;case r:e="ENVMAP_TYPE_CUBE_UV"}return e}(A),d=function(t){let e="ENVMAP_MODE_REFLECTION";t.envMap&&t.envMapMode===n&&(e="ENVMAP_MODE_REFRACTION");return e}(A),p=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(A),g=function(t){const e=t.envMapCubeUVHeight;if(null===e)return null;const i=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,i),112)),texelHeight:n,maxMip:i}}(A),m=A.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUVHeight||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap||t.transmission)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Dr).join("\n")}(A),f=function(t){const e=[];for(const i in t){const n=t[i];!1!==n&&e.push("#define "+i+" "+n)}return e.join("\n")}(o),v=a.createProgram();let _,x,M=A.glslVersion?"#version "+A.glslVersion+"\n":"";A.isRawShaderMaterial?(_=[f].filter(Dr).join("\n"),_.length>0&&(_+="\n"),x=[m,f].filter(Dr).join("\n"),x.length>0&&(x+="\n")):(_=[Fr(A),"#define SHADER_NAME "+A.shaderName,f,A.instancing?"#define USE_INSTANCING":"",A.instancingColor?"#define USE_INSTANCING_COLOR":"",A.supportsVertexTextures?"#define VERTEX_TEXTURES":"",A.useFog&&A.fog?"#define USE_FOG":"",A.useFog&&A.fogExp2?"#define FOG_EXP2":"",A.map?"#define USE_MAP":"",A.envMap?"#define USE_ENVMAP":"",A.envMap?"#define "+d:"",A.lightMap?"#define USE_LIGHTMAP":"",A.aoMap?"#define USE_AOMAP":"",A.emissiveMap?"#define USE_EMISSIVEMAP":"",A.bumpMap?"#define USE_BUMPMAP":"",A.normalMap?"#define USE_NORMALMAP":"",A.normalMap&&A.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",A.normalMap&&A.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",A.clearcoatMap?"#define USE_CLEARCOATMAP":"",A.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",A.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",A.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",A.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",A.displacementMap&&A.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",A.specularMap?"#define USE_SPECULARMAP":"",A.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",A.specularColorMap?"#define USE_SPECULARCOLORMAP":"",A.roughnessMap?"#define USE_ROUGHNESSMAP":"",A.metalnessMap?"#define USE_METALNESSMAP":"",A.alphaMap?"#define USE_ALPHAMAP":"",A.transmission?"#define USE_TRANSMISSION":"",A.transmissionMap?"#define USE_TRANSMISSIONMAP":"",A.thicknessMap?"#define USE_THICKNESSMAP":"",A.sheenColorMap?"#define USE_SHEENCOLORMAP":"",A.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",A.vertexTangents?"#define USE_TANGENT":"",A.vertexColors?"#define USE_COLOR":"",A.vertexAlphas?"#define USE_COLOR_ALPHA":"",A.vertexUvs?"#define USE_UV":"",A.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",A.flatShading?"#define FLAT_SHADED":"",A.skinning?"#define USE_SKINNING":"",A.morphTargets?"#define USE_MORPHTARGETS":"",A.morphNormals&&!1===A.flatShading?"#define USE_MORPHNORMALS":"",A.morphColors&&A.isWebGL2?"#define USE_MORPHCOLORS":"",A.morphTargetsCount>0&&A.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",A.morphTargetsCount>0&&A.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+A.morphTextureStride:"",A.morphTargetsCount>0&&A.isWebGL2?"#define MORPHTARGETS_COUNT "+A.morphTargetsCount:"",A.doubleSided?"#define DOUBLE_SIDED":"",A.flipSided?"#define FLIP_SIDED":"",A.shadowMapEnabled?"#define USE_SHADOWMAP":"",A.shadowMapEnabled?"#define "+h:"",A.sizeAttenuation?"#define USE_SIZEATTENUATION":"",A.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",A.logarithmicDepthBuffer&&A.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Dr).join("\n"),x=[m,Fr(A),"#define SHADER_NAME "+A.shaderName,f,A.useFog&&A.fog?"#define USE_FOG":"",A.useFog&&A.fogExp2?"#define FOG_EXP2":"",A.map?"#define USE_MAP":"",A.matcap?"#define USE_MATCAP":"",A.envMap?"#define USE_ENVMAP":"",A.envMap?"#define "+u:"",A.envMap?"#define "+d:"",A.envMap?"#define "+p:"",g?"#define CUBEUV_TEXEL_WIDTH "+g.texelWidth:"",g?"#define CUBEUV_TEXEL_HEIGHT "+g.texelHeight:"",g?"#define CUBEUV_MAX_MIP "+g.maxMip+".0":"",A.lightMap?"#define USE_LIGHTMAP":"",A.aoMap?"#define USE_AOMAP":"",A.emissiveMap?"#define USE_EMISSIVEMAP":"",A.bumpMap?"#define USE_BUMPMAP":"",A.normalMap?"#define USE_NORMALMAP":"",A.normalMap&&A.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",A.normalMap&&A.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",A.clearcoat?"#define USE_CLEARCOAT":"",A.clearcoatMap?"#define USE_CLEARCOATMAP":"",A.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",A.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",A.iridescence?"#define USE_IRIDESCENCE":"",A.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",A.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",A.specularMap?"#define USE_SPECULARMAP":"",A.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",A.specularColorMap?"#define USE_SPECULARCOLORMAP":"",A.roughnessMap?"#define USE_ROUGHNESSMAP":"",A.metalnessMap?"#define USE_METALNESSMAP":"",A.alphaMap?"#define USE_ALPHAMAP":"",A.alphaTest?"#define USE_ALPHATEST":"",A.sheen?"#define USE_SHEEN":"",A.sheenColorMap?"#define USE_SHEENCOLORMAP":"",A.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",A.transmission?"#define USE_TRANSMISSION":"",A.transmissionMap?"#define USE_TRANSMISSIONMAP":"",A.thicknessMap?"#define USE_THICKNESSMAP":"",A.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",A.vertexTangents?"#define USE_TANGENT":"",A.vertexColors||A.instancingColor?"#define USE_COLOR":"",A.vertexAlphas?"#define USE_COLOR_ALPHA":"",A.vertexUvs?"#define USE_UV":"",A.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",A.gradientMap?"#define USE_GRADIENTMAP":"",A.flatShading?"#define FLAT_SHADED":"",A.doubleSided?"#define DOUBLE_SIDED":"",A.flipSided?"#define FLIP_SIDED":"",A.shadowMapEnabled?"#define USE_SHADOWMAP":"",A.shadowMapEnabled?"#define "+h:"",A.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",A.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",A.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",A.logarithmicDepthBuffer&&A.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==A.toneMapping?"#define TONE_MAPPING":"",0!==A.toneMapping?ki.tonemapping_pars_fragment:"",0!==A.toneMapping?Sr("toneMapping",A.toneMapping):"",A.dithering?"#define DITHERING":"",A.opaque?"#define OPAQUE":"",ki.encodings_pars_fragment,Er("linearToOutputTexel",A.outputEncoding),A.useDepthPacking?"#define DEPTH_PACKING "+A.depthPacking:"","\n"].filter(Dr).join("\n")),l=Pr(l),l=Tr(l,A),l=Br(l,A),c=Pr(c),c=Tr(c,A),c=Br(c,A),l=zr(l),c=zr(c),A.isWebGL2&&!0!==A.isRawShaderMaterial&&(M="#version 300 es\n",_=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+_,x=["#define varying in",A.glslVersion===Q?"":"layout(location = 0) out highp vec4 pc_fragColor;",A.glslVersion===Q?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+x);const y=M+x+c,w=Cr(a,35633,M+_+l),C=Cr(a,35632,y);if(a.attachShader(v,w),a.attachShader(v,C),void 0!==A.index0AttributeName?a.bindAttribLocation(v,0,A.index0AttributeName):!0===A.morphTargets&&a.bindAttribLocation(v,0,"position"),a.linkProgram(v),t.debug.checkShaderErrors){const t=a.getProgramInfoLog(v).trim(),e=a.getShaderInfoLog(w).trim(),i=a.getShaderInfoLog(C).trim();let n=!0,r=!0;if(!1===a.getProgramParameter(v,35714)){n=!1;const e=Ir(a,w,"vertex"),i=Ir(a,C,"fragment");console.error("THREE.WebGLProgram: Shader Error "+a.getError()+" - VALIDATE_STATUS "+a.getProgramParameter(v,35715)+"\n\nProgram Info Log: "+t+"\n"+e+"\n"+i)}else""!==t?console.warn("THREE.WebGLProgram: Program Info Log:",t):""!==e&&""!==i||(r=!1);r&&(this.diagnostics={runnable:n,programLog:t,vertexShader:{log:e,prefix:_},fragmentShader:{log:i,prefix:x}})}let b,I;return a.deleteShader(w),a.deleteShader(C),this.getUniforms=function(){return void 0===b&&(b=new wr(a,v)),b},this.getAttributes=function(){return void 0===I&&(I=function(t,e){const i={},n=t.getProgramParameter(e,35721);for(let r=0;r<n;r++){const n=t.getActiveAttrib(e,r),A=n.name;let s=1;35674===n.type&&(s=2),35675===n.type&&(s=3),35676===n.type&&(s=4),i[A]={type:n.type,location:t.getAttribLocation(e,A),locationSize:s}}return i}(a,v)),I},this.destroy=function(){s.releaseStatesOfProgram(this),a.deleteProgram(v),this.program=void 0},this.name=A.shaderName,this.id=br++,this.cacheKey=e,this.usedTimes=1,this.program=v,this.vertexShader=w,this.fragmentShader=C,this}let Gr=0;class Vr{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,i=t.fragmentShader,n=this._getShaderStage(e),r=this._getShaderStage(i),A=this._getShaderCacheForMaterial(t);return!1===A.has(n)&&(A.add(n),n.usedTimes++),!1===A.has(r)&&(A.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const t of e)t.usedTimes--,0===t.usedTimes&&this.shaderCache.delete(t.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;return!1===e.has(t)&&e.set(t,new Set),e.get(t)}_getShaderStage(t){const e=this.shaderCache;if(!1===e.has(t)){const i=new Hr(t);e.set(t,i)}return e.get(t)}}class Hr{constructor(t){this.id=Gr++,this.code=t,this.usedTimes=0}}function Wr(t,e,i,n,A,s,a){const o=new ce,l=new Vr,c=[],h=A.isWebGL2,u=A.logarithmicDepthBuffer,d=A.vertexTextures;let p=A.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(s,o,c,m,f){const v=m.fog,_=f.geometry,x=s.isMeshStandardMaterial?m.environment:null,M=(s.isMeshStandardMaterial?i:e).get(s.envMap||x),y=M&&M.mapping===r?M.image.height:null,w=g[s.type];null!==s.precision&&(p=A.getMaxPrecision(s.precision),p!==s.precision&&console.warn("THREE.WebGLProgram.getParameters:",s.precision,"not supported, using",p,"instead."));const C=_.morphAttributes.position||_.morphAttributes.normal||_.morphAttributes.color,b=void 0!==C?C.length:0;let I,E,S,D,L=0;if(void 0!==_.morphAttributes.position&&(L=1),void 0!==_.morphAttributes.normal&&(L=2),void 0!==_.morphAttributes.color&&(L=3),w){const t=Oi[w];I=t.vertexShader,E=t.fragmentShader}else I=s.vertexShader,E=s.fragmentShader,l.update(s),S=l.getVertexShaderID(s),D=l.getFragmentShaderID(s);const P=t.getRenderTarget(),R=s.alphaTest>0,N=s.clearcoat>0,Q=s.iridescence>0;return{isWebGL2:h,shaderID:w,shaderName:s.type,vertexShader:I,fragmentShader:E,defines:s.defines,customVertexShaderID:S,customFragmentShaderID:D,isRawShaderMaterial:!0===s.isRawShaderMaterial,glslVersion:s.glslVersion,precision:p,instancing:!0===f.isInstancedMesh,instancingColor:!0===f.isInstancedMesh&&null!==f.instanceColor,supportsVertexTextures:d,outputEncoding:null===P?t.outputEncoding:!0===P.isXRRenderTarget?P.texture.encoding:T,map:!!s.map,matcap:!!s.matcap,envMap:!!M,envMapMode:M&&M.mapping,envMapCubeUVHeight:y,lightMap:!!s.lightMap,aoMap:!!s.aoMap,emissiveMap:!!s.emissiveMap,bumpMap:!!s.bumpMap,normalMap:!!s.normalMap,objectSpaceNormalMap:1===s.normalMapType,tangentSpaceNormalMap:0===s.normalMapType,decodeVideoTexture:!!s.map&&!0===s.map.isVideoTexture&&s.map.encoding===B,clearcoat:N,clearcoatMap:N&&!!s.clearcoatMap,clearcoatRoughnessMap:N&&!!s.clearcoatRoughnessMap,clearcoatNormalMap:N&&!!s.clearcoatNormalMap,iridescence:Q,iridescenceMap:Q&&!!s.iridescenceMap,iridescenceThicknessMap:Q&&!!s.iridescenceThicknessMap,displacementMap:!!s.displacementMap,roughnessMap:!!s.roughnessMap,metalnessMap:!!s.metalnessMap,specularMap:!!s.specularMap,specularIntensityMap:!!s.specularIntensityMap,specularColorMap:!!s.specularColorMap,opaque:!1===s.transparent&&1===s.blending,alphaMap:!!s.alphaMap,alphaTest:R,gradientMap:!!s.gradientMap,sheen:s.sheen>0,sheenColorMap:!!s.sheenColorMap,sheenRoughnessMap:!!s.sheenRoughnessMap,transmission:s.transmission>0,transmissionMap:!!s.transmissionMap,thicknessMap:!!s.thicknessMap,combine:s.combine,vertexTangents:!!s.normalMap&&!!_.attributes.tangent,vertexColors:s.vertexColors,vertexAlphas:!0===s.vertexColors&&!!_.attributes.color&&4===_.attributes.color.itemSize,vertexUvs:!!(s.map||s.bumpMap||s.normalMap||s.specularMap||s.alphaMap||s.emissiveMap||s.roughnessMap||s.metalnessMap||s.clearcoatMap||s.clearcoatRoughnessMap||s.clearcoatNormalMap||s.iridescenceMap||s.iridescenceThicknessMap||s.displacementMap||s.transmissionMap||s.thicknessMap||s.specularIntensityMap||s.specularColorMap||s.sheenColorMap||s.sheenRoughnessMap),uvsVertexOnly:!(s.map||s.bumpMap||s.normalMap||s.specularMap||s.alphaMap||s.emissiveMap||s.roughnessMap||s.metalnessMap||s.clearcoatNormalMap||s.iridescenceMap||s.iridescenceThicknessMap||s.transmission>0||s.transmissionMap||s.thicknessMap||s.specularIntensityMap||s.specularColorMap||s.sheen>0||s.sheenColorMap||s.sheenRoughnessMap||!s.displacementMap),fog:!!v,useFog:!0===s.fog,fogExp2:v&&v.isFogExp2,flatShading:!!s.flatShading,sizeAttenuation:s.sizeAttenuation,logarithmicDepthBuffer:u,skinning:!0===f.isSkinnedMesh,morphTargets:void 0!==_.morphAttributes.position,morphNormals:void 0!==_.morphAttributes.normal,morphColors:void 0!==_.morphAttributes.color,morphTargetsCount:b,morphTextureStride:L,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:s.dithering,shadowMapEnabled:t.shadowMap.enabled&&c.length>0,shadowMapType:t.shadowMap.type,toneMapping:s.toneMapped?t.toneMapping:0,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:s.premultipliedAlpha,doubleSided:2===s.side,flipSided:1===s.side,useDepthPacking:!!s.depthPacking,depthPacking:s.depthPacking||0,index0AttributeName:s.index0AttributeName,extensionDerivatives:s.extensions&&s.extensions.derivatives,extensionFragDepth:s.extensions&&s.extensions.fragDepth,extensionDrawBuffers:s.extensions&&s.extensions.drawBuffers,extensionShaderTextureLOD:s.extensions&&s.extensions.shaderTextureLOD,rendererExtensionFragDepth:h||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:h||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:h||n.has("EXT_shader_texture_lod"),customProgramCacheKey:s.customProgramCacheKey()}},getProgramCacheKey:function(e){const i=[];if(e.shaderID?i.push(e.shaderID):(i.push(e.customVertexShaderID),i.push(e.customFragmentShaderID)),void 0!==e.defines)for(const t in e.defines)i.push(t),i.push(e.defines[t]);return!1===e.isRawShaderMaterial&&(!function(t,e){t.push(e.precision),t.push(e.outputEncoding),t.push(e.envMapMode),t.push(e.envMapCubeUVHeight),t.push(e.combine),t.push(e.vertexUvs),t.push(e.fogExp2),t.push(e.sizeAttenuation),t.push(e.morphTargetsCount),t.push(e.morphAttributeCount),t.push(e.numDirLights),t.push(e.numPointLights),t.push(e.numSpotLights),t.push(e.numHemiLights),t.push(e.numRectAreaLights),t.push(e.numDirLightShadows),t.push(e.numPointLightShadows),t.push(e.numSpotLightShadows),t.push(e.shadowMapType),t.push(e.toneMapping),t.push(e.numClippingPlanes),t.push(e.numClipIntersection),t.push(e.depthPacking)}(i,e),function(t,e){o.disableAll(),e.isWebGL2&&o.enable(0);e.supportsVertexTextures&&o.enable(1);e.instancing&&o.enable(2);e.instancingColor&&o.enable(3);e.map&&o.enable(4);e.matcap&&o.enable(5);e.envMap&&o.enable(6);e.lightMap&&o.enable(7);e.aoMap&&o.enable(8);e.emissiveMap&&o.enable(9);e.bumpMap&&o.enable(10);e.normalMap&&o.enable(11);e.objectSpaceNormalMap&&o.enable(12);e.tangentSpaceNormalMap&&o.enable(13);e.clearcoat&&o.enable(14);e.clearcoatMap&&o.enable(15);e.clearcoatRoughnessMap&&o.enable(16);e.clearcoatNormalMap&&o.enable(17);e.iridescence&&o.enable(18);e.iridescenceMap&&o.enable(19);e.iridescenceThicknessMap&&o.enable(20);e.displacementMap&&o.enable(21);e.specularMap&&o.enable(22);e.roughnessMap&&o.enable(23);e.metalnessMap&&o.enable(24);e.gradientMap&&o.enable(25);e.alphaMap&&o.enable(26);e.alphaTest&&o.enable(27);e.vertexColors&&o.enable(28);e.vertexAlphas&&o.enable(29);e.vertexUvs&&o.enable(30);e.vertexTangents&&o.enable(31);e.uvsVertexOnly&&o.enable(32);e.fog&&o.enable(33);t.push(o.mask),o.disableAll(),e.useFog&&o.enable(0);e.flatShading&&o.enable(1);e.logarithmicDepthBuffer&&o.enable(2);e.skinning&&o.enable(3);e.morphTargets&&o.enable(4);e.morphNormals&&o.enable(5);e.morphColors&&o.enable(6);e.premultipliedAlpha&&o.enable(7);e.shadowMapEnabled&&o.enable(8);e.physicallyCorrectLights&&o.enable(9);e.doubleSided&&o.enable(10);e.flipSided&&o.enable(11);e.useDepthPacking&&o.enable(12);e.dithering&&o.enable(13);e.specularIntensityMap&&o.enable(14);e.specularColorMap&&o.enable(15);e.transmission&&o.enable(16);e.transmissionMap&&o.enable(17);e.thicknessMap&&o.enable(18);e.sheen&&o.enable(19);e.sheenColorMap&&o.enable(20);e.sheenRoughnessMap&&o.enable(21);e.decodeVideoTexture&&o.enable(22);e.opaque&&o.enable(23);t.push(o.mask)}(i,e),i.push(t.outputEncoding)),i.push(e.customProgramCacheKey),i.join()},getUniforms:function(t){const e=g[t.type];let i;if(e){const t=Oi[e];i=Mi.clone(t.uniforms)}else i=t.uniforms;return i},acquireProgram:function(e,i){let n;for(let t=0,e=c.length;t<e;t++){const e=c[t];if(e.cacheKey===i){n=e,++n.usedTimes;break}}return void 0===n&&(n=new Or(t,i,e,s),c.push(n)),n},releaseProgram:function(t){if(0==--t.usedTimes){const e=c.indexOf(t);c[e]=c[c.length-1],c.pop(),t.destroy()}},releaseShaderCache:function(t){l.remove(t)},programs:c,dispose:function(){l.dispose()}}}function Yr(){let t=new WeakMap;return{get:function(e){let i=t.get(e);return void 0===i&&(i={},t.set(e,i)),i},remove:function(e){t.delete(e)},update:function(e,i,n){t.get(e)[i]=n},dispose:function(){t=new WeakMap}}}function Jr(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Kr(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Zr(){const t=[];let e=0;const i=[],n=[],r=[];function A(i,n,r,A,s,a){let o=t[e];return void 0===o?(o={id:i.id,object:i,geometry:n,material:r,groupOrder:A,renderOrder:i.renderOrder,z:s,group:a},t[e]=o):(o.id=i.id,o.object=i,o.geometry=n,o.material=r,o.groupOrder=A,o.renderOrder=i.renderOrder,o.z=s,o.group=a),e++,o}return{opaque:i,transmissive:n,transparent:r,init:function(){e=0,i.length=0,n.length=0,r.length=0},push:function(t,e,s,a,o,l){const c=A(t,e,s,a,o,l);s.transmission>0?n.push(c):!0===s.transparent?r.push(c):i.push(c)},unshift:function(t,e,s,a,o,l){const c=A(t,e,s,a,o,l);s.transmission>0?n.unshift(c):!0===s.transparent?r.unshift(c):i.unshift(c)},finish:function(){for(let i=e,n=t.length;i<n;i++){const e=t[i];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.group=null}},sort:function(t,e){i.length>1&&i.sort(t||Jr),n.length>1&&n.sort(e||Kr),r.length>1&&r.sort(e||Kr)}}}function jr(){let t=new WeakMap;return{get:function(e,i){let n;return!1===t.has(e)?(n=new Zr,t.set(e,[n])):i>=t.get(e).length?(n=new Zr,t.get(e).push(n)):n=t.get(e)[i],n},dispose:function(){t=new WeakMap}}}function qr(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let i;switch(e.type){case"DirectionalLight":i={direction:new yt,color:new ht};break;case"SpotLight":i={position:new yt,direction:new yt,color:new ht,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":i={position:new yt,color:new ht,distance:0,decay:0};break;case"HemisphereLight":i={direction:new yt,skyColor:new ht,groundColor:new ht};break;case"RectAreaLight":i={color:new ht,position:new yt,halfWidth:new yt,halfHeight:new yt}}return t[e.id]=i,i}}}let Xr=0;function $r(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function tA(t,e){const i=new qr,n=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let i;switch(e.type){case"DirectionalLight":case"SpotLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new q};break;case"PointLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new q,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=i,i}}}(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let t=0;t<9;t++)r.probe.push(new yt);const A=new yt,s=new $t,a=new $t;return{setup:function(A,s){let a=0,o=0,l=0;for(let t=0;t<9;t++)r.probe[t].set(0,0,0);let c=0,h=0,u=0,d=0,p=0,g=0,m=0,f=0;A.sort($r);const v=!0!==s?Math.PI:1;for(let t=0,e=A.length;t<e;t++){const e=A[t],s=e.color,_=e.intensity,x=e.distance,M=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)a+=s.r*_*v,o+=s.g*_*v,l+=s.b*_*v;else if(e.isLightProbe)for(let t=0;t<9;t++)r.probe[t].addScaledVector(e.sh.coefficients[t],_);else if(e.isDirectionalLight){const t=i.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*v),e.castShadow){const t=e.shadow,i=n.get(e);i.shadowBias=t.bias,i.shadowNormalBias=t.normalBias,i.shadowRadius=t.radius,i.shadowMapSize=t.mapSize,r.directionalShadow[c]=i,r.directionalShadowMap[c]=M,r.directionalShadowMatrix[c]=e.shadow.matrix,g++}r.directional[c]=t,c++}else if(e.isSpotLight){const t=i.get(e);if(t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(s).multiplyScalar(_*v),t.distance=x,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,e.castShadow){const t=e.shadow,i=n.get(e);i.shadowBias=t.bias,i.shadowNormalBias=t.normalBias,i.shadowRadius=t.radius,i.shadowMapSize=t.mapSize,r.spotShadow[u]=i,r.spotShadowMap[u]=M,r.spotShadowMatrix[u]=e.shadow.matrix,f++}r.spot[u]=t,u++}else if(e.isRectAreaLight){const t=i.get(e);t.color.copy(s).multiplyScalar(_),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),r.rectArea[d]=t,d++}else if(e.isPointLight){const t=i.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*v),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,i=n.get(e);i.shadowBias=t.bias,i.shadowNormalBias=t.normalBias,i.shadowRadius=t.radius,i.shadowMapSize=t.mapSize,i.shadowCameraNear=t.camera.near,i.shadowCameraFar=t.camera.far,r.pointShadow[h]=i,r.pointShadowMap[h]=M,r.pointShadowMatrix[h]=e.shadow.matrix,m++}r.point[h]=t,h++}else if(e.isHemisphereLight){const t=i.get(e);t.skyColor.copy(e.color).multiplyScalar(_*v),t.groundColor.copy(e.groundColor).multiplyScalar(_*v),r.hemi[p]=t,p++}}d>0&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(r.rectAreaLTC1=Fi.LTC_FLOAT_1,r.rectAreaLTC2=Fi.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(r.rectAreaLTC1=Fi.LTC_HALF_1,r.rectAreaLTC2=Fi.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=a,r.ambient[1]=o,r.ambient[2]=l;const _=r.hash;_.directionalLength===c&&_.pointLength===h&&_.spotLength===u&&_.rectAreaLength===d&&_.hemiLength===p&&_.numDirectionalShadows===g&&_.numPointShadows===m&&_.numSpotShadows===f||(r.directional.length=c,r.spot.length=u,r.rectArea.length=d,r.point.length=h,r.hemi.length=p,r.directionalShadow.length=g,r.directionalShadowMap.length=g,r.pointShadow.length=m,r.pointShadowMap.length=m,r.spotShadow.length=f,r.spotShadowMap.length=f,r.directionalShadowMatrix.length=g,r.pointShadowMatrix.length=m,r.spotShadowMatrix.length=f,_.directionalLength=c,_.pointLength=h,_.spotLength=u,_.rectAreaLength=d,_.hemiLength=p,_.numDirectionalShadows=g,_.numPointShadows=m,_.numSpotShadows=f,r.version=Xr++)},setupView:function(t,e){let i=0,n=0,o=0,l=0,c=0;const h=e.matrixWorldInverse;for(let e=0,u=t.length;e<u;e++){const u=t[e];if(u.isDirectionalLight){const t=r.directional[i];t.direction.setFromMatrixPosition(u.matrixWorld),A.setFromMatrixPosition(u.target.matrixWorld),t.direction.sub(A),t.direction.transformDirection(h),i++}else if(u.isSpotLight){const t=r.spot[o];t.position.setFromMatrixPosition(u.matrixWorld),t.position.applyMatrix4(h),t.direction.setFromMatrixPosition(u.matrixWorld),A.setFromMatrixPosition(u.target.matrixWorld),t.direction.sub(A),t.direction.transformDirection(h),o++}else if(u.isRectAreaLight){const t=r.rectArea[l];t.position.setFromMatrixPosition(u.matrixWorld),t.position.applyMatrix4(h),a.identity(),s.copy(u.matrixWorld),s.premultiply(h),a.extractRotation(s),t.halfWidth.set(.5*u.width,0,0),t.halfHeight.set(0,.5*u.height,0),t.halfWidth.applyMatrix4(a),t.halfHeight.applyMatrix4(a),l++}else if(u.isPointLight){const t=r.point[n];t.position.setFromMatrixPosition(u.matrixWorld),t.position.applyMatrix4(h),n++}else if(u.isHemisphereLight){const t=r.hemi[c];t.direction.setFromMatrixPosition(u.matrixWorld),t.direction.transformDirection(h),c++}}},state:r}}function eA(t,e){const i=new tA(t,e),n=[],r=[];return{init:function(){n.length=0,r.length=0},state:{lightsArray:n,shadowsArray:r,lights:i},setupLights:function(t){i.setup(n,t)},setupLightsView:function(t){i.setupView(n,t)},pushLight:function(t){n.push(t)},pushShadow:function(t){r.push(t)}}}function iA(t,e){let i=new WeakMap;return{get:function(n,r=0){let A;return!1===i.has(n)?(A=new eA(t,e),i.set(n,[A])):r>=i.get(n).length?(A=new eA(t,e),i.get(n).push(A)):A=i.get(n)[r],A},dispose:function(){i=new WeakMap}}}class nA extends ze{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class rA extends ze{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new yt,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}function AA(t,e,i){let n=new Ni;const r=new q,A=new q,s=new vt,a=new nA({depthPacking:3201}),l=new rA,c={},h=i.maxTextureSize,u={0:1,1:0,2:2},d=new yi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new q},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),p=d.clone();p.defines.HORIZONTAL_PASS=1;const g=new Xe;g.setAttribute("position",new Oe(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const f=new mi(g,d),v=this;function _(i,n){const r=e.update(f);d.defines.VSM_SAMPLES!==i.blurSamples&&(d.defines.VSM_SAMPLES=i.blurSamples,p.defines.VSM_SAMPLES=i.blurSamples,d.needsUpdate=!0,p.needsUpdate=!0),d.uniforms.shadow_pass.value=i.map.texture,d.uniforms.resolution.value=i.mapSize,d.uniforms.radius.value=i.radius,t.setRenderTarget(i.mapPass),t.clear(),t.renderBufferDirect(n,null,r,d,f,null),p.uniforms.shadow_pass.value=i.mapPass.texture,p.uniforms.resolution.value=i.mapSize,p.uniforms.radius.value=i.radius,t.setRenderTarget(i.map),t.clear(),t.renderBufferDirect(n,null,r,p,f,null)}function x(e,i,n,r,A,s){let o=null;const h=!0===n.isPointLight?e.customDistanceMaterial:e.customDepthMaterial;if(o=void 0!==h?h:!0===n.isPointLight?l:a,t.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length||i.displacementMap&&0!==i.displacementScale||i.alphaMap&&i.alphaTest>0){const t=o.uuid,e=i.uuid;let n=c[t];void 0===n&&(n={},c[t]=n);let r=n[e];void 0===r&&(r=o.clone(),n[e]=r),o=r}return o.visible=i.visible,o.wireframe=i.wireframe,o.side=3===s?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:u[i.side],o.alphaMap=i.alphaMap,o.alphaTest=i.alphaTest,o.clipShadows=i.clipShadows,o.clippingPlanes=i.clippingPlanes,o.clipIntersection=i.clipIntersection,o.displacementMap=i.displacementMap,o.displacementScale=i.displacementScale,o.displacementBias=i.displacementBias,o.wireframeLinewidth=i.wireframeLinewidth,o.linewidth=i.linewidth,!0===n.isPointLight&&!0===o.isMeshDistanceMaterial&&(o.referencePosition.setFromMatrixPosition(n.matrixWorld),o.nearDistance=r,o.farDistance=A),o}function M(i,r,A,s,a){if(!1===i.visible)return;if(i.layers.test(r.layers)&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&3===a)&&(!i.frustumCulled||n.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(A.matrixWorldInverse,i.matrixWorld);const n=e.update(i),r=i.material;if(Array.isArray(r)){const e=n.groups;for(let o=0,l=e.length;o<l;o++){const l=e[o],c=r[l.materialIndex];if(c&&c.visible){const e=x(i,c,s,A.near,A.far,a);t.renderBufferDirect(A,null,n,e,i,l)}}}else if(r.visible){const e=x(i,r,s,A.near,A.far,a);t.renderBufferDirect(A,null,n,e,i,null)}}const o=i.children;for(let t=0,e=o.length;t<e;t++)M(o[t],r,A,s,a)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(e,i,a){if(!1===v.enabled)return;if(!1===v.autoUpdate&&!1===v.needsUpdate)return;if(0===e.length)return;const l=t.getRenderTarget(),c=t.getActiveCubeFace(),u=t.getActiveMipmapLevel(),d=t.state;d.setBlending(0),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let l=0,c=e.length;l<c;l++){const c=e[l],u=c.shadow;if(void 0===u){console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");continue}if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;r.copy(u.mapSize);const p=u.getFrameExtents();if(r.multiply(p),A.copy(u.mapSize),(r.x>h||r.y>h)&&(r.x>h&&(A.x=Math.floor(h/p.x),r.x=A.x*p.x,u.mapSize.x=A.x),r.y>h&&(A.y=Math.floor(h/p.y),r.y=A.y*p.y,u.mapSize.y=A.y)),null!==u.map||u.isPointLightShadow||3!==this.type||(u.map=new _t(r.x,r.y),u.map.texture.name=c.name+".shadowMap",u.mapPass=new _t(r.x,r.y),u.camera.updateProjectionMatrix()),null===u.map){const t={minFilter:o,magFilter:o,format:m};u.map=new _t(r.x,r.y,t),u.map.texture.name=c.name+".shadowMap",u.camera.updateProjectionMatrix()}t.setRenderTarget(u.map),t.clear();const g=u.getViewportCount();for(let t=0;t<g;t++){const e=u.getViewport(t);s.set(A.x*e.x,A.y*e.y,A.x*e.z,A.y*e.w),d.viewport(s),u.updateMatrices(c,t),n=u.getFrustum(),M(i,a,u.camera,c,this.type)}u.isPointLightShadow||3!==this.type||_(u,a),u.needsUpdate=!1}v.needsUpdate=!1,t.setRenderTarget(l,c,u)}}function sA(t,i,n){const r=n.isWebGL2;const A=new function(){let e=!1;const i=new vt;let n=null;const r=new vt(0,0,0,0);return{setMask:function(i){n===i||e||(t.colorMask(i,i,i,i),n=i)},setLocked:function(t){e=t},setClear:function(e,n,A,s,a){!0===a&&(e*=s,n*=s,A*=s),i.set(e,n,A,s),!1===r.equals(i)&&(t.clearColor(e,n,A,s),r.copy(i))},reset:function(){e=!1,n=null,r.set(-1,0,0,0)}}},s=new function(){let e=!1,i=null,n=null,r=null;return{setTest:function(t){t?k(2929):F(2929)},setMask:function(n){i===n||e||(t.depthMask(n),i=n)},setFunc:function(e){if(n!==e){if(e)switch(e){case 0:t.depthFunc(512);break;case 1:t.depthFunc(519);break;case 2:t.depthFunc(513);break;case 3:default:t.depthFunc(515);break;case 4:t.depthFunc(514);break;case 5:t.depthFunc(518);break;case 6:t.depthFunc(516);break;case 7:t.depthFunc(517)}else t.depthFunc(515);n=e}},setLocked:function(t){e=t},setClear:function(e){r!==e&&(t.clearDepth(e),r=e)},reset:function(){e=!1,i=null,n=null,r=null}}},a=new function(){let e=!1,i=null,n=null,r=null,A=null,s=null,a=null,o=null,l=null;return{setTest:function(t){e||(t?k(2960):F(2960))},setMask:function(n){i===n||e||(t.stencilMask(n),i=n)},setFunc:function(e,i,s){n===e&&r===i&&A===s||(t.stencilFunc(e,i,s),n=e,r=i,A=s)},setOp:function(e,i,n){s===e&&a===i&&o===n||(t.stencilOp(e,i,n),s=e,a=i,o=n)},setLocked:function(t){e=t},setClear:function(e){l!==e&&(t.clearStencil(e),l=e)},reset:function(){e=!1,i=null,n=null,r=null,A=null,s=null,a=null,o=null,l=null}}};let o={},l={},c=new WeakMap,h=[],u=null,d=!1,p=null,g=null,m=null,f=null,v=null,_=null,x=null,M=!1,y=null,w=null,C=null,b=null,I=null;const E=t.getParameter(35661);let S=!1,D=0;const T=t.getParameter(7938);-1!==T.indexOf("WebGL")?(D=parseFloat(/^WebGL (\d)/.exec(T)[1]),S=D>=1):-1!==T.indexOf("OpenGL ES")&&(D=parseFloat(/^OpenGL ES (\d)/.exec(T)[1]),S=D>=2);let B=null,L={};const P=t.getParameter(3088),R=t.getParameter(2978),N=(new vt).fromArray(P),Q=(new vt).fromArray(R);function z(e,i,n){const r=new Uint8Array(4),A=t.createTexture();t.bindTexture(e,A),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(let e=0;e<n;e++)t.texImage2D(i+e,0,6408,1,1,0,6408,5121,r);return A}const U={};function k(e){!0!==o[e]&&(t.enable(e),o[e]=!0)}function F(e){!1!==o[e]&&(t.disable(e),o[e]=!1)}U[3553]=z(3553,3553,1),U[34067]=z(34067,34069,6),A.setClear(0,0,0,1),s.setClear(1),a.setClear(0),k(2929),s.setFunc(3),H(!1),W(1),k(2884),V(0);const O={[e]:32774,101:32778,102:32779};if(r)O[103]=32775,O[104]=32776;else{const t=i.get("EXT_blend_minmax");null!==t&&(O[103]=t.MIN_EXT,O[104]=t.MAX_EXT)}const G={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function V(i,n,r,A,s,a,o,l){if(0!==i){if(!1===d&&(k(3042),d=!0),5===i)s=s||n,a=a||r,o=o||A,n===g&&s===v||(t.blendEquationSeparate(O[n],O[s]),g=n,v=s),r===m&&A===f&&a===_&&o===x||(t.blendFuncSeparate(G[r],G[A],G[a],G[o]),m=r,f=A,_=a,x=o),p=i,M=null;else if(i!==p||l!==M){if(g===e&&v===e||(t.blendEquation(32774),g=e,v=e),l)switch(i){case 1:t.blendFuncSeparate(1,771,1,771);break;case 2:t.blendFunc(1,1);break;case 3:t.blendFuncSeparate(0,769,0,1);break;case 4:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",i)}else switch(i){case 1:t.blendFuncSeparate(770,771,1,771);break;case 2:t.blendFunc(770,1);break;case 3:t.blendFuncSeparate(0,769,0,1);break;case 4:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",i)}m=null,f=null,_=null,x=null,p=i,M=l}}else!0===d&&(F(3042),d=!1)}function H(e){y!==e&&(e?t.frontFace(2304):t.frontFace(2305),y=e)}function W(e){0!==e?(k(2884),e!==w&&(1===e?t.cullFace(1029):2===e?t.cullFace(1028):t.cullFace(1032))):F(2884),w=e}function Y(e,i,n){e?(k(32823),b===i&&I===n||(t.polygonOffset(i,n),b=i,I=n)):F(32823)}function J(e){void 0===e&&(e=33984+E-1),B!==e&&(t.activeTexture(e),B=e)}return{buffers:{color:A,depth:s,stencil:a},enable:k,disable:F,bindFramebuffer:function(e,i){return l[e]!==i&&(t.bindFramebuffer(e,i),l[e]=i,r&&(36009===e&&(l[36160]=i),36160===e&&(l[36009]=i)),!0)},drawBuffers:function(e,r){let A=h,s=!1;if(e)if(A=c.get(r),void 0===A&&(A=[],c.set(r,A)),e.isWebGLMultipleRenderTargets){const t=e.texture;if(A.length!==t.length||36064!==A[0]){for(let e=0,i=t.length;e<i;e++)A[e]=36064+e;A.length=t.length,s=!0}}else 36064!==A[0]&&(A[0]=36064,s=!0);else 1029!==A[0]&&(A[0]=1029,s=!0);s&&(n.isWebGL2?t.drawBuffers(A):i.get("WEBGL_draw_buffers").drawBuffersWEBGL(A))},useProgram:function(e){return u!==e&&(t.useProgram(e),u=e,!0)},setBlending:V,setMaterial:function(t,e){2===t.side?F(2884):k(2884);let i=1===t.side;e&&(i=!i),H(i),1===t.blending&&!1===t.transparent?V(0):V(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),s.setFunc(t.depthFunc),s.setTest(t.depthTest),s.setMask(t.depthWrite),A.setMask(t.colorWrite);const n=t.stencilWrite;a.setTest(n),n&&(a.setMask(t.stencilWriteMask),a.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),a.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),Y(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?k(32926):F(32926)},setFlipSided:H,setCullFace:W,setLineWidth:function(e){e!==C&&(S&&t.lineWidth(e),C=e)},setPolygonOffset:Y,setScissorTest:function(t){t?k(3089):F(3089)},activeTexture:J,bindTexture:function(e,i){null===B&&J();let n=L[B];void 0===n&&(n={type:void 0,texture:void 0},L[B]=n),n.type===e&&n.texture===i||(t.bindTexture(e,i||U[e]),n.type=e,n.texture=i)},unbindTexture:function(){const e=L[B];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage2D:function(){try{t.texStorage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage3D:function(){try{t.texStorage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage2D:function(){try{t.texSubImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage3D:function(){try{t.texSubImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage2D:function(){try{t.compressedTexSubImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===N.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),N.copy(e))},viewport:function(e){!1===Q.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),Q.copy(e))},reset:function(){t.disable(3042),t.disable(2884),t.disable(2929),t.disable(32823),t.disable(3089),t.disable(2960),t.disable(32926),t.blendEquation(32774),t.blendFunc(1,0),t.blendFuncSeparate(1,0,1,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(513),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(519,0,4294967295),t.stencilOp(7680,7680,7680),t.clearStencil(0),t.cullFace(1029),t.frontFace(2305),t.polygonOffset(0,0),t.activeTexture(33984),t.bindFramebuffer(36160,null),!0===r&&(t.bindFramebuffer(36009,null),t.bindFramebuffer(36008,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),o={},B=null,L={},l={},c=new WeakMap,h=[],u=null,d=!1,p=null,g=null,m=null,f=null,v=null,_=null,x=null,M=!1,y=null,w=null,C=null,b=null,I=null,N.set(0,0,t.canvas.width,t.canvas.height),Q.set(0,0,t.canvas.width,t.canvas.height),A.reset(),s.reset(),a.reset()}}}function aA(t,e,i,n,r,_,x){const M=r.isWebGL2,y=r.maxTextures,w=r.maxCubemapSize,C=r.maxTextureSize,b=r.maxSamples,I=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,E=/OculusBrowser/g.test(navigator.userAgent),S=new WeakMap;let D;const L=new WeakMap;let P=!1;try{P="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function R(t,e){return P?new OffscreenCanvas(t,e):tt("canvas")}function N(t,e,i,n){let r=1;if((t.width>n||t.height>n)&&(r=n/Math.max(t.width,t.height)),r<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const n=e?Z:Math.floor,A=n(r*t.width),s=n(r*t.height);void 0===D&&(D=R(A,s));const a=i?R(A,s):D;a.width=A,a.height=s;return a.getContext("2d").drawImage(t,0,0,A,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+A+"x"+s+")."),a}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function Q(t){return J(t.width)&&J(t.height)}function U(t,e){return t.generateMipmaps&&e&&t.minFilter!==o&&t.minFilter!==l}function k(e){t.generateMipmap(e)}function F(i,n,r,A,s=!1){if(!1===M)return n;if(null!==i){if(void 0!==t[i])return t[i];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+i+"'")}let a=n;return 6403===n&&(5126===r&&(a=33326),5131===r&&(a=33325),5121===r&&(a=33321)),33319===n&&(5126===r&&(a=33328),5131===r&&(a=33327),5121===r&&(a=33323)),6408===n&&(5126===r&&(a=34836),5131===r&&(a=34842),5121===r&&(a=A===B&&!1===s?35907:32856),32819===r&&(a=32854),32820===r&&(a=32855)),33325!==a&&33326!==a&&33327!==a&&33328!==a&&34842!==a&&34836!==a||e.get("EXT_color_buffer_float"),a}function O(t,e,i){return!0===U(t,i)||t.isFramebufferTexture&&t.minFilter!==o&&t.minFilter!==l?Math.log2(Math.max(e.width,e.height))+1:void 0!==t.mipmaps&&t.mipmaps.length>0?t.mipmaps.length:t.isCompressedTexture&&Array.isArray(t.image)?e.mipmaps.length:1}function G(t){return t===o||1004===t||1005===t?9728:9729}function V(t){const e=t.target;e.removeEventListener("dispose",V),function(t){const e=n.get(t);if(void 0===e.__webglInit)return;const i=t.source,r=L.get(i);if(r){const n=r[e.__cacheKey];n.usedTimes--,0===n.usedTimes&&W(t),0===Object.keys(r).length&&L.delete(i)}n.remove(t)}(e),e.isVideoTexture&&S.delete(e)}function H(e){const i=e.target;i.removeEventListener("dispose",H),function(e){const i=e.texture,r=n.get(e),A=n.get(i);void 0!==A.__webglTexture&&(t.deleteTexture(A.__webglTexture),x.memory.textures--);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(r.__webglFramebuffer[e]),r.__webglDepthbuffer&&t.deleteRenderbuffer(r.__webglDepthbuffer[e]);else{if(t.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&t.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&t.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer)for(let e=0;e<r.__webglColorRenderbuffer.length;e++)r.__webglColorRenderbuffer[e]&&t.deleteRenderbuffer(r.__webglColorRenderbuffer[e]);r.__webglDepthRenderbuffer&&t.deleteRenderbuffer(r.__webglDepthRenderbuffer)}if(e.isWebGLMultipleRenderTargets)for(let e=0,r=i.length;e<r;e++){const r=n.get(i[e]);r.__webglTexture&&(t.deleteTexture(r.__webglTexture),x.memory.textures--),n.remove(i[e])}n.remove(i),n.remove(e)}(i)}function W(e){const i=n.get(e);t.deleteTexture(i.__webglTexture);const r=e.source;delete L.get(r)[i.__cacheKey],x.memory.textures--}let Y=0;function K(t,e){const r=n.get(t);if(t.isVideoTexture&&function(t){const e=x.render.frame;S.get(t)!==e&&(S.set(t,e),t.update())}(t),!1===t.isRenderTargetTexture&&t.version>0&&r.__version!==t.version){const i=t.image;if(null===i)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==i.complete)return void et(r,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}i.activeTexture(33984+e),i.bindTexture(3553,r.__webglTexture)}const j={[A]:10497,[s]:33071,[a]:33648},q={[o]:9728,1004:9984,1005:9986,[l]:9729,1007:9985,[c]:9987};function X(i,A,a){if(a?(t.texParameteri(i,10242,j[A.wrapS]),t.texParameteri(i,10243,j[A.wrapT]),32879!==i&&35866!==i||t.texParameteri(i,32882,j[A.wrapR]),t.texParameteri(i,10240,q[A.magFilter]),t.texParameteri(i,10241,q[A.minFilter])):(t.texParameteri(i,10242,33071),t.texParameteri(i,10243,33071),32879!==i&&35866!==i||t.texParameteri(i,32882,33071),A.wrapS===s&&A.wrapT===s||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(i,10240,G(A.magFilter)),t.texParameteri(i,10241,G(A.minFilter)),A.minFilter!==o&&A.minFilter!==l&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===e.has("EXT_texture_filter_anisotropic")){const s=e.get("EXT_texture_filter_anisotropic");if(A.type===d&&!1===e.has("OES_texture_float_linear"))return;if(!1===M&&A.type===p&&!1===e.has("OES_texture_half_float_linear"))return;(A.anisotropy>1||n.get(A).__currentAnisotropy)&&(t.texParameterf(i,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(A.anisotropy,r.getMaxAnisotropy())),n.get(A).__currentAnisotropy=A.anisotropy)}}function $(e,i){let n=!1;void 0===e.__webglInit&&(e.__webglInit=!0,i.addEventListener("dispose",V));const r=i.source;let A=L.get(r);void 0===A&&(A={},L.set(r,A));const s=function(t){const e=[];return e.push(t.wrapS),e.push(t.wrapT),e.push(t.magFilter),e.push(t.minFilter),e.push(t.anisotropy),e.push(t.internalFormat),e.push(t.format),e.push(t.type),e.push(t.generateMipmaps),e.push(t.premultiplyAlpha),e.push(t.flipY),e.push(t.unpackAlignment),e.push(t.encoding),e.join()}(i);if(s!==e.__cacheKey){void 0===A[s]&&(A[s]={texture:t.createTexture(),usedTimes:0},x.memory.textures++,n=!0),A[s].usedTimes++;const r=A[e.__cacheKey];void 0!==r&&(A[e.__cacheKey].usedTimes--,0===r.usedTimes&&W(i)),e.__cacheKey=s,e.__webglTexture=A[s].texture}return n}function et(e,n,r){let A=3553;n.isDataArrayTexture&&(A=35866),n.isData3DTexture&&(A=32879);const a=$(e,n),c=n.source;if(i.activeTexture(33984+r),i.bindTexture(A,e.__webglTexture),c.version!==c.__currentVersion||!0===a){t.pixelStorei(37440,n.flipY),t.pixelStorei(37441,n.premultiplyAlpha),t.pixelStorei(3317,n.unpackAlignment),t.pixelStorei(37443,0);const e=function(t){return!M&&(t.wrapS!==s||t.wrapT!==s||t.minFilter!==o&&t.minFilter!==l)}(n)&&!1===Q(n.image);let r=N(n.image,e,!1,C);r=at(n,r);const h=Q(r)||M,p=_.convert(n.format,n.encoding);let x,y=_.convert(n.type),w=F(n.internalFormat,p,y,n.encoding,n.isVideoTexture);X(A,n,h);const b=n.mipmaps,I=M&&!0!==n.isVideoTexture,E=void 0===c.__currentVersion||!0===a,S=O(n,r,h);if(n.isDepthTexture)w=6402,M?w=n.type===d?36012:n.type===u?33190:n.type===g?35056:33189:n.type===d&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),n.format===f&&6402===w&&1012!==n.type&&n.type!==u&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=u,y=_.convert(n.type)),n.format===v&&6402===w&&(w=34041,n.type!==g&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=g,y=_.convert(n.type))),E&&(I?i.texStorage2D(3553,1,w,r.width,r.height):i.texImage2D(3553,0,w,r.width,r.height,0,p,y,null));else if(n.isDataTexture)if(b.length>0&&h){I&&E&&i.texStorage2D(3553,S,w,b[0].width,b[0].height);for(let t=0,e=b.length;t<e;t++)x=b[t],I?i.texSubImage2D(3553,t,0,0,x.width,x.height,p,y,x.data):i.texImage2D(3553,t,w,x.width,x.height,0,p,y,x.data);n.generateMipmaps=!1}else I?(E&&i.texStorage2D(3553,S,w,r.width,r.height),i.texSubImage2D(3553,0,0,0,r.width,r.height,p,y,r.data)):i.texImage2D(3553,0,w,r.width,r.height,0,p,y,r.data);else if(n.isCompressedTexture){I&&E&&i.texStorage2D(3553,S,w,b[0].width,b[0].height);for(let t=0,e=b.length;t<e;t++)x=b[t],n.format!==m?null!==p?I?i.compressedTexSubImage2D(3553,t,0,0,x.width,x.height,p,x.data):i.compressedTexImage2D(3553,t,w,x.width,x.height,0,x.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):I?i.texSubImage2D(3553,t,0,0,x.width,x.height,p,y,x.data):i.texImage2D(3553,t,w,x.width,x.height,0,p,y,x.data)}else if(n.isDataArrayTexture)I?(E&&i.texStorage3D(35866,S,w,r.width,r.height,r.depth),i.texSubImage3D(35866,0,0,0,0,r.width,r.height,r.depth,p,y,r.data)):i.texImage3D(35866,0,w,r.width,r.height,r.depth,0,p,y,r.data);else if(n.isData3DTexture)I?(E&&i.texStorage3D(32879,S,w,r.width,r.height,r.depth),i.texSubImage3D(32879,0,0,0,0,r.width,r.height,r.depth,p,y,r.data)):i.texImage3D(32879,0,w,r.width,r.height,r.depth,0,p,y,r.data);else if(n.isFramebufferTexture){if(E)if(I)i.texStorage2D(3553,S,w,r.width,r.height);else{let t=r.width,e=r.height;for(let n=0;n<S;n++)i.texImage2D(3553,n,w,t,e,0,p,y,null),t>>=1,e>>=1}}else if(b.length>0&&h){I&&E&&i.texStorage2D(3553,S,w,b[0].width,b[0].height);for(let t=0,e=b.length;t<e;t++)x=b[t],I?i.texSubImage2D(3553,t,0,0,p,y,x):i.texImage2D(3553,t,w,p,y,x);n.generateMipmaps=!1}else I?(E&&i.texStorage2D(3553,S,w,r.width,r.height),i.texSubImage2D(3553,0,0,0,p,y,r)):i.texImage2D(3553,0,w,p,y,r);U(n,h)&&k(A),c.__currentVersion=c.version,n.onUpdate&&n.onUpdate(n)}e.__version=n.version}function it(e,r,A,s,a){const o=_.convert(A.format,A.encoding),l=_.convert(A.type),c=F(A.internalFormat,o,l,A.encoding);n.get(r).__hasExternalTextures||(32879===a||35866===a?i.texImage3D(a,0,c,r.width,r.height,r.depth,0,o,l,null):i.texImage2D(a,0,c,r.width,r.height,0,o,l,null)),i.bindFramebuffer(36160,e),st(r)?I.framebufferTexture2DMultisampleEXT(36160,s,a,n.get(A).__webglTexture,0,At(r)):t.framebufferTexture2D(36160,s,a,n.get(A).__webglTexture,0),i.bindFramebuffer(36160,null)}function nt(e,i,n){if(t.bindRenderbuffer(36161,e),i.depthBuffer&&!i.stencilBuffer){let r=33189;if(n||st(i)){const e=i.depthTexture;e&&e.isDepthTexture&&(e.type===d?r=36012:e.type===u&&(r=33190));const n=At(i);st(i)?I.renderbufferStorageMultisampleEXT(36161,n,r,i.width,i.height):t.renderbufferStorageMultisample(36161,n,r,i.width,i.height)}else t.renderbufferStorage(36161,r,i.width,i.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(i.depthBuffer&&i.stencilBuffer){const r=At(i);n&&!1===st(i)?t.renderbufferStorageMultisample(36161,r,35056,i.width,i.height):st(i)?I.renderbufferStorageMultisampleEXT(36161,r,35056,i.width,i.height):t.renderbufferStorage(36161,34041,i.width,i.height),t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=!0===i.isWebGLMultipleRenderTargets?i.texture:[i.texture];for(let r=0;r<e.length;r++){const A=e[r],s=_.convert(A.format,A.encoding),a=_.convert(A.type),o=F(A.internalFormat,s,a,A.encoding),l=At(i);n&&!1===st(i)?t.renderbufferStorageMultisample(36161,l,o,i.width,i.height):st(i)?I.renderbufferStorageMultisampleEXT(36161,l,o,i.width,i.height):t.renderbufferStorage(36161,o,i.width,i.height)}}t.bindRenderbuffer(36161,null)}function rt(e){const r=n.get(e),A=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture&&!r.__autoAllocateDepthBuffer){if(A)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(i.bindFramebuffer(36160,e),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");n.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),K(r.depthTexture,0);const A=n.get(r.depthTexture).__webglTexture,s=At(r);if(r.depthTexture.format===f)st(r)?I.framebufferTexture2DMultisampleEXT(36160,36096,3553,A,0,s):t.framebufferTexture2D(36160,36096,3553,A,0);else{if(r.depthTexture.format!==v)throw new Error("Unknown depthTexture format");st(r)?I.framebufferTexture2DMultisampleEXT(36160,33306,3553,A,0,s):t.framebufferTexture2D(36160,33306,3553,A,0)}}(r.__webglFramebuffer,e)}else if(A){r.__webglDepthbuffer=[];for(let n=0;n<6;n++)i.bindFramebuffer(36160,r.__webglFramebuffer[n]),r.__webglDepthbuffer[n]=t.createRenderbuffer(),nt(r.__webglDepthbuffer[n],e,!1)}else i.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=t.createRenderbuffer(),nt(r.__webglDepthbuffer,e,!1);i.bindFramebuffer(36160,null)}function At(t){return Math.min(b,t.samples)}function st(t){const i=n.get(t);return M&&t.samples>0&&!0===e.has("WEBGL_multisampled_render_to_texture")&&!1!==i.__useRenderToTexture}function at(t,i){const n=t.encoding,r=t.format,A=t.type;return!0===t.isCompressedTexture||!0===t.isVideoTexture||t.format===z||n!==T&&(n===B?!1===M?!0===e.has("EXT_sRGB")&&r===m?(t.format=z,t.minFilter=l,t.generateMipmaps=!1):i=dt.sRGBToLinear(i):r===m&&A===h||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",n)),i}this.allocateTextureUnit=function(){const t=Y;return t>=y&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+y),Y+=1,t},this.resetTextureUnits=function(){Y=0},this.setTexture2D=K,this.setTexture2DArray=function(t,e){const r=n.get(t);t.version>0&&r.__version!==t.version?et(r,t,e):(i.activeTexture(33984+e),i.bindTexture(35866,r.__webglTexture))},this.setTexture3D=function(t,e){const r=n.get(t);t.version>0&&r.__version!==t.version?et(r,t,e):(i.activeTexture(33984+e),i.bindTexture(32879,r.__webglTexture))},this.setTextureCube=function(e,r){const A=n.get(e);e.version>0&&A.__version!==e.version?function(e,n,r){if(6!==n.image.length)return;const A=$(e,n),s=n.source;if(i.activeTexture(33984+r),i.bindTexture(34067,e.__webglTexture),s.version!==s.__currentVersion||!0===A){t.pixelStorei(37440,n.flipY),t.pixelStorei(37441,n.premultiplyAlpha),t.pixelStorei(3317,n.unpackAlignment),t.pixelStorei(37443,0);const e=n.isCompressedTexture||n.image[0].isCompressedTexture,r=n.image[0]&&n.image[0].isDataTexture,a=[];for(let t=0;t<6;t++)a[t]=e||r?r?n.image[t].image:n.image[t]:N(n.image[t],!1,!0,w),a[t]=at(n,a[t]);const o=a[0],l=Q(o)||M,c=_.convert(n.format,n.encoding),h=_.convert(n.type),u=F(n.internalFormat,c,h,n.encoding),d=M&&!0!==n.isVideoTexture,p=void 0===s.__currentVersion||!0===A;let g,f=O(n,o,l);if(X(34067,n,l),e){d&&p&&i.texStorage2D(34067,f,u,o.width,o.height);for(let t=0;t<6;t++){g=a[t].mipmaps;for(let e=0;e<g.length;e++){const r=g[e];n.format!==m?null!==c?d?i.compressedTexSubImage2D(34069+t,e,0,0,r.width,r.height,c,r.data):i.compressedTexImage2D(34069+t,e,u,r.width,r.height,0,r.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):d?i.texSubImage2D(34069+t,e,0,0,r.width,r.height,c,h,r.data):i.texImage2D(34069+t,e,u,r.width,r.height,0,c,h,r.data)}}}else{g=n.mipmaps,d&&p&&(g.length>0&&f++,i.texStorage2D(34067,f,u,a[0].width,a[0].height));for(let t=0;t<6;t++)if(r){d?i.texSubImage2D(34069+t,0,0,0,a[t].width,a[t].height,c,h,a[t].data):i.texImage2D(34069+t,0,u,a[t].width,a[t].height,0,c,h,a[t].data);for(let e=0;e<g.length;e++){const n=g[e].image[t].image;d?i.texSubImage2D(34069+t,e+1,0,0,n.width,n.height,c,h,n.data):i.texImage2D(34069+t,e+1,u,n.width,n.height,0,c,h,n.data)}}else{d?i.texSubImage2D(34069+t,0,0,0,c,h,a[t]):i.texImage2D(34069+t,0,u,c,h,a[t]);for(let e=0;e<g.length;e++){const n=g[e];d?i.texSubImage2D(34069+t,e+1,0,0,c,h,n.image[t]):i.texImage2D(34069+t,e+1,u,c,h,n.image[t])}}}U(n,l)&&k(34067),s.__currentVersion=s.version,n.onUpdate&&n.onUpdate(n)}e.__version=n.version}(A,e,r):(i.activeTexture(33984+r),i.bindTexture(34067,A.__webglTexture))},this.rebindTextures=function(t,e,i){const r=n.get(t);void 0!==e&&it(r.__webglFramebuffer,t,t.texture,36064,3553),void 0!==i&&rt(t)},this.setupRenderTarget=function(e){const A=e.texture,s=n.get(e),a=n.get(A);e.addEventListener("dispose",H),!0!==e.isWebGLMultipleRenderTargets&&(void 0===a.__webglTexture&&(a.__webglTexture=t.createTexture()),a.__version=A.version,x.memory.textures++);const o=!0===e.isWebGLCubeRenderTarget,l=!0===e.isWebGLMultipleRenderTargets,c=Q(e)||M;if(o){s.__webglFramebuffer=[];for(let e=0;e<6;e++)s.__webglFramebuffer[e]=t.createFramebuffer()}else{if(s.__webglFramebuffer=t.createFramebuffer(),l)if(r.drawBuffers){const i=e.texture;for(let e=0,r=i.length;e<r;e++){const r=n.get(i[e]);void 0===r.__webglTexture&&(r.__webglTexture=t.createTexture(),x.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(M&&e.samples>0&&!1===st(e)){const n=l?A:[A];s.__webglMultisampledFramebuffer=t.createFramebuffer(),s.__webglColorRenderbuffer=[],i.bindFramebuffer(36160,s.__webglMultisampledFramebuffer);for(let i=0;i<n.length;i++){const r=n[i];s.__webglColorRenderbuffer[i]=t.createRenderbuffer(),t.bindRenderbuffer(36161,s.__webglColorRenderbuffer[i]);const A=_.convert(r.format,r.encoding),a=_.convert(r.type),o=F(r.internalFormat,A,a,r.encoding),l=At(e);t.renderbufferStorageMultisample(36161,l,o,e.width,e.height),t.framebufferRenderbuffer(36160,36064+i,36161,s.__webglColorRenderbuffer[i])}t.bindRenderbuffer(36161,null),e.depthBuffer&&(s.__webglDepthRenderbuffer=t.createRenderbuffer(),nt(s.__webglDepthRenderbuffer,e,!0)),i.bindFramebuffer(36160,null)}}if(o){i.bindTexture(34067,a.__webglTexture),X(34067,A,c);for(let t=0;t<6;t++)it(s.__webglFramebuffer[t],e,A,36064,34069+t);U(A,c)&&k(34067),i.unbindTexture()}else if(l){const t=e.texture;for(let r=0,A=t.length;r<A;r++){const A=t[r],a=n.get(A);i.bindTexture(3553,a.__webglTexture),X(3553,A,c),it(s.__webglFramebuffer,e,A,36064+r,3553),U(A,c)&&k(3553)}i.unbindTexture()}else{let t=3553;(e.isWebGL3DRenderTarget||e.isWebGLArrayRenderTarget)&&(M?t=e.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),i.bindTexture(t,a.__webglTexture),X(t,A,c),it(s.__webglFramebuffer,e,A,36064,t),U(A,c)&&k(t),i.unbindTexture()}e.depthBuffer&&rt(e)},this.updateRenderTargetMipmap=function(t){const e=Q(t)||M,r=!0===t.isWebGLMultipleRenderTargets?t.texture:[t.texture];for(let A=0,s=r.length;A<s;A++){const s=r[A];if(U(s,e)){const e=t.isWebGLCubeRenderTarget?34067:3553,r=n.get(s).__webglTexture;i.bindTexture(e,r),k(e),i.unbindTexture()}}},this.updateMultisampleRenderTarget=function(e){if(M&&e.samples>0&&!1===st(e)){const r=e.isWebGLMultipleRenderTargets?e.texture:[e.texture],A=e.width,s=e.height;let a=16384;const o=[],l=e.stencilBuffer?33306:36096,c=n.get(e),h=!0===e.isWebGLMultipleRenderTargets;if(h)for(let e=0;e<r.length;e++)i.bindFramebuffer(36160,c.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064+e,36161,null),i.bindFramebuffer(36160,c.__webglFramebuffer),t.framebufferTexture2D(36009,36064+e,3553,null,0);i.bindFramebuffer(36008,c.__webglMultisampledFramebuffer),i.bindFramebuffer(36009,c.__webglFramebuffer);for(let i=0;i<r.length;i++){o.push(36064+i),e.depthBuffer&&o.push(l);const u=void 0!==c.__ignoreDepthValues&&c.__ignoreDepthValues;if(!1===u&&(e.depthBuffer&&(a|=256),e.stencilBuffer&&(a|=1024)),h&&t.framebufferRenderbuffer(36008,36064,36161,c.__webglColorRenderbuffer[i]),!0===u&&(t.invalidateFramebuffer(36008,[l]),t.invalidateFramebuffer(36009,[l])),h){const e=n.get(r[i]).__webglTexture;t.framebufferTexture2D(36009,36064,3553,e,0)}t.blitFramebuffer(0,0,A,s,0,0,A,s,a,9728),E&&t.invalidateFramebuffer(36008,o)}if(i.bindFramebuffer(36008,null),i.bindFramebuffer(36009,null),h)for(let e=0;e<r.length;e++){i.bindFramebuffer(36160,c.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064+e,36161,c.__webglColorRenderbuffer[e]);const A=n.get(r[e]).__webglTexture;i.bindFramebuffer(36160,c.__webglFramebuffer),t.framebufferTexture2D(36009,36064+e,3553,A,0)}i.bindFramebuffer(36009,c.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=rt,this.setupFrameBufferTexture=it,this.useMultisampledRTT=st}function oA(t,e,i){const n=i.isWebGL2;return{convert:function(i,r=null){let A;if(i===h)return 5121;if(1017===i)return 32819;if(1018===i)return 32820;if(1010===i)return 5120;if(1011===i)return 5122;if(1012===i)return 5123;if(1013===i)return 5124;if(i===u)return 5125;if(i===d)return 5126;if(i===p)return n?5131:(A=e.get("OES_texture_half_float"),null!==A?A.HALF_FLOAT_OES:null);if(1021===i)return 6406;if(i===m)return 6408;if(1024===i)return 6409;if(1025===i)return 6410;if(i===f)return 6402;if(i===v)return 34041;if(1028===i)return 6403;if(1022===i)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(i===z)return A=e.get("EXT_sRGB"),null!==A?A.SRGB_ALPHA_EXT:null;if(1029===i)return 36244;if(1030===i)return 33319;if(1031===i)return 33320;if(1033===i)return 36249;if(i===_||i===x||i===M||i===y)if(r===B){if(A=e.get("WEBGL_compressed_texture_s3tc_srgb"),null===A)return null;if(i===_)return A.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===x)return A.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===M)return A.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===y)return A.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(A=e.get("WEBGL_compressed_texture_s3tc"),null===A)return null;if(i===_)return A.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===x)return A.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===M)return A.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===y)return A.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===i||35841===i||35842===i||35843===i){if(A=e.get("WEBGL_compressed_texture_pvrtc"),null===A)return null;if(35840===i)return A.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===i)return A.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===i)return A.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===i)return A.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===i)return A=e.get("WEBGL_compressed_texture_etc1"),null!==A?A.COMPRESSED_RGB_ETC1_WEBGL:null;if(37492===i||37496===i){if(A=e.get("WEBGL_compressed_texture_etc"),null===A)return null;if(37492===i)return r===B?A.COMPRESSED_SRGB8_ETC2:A.COMPRESSED_RGB8_ETC2;if(37496===i)return r===B?A.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:A.COMPRESSED_RGBA8_ETC2_EAC}if(37808===i||37809===i||37810===i||37811===i||37812===i||37813===i||37814===i||37815===i||37816===i||37817===i||37818===i||37819===i||37820===i||37821===i){if(A=e.get("WEBGL_compressed_texture_astc"),null===A)return null;if(37808===i)return r===B?A.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:A.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===i)return r===B?A.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:A.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===i)return r===B?A.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:A.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===i)return r===B?A.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:A.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===i)return r===B?A.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:A.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===i)return r===B?A.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:A.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===i)return r===B?A.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:A.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===i)return r===B?A.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:A.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===i)return r===B?A.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:A.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===i)return r===B?A.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:A.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===i)return r===B?A.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:A.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===i)return r===B?A.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:A.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===i)return r===B?A.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:A.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===i)return r===B?A.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:A.COMPRESSED_RGBA_ASTC_12x12_KHR}if(36492===i){if(A=e.get("EXT_texture_compression_bptc"),null===A)return null;if(36492===i)return r===B?A.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:A.COMPRESSED_RGBA_BPTC_UNORM_EXT}return i===g?n?34042:(A=e.get("WEBGL_depth_texture"),null!==A?A.UNSIGNED_INT_24_8_WEBGL:null):void 0!==t[i]?t[i]:null}}}class lA extends Ci{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class cA extends Ce{constructor(){super(),this.isGroup=!0,this.type="Group"}}const hA={type:"move"};class uA{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new cA,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new cA,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new yt,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new yt),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new cA,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new yt,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new yt),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,i){let n=null,r=null,A=null;const s=this._targetRay,a=this._grip,o=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState)if(null!==s&&(n=e.getPose(t.targetRaySpace,i),null!==n&&(s.matrix.fromArray(n.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),n.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(n.linearVelocity)):s.hasLinearVelocity=!1,n.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(n.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(hA))),o&&t.hand){A=!0;for(const n of t.hand.values()){const t=e.getJointPose(n,i);if(void 0===o.joints[n.jointName]){const t=new cA;t.matrixAutoUpdate=!1,t.visible=!1,o.joints[n.jointName]=t,o.add(t)}const r=o.joints[n.jointName];null!==t&&(r.matrix.fromArray(t.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.jointRadius=t.radius),r.visible=null!==t}const n=o.joints["index-finger-tip"],r=o.joints["thumb-tip"],s=n.position.distanceTo(r.position),a=.02,l=.005;o.inputState.pinching&&s>a+l?(o.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!o.inputState.pinching&&s<=a-l&&(o.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==a&&t.gripSpace&&(r=e.getPose(t.gripSpace,i),null!==r&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1));return null!==s&&(s.visible=null!==n),null!==a&&(a.visible=null!==r),null!==o&&(o.visible=null!==A),this}}class dA extends ft{constructor(t,e,i,n,r,A,s,a,l,c){if((c=void 0!==c?c:f)!==f&&c!==v)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&c===f&&(i=u),void 0===i&&c===v&&(i=g),super(null,n,r,A,s,a,c,i,l),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=void 0!==s?s:o,this.minFilter=void 0!==a?a:o,this.flipY=!1,this.generateMipmaps=!1}}class pA extends U{constructor(t,e){super();const i=this;let n=null,r=1,A=null,s="local-floor",a=null,o=null,l=null,c=null,d=null,p=null;const _=e.getContextAttributes();let x=null,M=null;const y=[],w=new Map,C=new Ci;C.layers.enable(1),C.viewport=new vt;const b=new Ci;b.layers.enable(2),b.viewport=new vt;const I=[C,b],E=new lA;E.layers.enable(1),E.layers.enable(2);let S=null,D=null;function T(t){const e=w.get(t.inputSource);void 0!==e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function L(){n.removeEventListener("select",T),n.removeEventListener("selectstart",T),n.removeEventListener("selectend",T),n.removeEventListener("squeeze",T),n.removeEventListener("squeezestart",T),n.removeEventListener("squeezeend",T),n.removeEventListener("end",L),n.removeEventListener("inputsourceschange",P),w.forEach((function(t,e){void 0!==t&&t.disconnect(e)})),w.clear(),S=null,D=null,t.setRenderTarget(x),d=null,c=null,l=null,n=null,M=null,U.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}function P(t){const e=n.inputSources;for(let t=0;t<e.length;t++){const i="right"===e[t].handedness?1:0;w.set(e[t],y[i])}for(let e=0;e<t.removed.length;e++){const i=t.removed[e],n=w.get(i);n&&(n.dispatchEvent({type:"disconnected",data:i}),w.delete(i))}for(let e=0;e<t.added.length;e++){const i=t.added[e],n=w.get(i);n&&n.dispatchEvent({type:"connected",data:i})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=y[t];return void 0===e&&(e=new uA,y[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=y[t];return void 0===e&&(e=new uA,y[t]=e),e.getGripSpace()},this.getHand=function(t){let e=y[t];return void 0===e&&(e=new uA,y[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){r=t,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){s=t,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return a||A},this.setReferenceSpace=function(t){a=t},this.getBaseLayer=function(){return null!==c?c:d},this.getBinding=function(){return l},this.getFrame=function(){return p},this.getSession=function(){return n},this.setSession=async function(o){if(n=o,null!==n){if(x=t.getRenderTarget(),n.addEventListener("select",T),n.addEventListener("selectstart",T),n.addEventListener("selectend",T),n.addEventListener("squeeze",T),n.addEventListener("squeezestart",T),n.addEventListener("squeezeend",T),n.addEventListener("end",L),n.addEventListener("inputsourceschange",P),!0!==_.xrCompatible&&await e.makeXRCompatible(),void 0===n.renderState.layers||!1===t.capabilities.isWebGL2){const i={antialias:void 0!==n.renderState.layers||_.antialias,alpha:_.alpha,depth:_.depth,stencil:_.stencil,framebufferScaleFactor:r};d=new XRWebGLLayer(n,e,i),n.updateRenderState({baseLayer:d}),M=new _t(d.framebufferWidth,d.framebufferHeight,{format:m,type:h,encoding:t.outputEncoding})}else{let i=null,A=null,s=null;_.depth&&(s=_.stencil?35056:33190,i=_.stencil?v:f,A=_.stencil?g:u);const a={colorFormat:t.outputEncoding===B?35907:32856,depthFormat:s,scaleFactor:r};l=new XRWebGLBinding(n,e),c=l.createProjectionLayer(a),n.updateRenderState({layers:[c]}),M=new _t(c.textureWidth,c.textureHeight,{format:m,type:h,depthTexture:new dA(c.textureWidth,c.textureHeight,A,void 0,void 0,void 0,void 0,void 0,void 0,i),stencilBuffer:_.stencil,encoding:t.outputEncoding,samples:_.antialias?4:0});t.properties.get(M).__ignoreDepthValues=c.ignoreDepthValues}M.isXRRenderTarget=!0,this.setFoveation(1),a=null,A=await n.requestReferenceSpace(s),U.setContext(n),U.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}};const R=new yt,N=new yt;function Q(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===n)return;E.near=b.near=C.near=t.near,E.far=b.far=C.far=t.far,S===E.near&&D===E.far||(n.updateRenderState({depthNear:E.near,depthFar:E.far}),S=E.near,D=E.far);const e=t.parent,i=E.cameras;Q(E,e);for(let t=0;t<i.length;t++)Q(i[t],e);E.matrixWorld.decompose(E.position,E.quaternion,E.scale),t.position.copy(E.position),t.quaternion.copy(E.quaternion),t.scale.copy(E.scale),t.matrix.copy(E.matrix),t.matrixWorld.copy(E.matrixWorld);const r=t.children;for(let t=0,e=r.length;t<e;t++)r[t].updateMatrixWorld(!0);2===i.length?function(t,e,i){R.setFromMatrixPosition(e.matrixWorld),N.setFromMatrixPosition(i.matrixWorld);const n=R.distanceTo(N),r=e.projectionMatrix.elements,A=i.projectionMatrix.elements,s=r[14]/(r[10]-1),a=r[14]/(r[10]+1),o=(r[9]+1)/r[5],l=(r[9]-1)/r[5],c=(r[8]-1)/r[0],h=(A[8]+1)/A[0],u=s*c,d=s*h,p=n/(-c+h),g=p*-c;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(g),t.translateZ(p),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const m=s+p,f=a+p,v=u-g,_=d+(n-g),x=o*a/f*m,M=l*a/f*m;t.projectionMatrix.makePerspective(v,_,x,M,m,f)}(E,C,b):E.projectionMatrix.copy(C.projectionMatrix)},this.getCamera=function(){return E},this.getFoveation=function(){return null!==c?c.fixedFoveation:null!==d?d.fixedFoveation:void 0},this.setFoveation=function(t){null!==c&&(c.fixedFoveation=t),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=t)};let z=null;const U=new Qi;U.setAnimationLoop((function(e,i){if(o=i.getViewerPose(a||A),p=i,null!==o){const e=o.views;null!==d&&(t.setRenderTargetFramebuffer(M,d.framebuffer),t.setRenderTarget(M));let i=!1;e.length!==E.cameras.length&&(E.cameras.length=0,i=!0);for(let n=0;n<e.length;n++){const r=e[n];let A=null;if(null!==d)A=d.getViewport(r);else{const e=l.getViewSubImage(c,r);A=e.viewport,0===n&&(t.setRenderTargetTextures(M,e.colorTexture,c.ignoreDepthValues?void 0:e.depthStencilTexture),t.setRenderTarget(M))}let s=I[n];void 0===s&&(s=new Ci,s.layers.enable(n),s.viewport=new vt,I[n]=s),s.matrix.fromArray(r.transform.matrix),s.projectionMatrix.fromArray(r.projectionMatrix),s.viewport.set(A.x,A.y,A.width,A.height),0===n&&E.matrix.copy(s.matrix),!0===i&&E.cameras.push(s)}}const r=n.inputSources;for(let t=0;t<y.length;t++){const e=r[t],n=w.get(e);void 0!==n&&n.update(e,i,a||A)}z&&z(e,i),p=null})),this.setAnimationLoop=function(t){z=t},this.dispose=function(){}}}function gA(t,e){function i(i,n){i.opacity.value=n.opacity,n.color&&i.diffuse.value.copy(n.color),n.emissive&&i.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(i.map.value=n.map),n.alphaMap&&(i.alphaMap.value=n.alphaMap),n.bumpMap&&(i.bumpMap.value=n.bumpMap,i.bumpScale.value=n.bumpScale,1===n.side&&(i.bumpScale.value*=-1)),n.displacementMap&&(i.displacementMap.value=n.displacementMap,i.displacementScale.value=n.displacementScale,i.displacementBias.value=n.displacementBias),n.emissiveMap&&(i.emissiveMap.value=n.emissiveMap),n.normalMap&&(i.normalMap.value=n.normalMap,i.normalScale.value.copy(n.normalScale),1===n.side&&i.normalScale.value.negate()),n.specularMap&&(i.specularMap.value=n.specularMap),n.alphaTest>0&&(i.alphaTest.value=n.alphaTest);const r=e.get(n).envMap;if(r&&(i.envMap.value=r,i.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,i.reflectivity.value=n.reflectivity,i.ior.value=n.ior,i.refractionRatio.value=n.refractionRatio),n.lightMap){i.lightMap.value=n.lightMap;const e=!0!==t.physicallyCorrectLights?Math.PI:1;i.lightMapIntensity.value=n.lightMapIntensity*e}let A,s;n.aoMap&&(i.aoMap.value=n.aoMap,i.aoMapIntensity.value=n.aoMapIntensity),n.map?A=n.map:n.specularMap?A=n.specularMap:n.displacementMap?A=n.displacementMap:n.normalMap?A=n.normalMap:n.bumpMap?A=n.bumpMap:n.roughnessMap?A=n.roughnessMap:n.metalnessMap?A=n.metalnessMap:n.alphaMap?A=n.alphaMap:n.emissiveMap?A=n.emissiveMap:n.clearcoatMap?A=n.clearcoatMap:n.clearcoatNormalMap?A=n.clearcoatNormalMap:n.clearcoatRoughnessMap?A=n.clearcoatRoughnessMap:n.iridescenceMap?A=n.iridescenceMap:n.iridescenceThicknessMap?A=n.iridescenceThicknessMap:n.specularIntensityMap?A=n.specularIntensityMap:n.specularColorMap?A=n.specularColorMap:n.transmissionMap?A=n.transmissionMap:n.thicknessMap?A=n.thicknessMap:n.sheenColorMap?A=n.sheenColorMap:n.sheenRoughnessMap&&(A=n.sheenRoughnessMap),void 0!==A&&(A.isWebGLRenderTarget&&(A=A.texture),!0===A.matrixAutoUpdate&&A.updateMatrix(),i.uvTransform.value.copy(A.matrix)),n.aoMap?s=n.aoMap:n.lightMap&&(s=n.lightMap),void 0!==s&&(s.isWebGLRenderTarget&&(s=s.texture),!0===s.matrixAutoUpdate&&s.updateMatrix(),i.uv2Transform.value.copy(s.matrix))}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,n,r,A,s){n.isMeshBasicMaterial||n.isMeshLambertMaterial?i(t,n):n.isMeshToonMaterial?(i(t,n),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(t,n)):n.isMeshPhongMaterial?(i(t,n),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4)}(t,n)):n.isMeshStandardMaterial?(i(t,n),function(t,i){t.roughness.value=i.roughness,t.metalness.value=i.metalness,i.roughnessMap&&(t.roughnessMap.value=i.roughnessMap);i.metalnessMap&&(t.metalnessMap.value=i.metalnessMap);e.get(i).envMap&&(t.envMapIntensity.value=i.envMapIntensity)}(t,n),n.isMeshPhysicalMaterial&&function(t,e,i){t.ior.value=e.ior,e.sheen>0&&(t.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen),t.sheenRoughness.value=e.sheenRoughness,e.sheenColorMap&&(t.sheenColorMap.value=e.sheenColorMap),e.sheenRoughnessMap&&(t.sheenRoughnessMap.value=e.sheenRoughnessMap));e.clearcoat>0&&(t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,1===e.side&&t.clearcoatNormalScale.value.negate()));e.iridescence>0&&(t.iridescence.value=e.iridescence,t.iridescenceIOR.value=e.iridescenceIOR,t.iridescenceThicknessMinimum.value=e.iridescenceThicknessRange[0],t.iridescenceThicknessMaximum.value=e.iridescenceThicknessRange[1],e.iridescenceMap&&(t.iridescenceMap.value=e.iridescenceMap),e.iridescenceThicknessMap&&(t.iridescenceThicknessMap.value=e.iridescenceThicknessMap));e.transmission>0&&(t.transmission.value=e.transmission,t.transmissionSamplerMap.value=i.texture,t.transmissionSamplerSize.value.set(i.width,i.height),e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap),t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap),t.attenuationDistance.value=e.attenuationDistance,t.attenuationColor.value.copy(e.attenuationColor));t.specularIntensity.value=e.specularIntensity,t.specularColor.value.copy(e.specularColor),e.specularIntensityMap&&(t.specularIntensityMap.value=e.specularIntensityMap);e.specularColorMap&&(t.specularColorMap.value=e.specularColorMap)}(t,n,s)):n.isMeshMatcapMaterial?(i(t,n),function(t,e){e.matcap&&(t.matcap.value=e.matcap)}(t,n)):n.isMeshDepthMaterial?i(t,n):n.isMeshDistanceMaterial?(i(t,n),function(t,e){t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,n)):n.isMeshNormalMaterial?i(t,n):n.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,n),n.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,n)):n.isPointsMaterial?function(t,e,i,n){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*i,t.scale.value=.5*n,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);e.alphaTest>0&&(t.alphaTest.value=e.alphaTest);let r;e.map?r=e.map:e.alphaMap&&(r=e.alphaMap);void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uvTransform.value.copy(r.matrix))}(t,n,r,A):n.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);e.alphaTest>0&&(t.alphaTest.value=e.alphaTest);let i;e.map?i=e.map:e.alphaMap&&(i=e.alphaMap);void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix))}(t,n):n.isShadowMaterial?(t.color.value.copy(n.color),t.opacity.value=n.opacity):n.isShaderMaterial&&(n.uniformsNeedUpdate=!1)}}}function mA(t={}){this.isWebGLRenderer=!0;const e=void 0!==t.canvas?t.canvas:function(){const t=tt("canvas");return t.style.display="block",t}(),i=void 0!==t.context?t.context:null,n=void 0===t.depth||t.depth,r=void 0===t.stencil||t.stencil,A=void 0!==t.antialias&&t.antialias,s=void 0===t.premultipliedAlpha||t.premultipliedAlpha,a=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,o=void 0!==t.powerPreference?t.powerPreference:"default",l=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let u;u=null!==i?i.getContextAttributes().alpha:void 0!==t.alpha&&t.alpha;let g=null,f=null;const v=[],_=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=T,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const x=this;let M=!1,y=0,w=0,C=null,b=-1,I=null;const E=new vt,S=new vt;let D=null,B=e.width,L=e.height,P=1,R=null,N=null;const Q=new vt(0,0,B,L),z=new vt(0,0,B,L);let U=!1;const k=new Ni;let F=!1,O=!1,G=null;const V=new $t,H=new q,W=new yt,Y={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function J(){return null===C?P:1}let K,j,X,$,et,it,nt,rt,At,st,at,ot,lt,ct,ht,ut,dt,pt,gt,mt,ft,xt,Mt,wt=i;function Ct(t,i){for(let n=0;n<t.length;n++){const r=t[n],A=e.getContext(r,i);if(null!==A)return A}return null}try{const t={alpha:!0,depth:n,stencil:r,antialias:A,premultipliedAlpha:s,preserveDrawingBuffer:a,powerPreference:o,failIfMajorPerformanceCaveat:l};if("setAttribute"in e&&e.setAttribute("data-engine","three.js r141"),e.addEventListener("webglcontextlost",Et,!1),e.addEventListener("webglcontextrestored",St,!1),e.addEventListener("webglcontextcreationerror",Dt,!1),null===wt){const e=["webgl2","webgl","experimental-webgl"];if(!0===x.isWebGL1Renderer&&e.shift(),wt=Ct(e,t),null===wt)throw Ct(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===wt.getShaderPrecisionFormat&&(wt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function bt(){K=new hn(wt),j=new Wi(wt,K,t),K.init(j),xt=new oA(wt,K,j),X=new sA(wt,K,j),$=new pn,et=new Yr,it=new aA(wt,K,X,et,j,xt,$),nt=new Ji(x),rt=new cn(x),At=new zi(wt,j),Mt=new Vi(wt,K,At,j),st=new un(wt,At,$,Mt),at=new _n(wt,st,At,$),gt=new vn(wt,j,it),ut=new Yi(et),ot=new Wr(x,nt,rt,K,j,Mt,ut),lt=new gA(x,et),ct=new jr,ht=new iA(K,j),pt=new Gi(x,nt,X,at,u,s),dt=new AA(x,at,j),mt=new Hi(wt,K,$,j),ft=new dn(wt,K,$,j),$.programs=ot.programs,x.capabilities=j,x.extensions=K,x.properties=et,x.renderLists=ct,x.shadowMap=dt,x.state=X,x.info=$}bt();const It=new pA(x,wt);function Et(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),M=!0}function St(){console.log("THREE.WebGLRenderer: Context Restored."),M=!1;const t=$.autoReset,e=dt.enabled,i=dt.autoUpdate,n=dt.needsUpdate,r=dt.type;bt(),$.autoReset=t,dt.enabled=e,dt.autoUpdate=i,dt.needsUpdate=n,dt.type=r}function Dt(t){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",t.statusMessage)}function Tt(t){const e=t.target;e.removeEventListener("dispose",Tt),function(t){(function(t){const e=et.get(t).programs;void 0!==e&&(e.forEach((function(t){ot.releaseProgram(t)})),t.isShaderMaterial&&ot.releaseShaderCache(t))})(t),et.remove(t)}(e)}this.xr=It,this.getContext=function(){return wt},this.getContextAttributes=function(){return wt.getContextAttributes()},this.forceContextLoss=function(){const t=K.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=K.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return P},this.setPixelRatio=function(t){void 0!==t&&(P=t,this.setSize(B,L,!1))},this.getSize=function(t){return t.set(B,L)},this.setSize=function(t,i,n){It.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(B=t,L=i,e.width=Math.floor(t*P),e.height=Math.floor(i*P),!1!==n&&(e.style.width=t+"px",e.style.height=i+"px"),this.setViewport(0,0,t,i))},this.getDrawingBufferSize=function(t){return t.set(B*P,L*P).floor()},this.setDrawingBufferSize=function(t,i,n){B=t,L=i,P=n,e.width=Math.floor(t*n),e.height=Math.floor(i*n),this.setViewport(0,0,t,i)},this.getCurrentViewport=function(t){return t.copy(E)},this.getViewport=function(t){return t.copy(Q)},this.setViewport=function(t,e,i,n){t.isVector4?Q.set(t.x,t.y,t.z,t.w):Q.set(t,e,i,n),X.viewport(E.copy(Q).multiplyScalar(P).floor())},this.getScissor=function(t){return t.copy(z)},this.setScissor=function(t,e,i,n){t.isVector4?z.set(t.x,t.y,t.z,t.w):z.set(t,e,i,n),X.scissor(S.copy(z).multiplyScalar(P).floor())},this.getScissorTest=function(){return U},this.setScissorTest=function(t){X.setScissorTest(U=t)},this.setOpaqueSort=function(t){R=t},this.setTransparentSort=function(t){N=t},this.getClearColor=function(t){return t.copy(pt.getClearColor())},this.setClearColor=function(){pt.setClearColor.apply(pt,arguments)},this.getClearAlpha=function(){return pt.getClearAlpha()},this.setClearAlpha=function(){pt.setClearAlpha.apply(pt,arguments)},this.clear=function(t=!0,e=!0,i=!0){let n=0;t&&(n|=16384),e&&(n|=256),i&&(n|=1024),wt.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Et,!1),e.removeEventListener("webglcontextrestored",St,!1),e.removeEventListener("webglcontextcreationerror",Dt,!1),ct.dispose(),ht.dispose(),et.dispose(),nt.dispose(),rt.dispose(),at.dispose(),Mt.dispose(),ot.dispose(),It.dispose(),It.removeEventListener("sessionstart",Lt),It.removeEventListener("sessionend",Pt),G&&(G.dispose(),G=null),Rt.stop()},this.renderBufferDirect=function(t,e,i,n,r,A){null===e&&(e=Y);const s=r.isMesh&&r.matrixWorld.determinant()<0,a=function(t,e,i,n,r){!0!==e.isScene&&(e=Y);it.resetTextureUnits();const A=e.fog,s=n.isMeshStandardMaterial?e.environment:null,a=null===C?x.outputEncoding:!0===C.isXRRenderTarget?C.texture.encoding:T,o=(n.isMeshStandardMaterial?rt:nt).get(n.envMap||s),l=!0===n.vertexColors&&!!i.attributes.color&&4===i.attributes.color.itemSize,c=!!n.normalMap&&!!i.attributes.tangent,h=!!i.morphAttributes.position,u=!!i.morphAttributes.normal,d=!!i.morphAttributes.color,p=n.toneMapped?x.toneMapping:0,g=i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color,m=void 0!==g?g.length:0,v=et.get(n),_=f.state.lights;if(!0===F&&(!0===O||t!==I)){const e=t===I&&n.id===b;ut.setState(n,t,e)}let M=!1;n.version===v.__version?v.needsLights&&v.lightsStateVersion!==_.state.version||v.outputEncoding!==a||r.isInstancedMesh&&!1===v.instancing?M=!0:r.isInstancedMesh||!0!==v.instancing?r.isSkinnedMesh&&!1===v.skinning?M=!0:r.isSkinnedMesh||!0!==v.skinning?v.envMap!==o||!0===n.fog&&v.fog!==A?M=!0:void 0===v.numClippingPlanes||v.numClippingPlanes===ut.numPlanes&&v.numIntersection===ut.numIntersection?(v.vertexAlphas!==l||v.vertexTangents!==c||v.morphTargets!==h||v.morphNormals!==u||v.morphColors!==d||v.toneMapping!==p||!0===j.isWebGL2&&v.morphTargetsCount!==m)&&(M=!0):M=!0:M=!0:M=!0:(M=!0,v.__version=n.version);let y=v.currentProgram;!0===M&&(y=kt(n,e,r));let w=!1,E=!1,S=!1;const D=y.getUniforms(),B=v.uniforms;X.useProgram(y.program)&&(w=!0,E=!0,S=!0);n.id!==b&&(b=n.id,E=!0);if(w||I!==t){if(D.setValue(wt,"projectionMatrix",t.projectionMatrix),j.logarithmicDepthBuffer&&D.setValue(wt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),I!==t&&(I=t,E=!0,S=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const e=D.map.cameraPosition;void 0!==e&&e.setValue(wt,W.setFromMatrixPosition(t.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&D.setValue(wt,"isOrthographic",!0===t.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||r.isSkinnedMesh)&&D.setValue(wt,"viewMatrix",t.matrixWorldInverse)}if(r.isSkinnedMesh){D.setOptional(wt,r,"bindMatrix"),D.setOptional(wt,r,"bindMatrixInverse");const t=r.skeleton;t&&(j.floatVertexTextures?(null===t.boneTexture&&t.computeBoneTexture(),D.setValue(wt,"boneTexture",t.boneTexture,it),D.setValue(wt,"boneTextureSize",t.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const R=i.morphAttributes;(void 0!==R.position||void 0!==R.normal||void 0!==R.color&&!0===j.isWebGL2)&&gt.update(r,i,n,y);(E||v.receiveShadow!==r.receiveShadow)&&(v.receiveShadow=r.receiveShadow,D.setValue(wt,"receiveShadow",r.receiveShadow));E&&(D.setValue(wt,"toneMappingExposure",x.toneMappingExposure),v.needsLights&&(Q=S,(N=B).ambientLightColor.needsUpdate=Q,N.lightProbe.needsUpdate=Q,N.directionalLights.needsUpdate=Q,N.directionalLightShadows.needsUpdate=Q,N.pointLights.needsUpdate=Q,N.pointLightShadows.needsUpdate=Q,N.spotLights.needsUpdate=Q,N.spotLightShadows.needsUpdate=Q,N.rectAreaLights.needsUpdate=Q,N.hemisphereLights.needsUpdate=Q),A&&!0===n.fog&&lt.refreshFogUniforms(B,A),lt.refreshMaterialUniforms(B,n,P,L,G),wr.upload(wt,v.uniformsList,B,it));var N,Q;n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(wr.upload(wt,v.uniformsList,B,it),n.uniformsNeedUpdate=!1);n.isSpriteMaterial&&D.setValue(wt,"center",r.center);return D.setValue(wt,"modelViewMatrix",r.modelViewMatrix),D.setValue(wt,"normalMatrix",r.normalMatrix),D.setValue(wt,"modelMatrix",r.matrixWorld),y}(t,e,i,n,r);X.setMaterial(n,s);let o=i.index;const l=i.attributes.position;if(null===o){if(void 0===l||0===l.count)return}else if(0===o.count)return;let c,h=1;!0===n.wireframe&&(o=st.getWireframeAttribute(i),h=2),Mt.setup(r,n,a,i,o);let u=mt;null!==o&&(c=At.get(o),u=ft,u.setIndex(c));const d=null!==o?o.count:l.count,p=i.drawRange.start*h,g=i.drawRange.count*h,m=null!==A?A.start*h:0,v=null!==A?A.count*h:1/0,_=Math.max(p,m),M=Math.min(d,p+g,m+v)-1,y=Math.max(0,M-_+1);if(0!==y){if(r.isMesh)!0===n.wireframe?(X.setLineWidth(n.wireframeLinewidth*J()),u.setMode(1)):u.setMode(4);else if(r.isLine){let t=n.linewidth;void 0===t&&(t=1),X.setLineWidth(t*J()),r.isLineSegments?u.setMode(1):r.isLineLoop?u.setMode(2):u.setMode(3)}else r.isPoints?u.setMode(0):r.isSprite&&u.setMode(4);if(r.isInstancedMesh)u.renderInstances(_,y,r.count);else if(i.isInstancedBufferGeometry){const t=Math.min(i.instanceCount,i._maxInstanceCount);u.renderInstances(_,y,t)}else u.render(_,y)}},this.compile=function(t,e){f=ht.get(t),f.init(),_.push(f),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(f.pushLight(t),t.castShadow&&f.pushShadow(t))})),f.setupLights(x.physicallyCorrectLights),t.traverse((function(e){const i=e.material;if(i)if(Array.isArray(i))for(let n=0;n<i.length;n++){kt(i[n],t,e)}else kt(i,t,e)})),_.pop(),f=null};let Bt=null;function Lt(){Rt.stop()}function Pt(){Rt.start()}const Rt=new Qi;function Nt(t,e,i,n){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)i=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)f.pushLight(t),t.castShadow&&f.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||k.intersectsSprite(t)){n&&W.setFromMatrixPosition(t.matrixWorld).applyMatrix4(V);const e=at.update(t),r=t.material;r.visible&&g.push(t,e,r,i,W.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==$.render.frame&&(t.skeleton.update(),t.skeleton.frame=$.render.frame),!t.frustumCulled||k.intersectsObject(t))){n&&W.setFromMatrixPosition(t.matrixWorld).applyMatrix4(V);const e=at.update(t),r=t.material;if(Array.isArray(r)){const n=e.groups;for(let A=0,s=n.length;A<s;A++){const s=n[A],a=r[s.materialIndex];a&&a.visible&&g.push(t,e,a,i,W.z,s)}}else r.visible&&g.push(t,e,r,i,W.z,null)}const r=t.children;for(let t=0,A=r.length;t<A;t++)Nt(r[t],e,i,n)}function Qt(t,e,i,n){const r=t.opaque,s=t.transmissive,a=t.transparent;f.setupLightsView(i),s.length>0&&function(t,e,i){const n=j.isWebGL2;null===G&&(G=new _t(1,1,{generateMipmaps:!0,type:K.has("EXT_color_buffer_half_float")?p:h,minFilter:c,samples:n&&!0===A?4:0}));x.getDrawingBufferSize(H),n?G.setSize(H.x,H.y):G.setSize(Z(H.x),Z(H.y));const r=x.getRenderTarget();x.setRenderTarget(G),x.clear();const s=x.toneMapping;x.toneMapping=0,zt(t,e,i),x.toneMapping=s,it.updateMultisampleRenderTarget(G),it.updateRenderTargetMipmap(G),x.setRenderTarget(r)}(r,e,i),n&&X.viewport(E.copy(n)),r.length>0&&zt(r,e,i),s.length>0&&zt(s,e,i),a.length>0&&zt(a,e,i),X.buffers.depth.setTest(!0),X.buffers.depth.setMask(!0),X.buffers.color.setMask(!0),X.setPolygonOffset(!1)}function zt(t,e,i){const n=!0===e.isScene?e.overrideMaterial:null;for(let r=0,A=t.length;r<A;r++){const A=t[r],s=A.object,a=A.geometry,o=null===n?A.material:n,l=A.group;s.layers.test(i.layers)&&Ut(s,e,i,a,o,l)}}function Ut(t,e,i,n,r,A){t.onBeforeRender(x,e,i,n,r,A),t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),r.onBeforeRender(x,e,i,n,t,A),!0===r.transparent&&2===r.side?(r.side=1,r.needsUpdate=!0,x.renderBufferDirect(i,e,n,r,t,A),r.side=0,r.needsUpdate=!0,x.renderBufferDirect(i,e,n,r,t,A),r.side=2):x.renderBufferDirect(i,e,n,r,t,A),t.onAfterRender(x,e,i,n,r,A)}function kt(t,e,i){!0!==e.isScene&&(e=Y);const n=et.get(t),r=f.state.lights,A=f.state.shadowsArray,s=r.state.version,a=ot.getParameters(t,r.state,A,e,i),o=ot.getProgramCacheKey(a);let l=n.programs;n.environment=t.isMeshStandardMaterial?e.environment:null,n.fog=e.fog,n.envMap=(t.isMeshStandardMaterial?rt:nt).get(t.envMap||n.environment),void 0===l&&(t.addEventListener("dispose",Tt),l=new Map,n.programs=l);let c=l.get(o);if(void 0!==c){if(n.currentProgram===c&&n.lightsStateVersion===s)return Ft(t,a),c}else a.uniforms=ot.getUniforms(t),t.onBuild(i,a,x),t.onBeforeCompile(a,x),c=ot.acquireProgram(a,o),l.set(o,c),n.uniforms=a.uniforms;const h=n.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(h.clippingPlanes=ut.uniform),Ft(t,a),n.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),n.lightsStateVersion=s,n.needsLights&&(h.ambientLightColor.value=r.state.ambient,h.lightProbe.value=r.state.probe,h.directionalLights.value=r.state.directional,h.directionalLightShadows.value=r.state.directionalShadow,h.spotLights.value=r.state.spot,h.spotLightShadows.value=r.state.spotShadow,h.rectAreaLights.value=r.state.rectArea,h.ltc_1.value=r.state.rectAreaLTC1,h.ltc_2.value=r.state.rectAreaLTC2,h.pointLights.value=r.state.point,h.pointLightShadows.value=r.state.pointShadow,h.hemisphereLights.value=r.state.hemi,h.directionalShadowMap.value=r.state.directionalShadowMap,h.directionalShadowMatrix.value=r.state.directionalShadowMatrix,h.spotShadowMap.value=r.state.spotShadowMap,h.spotShadowMatrix.value=r.state.spotShadowMatrix,h.pointShadowMap.value=r.state.pointShadowMap,h.pointShadowMatrix.value=r.state.pointShadowMatrix);const u=c.getUniforms(),d=wr.seqWithValue(u.seq,h);return n.currentProgram=c,n.uniformsList=d,c}function Ft(t,e){const i=et.get(t);i.outputEncoding=e.outputEncoding,i.instancing=e.instancing,i.skinning=e.skinning,i.morphTargets=e.morphTargets,i.morphNormals=e.morphNormals,i.morphColors=e.morphColors,i.morphTargetsCount=e.morphTargetsCount,i.numClippingPlanes=e.numClippingPlanes,i.numIntersection=e.numClipIntersection,i.vertexAlphas=e.vertexAlphas,i.vertexTangents=e.vertexTangents,i.toneMapping=e.toneMapping}Rt.setAnimationLoop((function(t){Bt&&Bt(t)})),"undefined"!=typeof self&&Rt.setContext(self),this.setAnimationLoop=function(t){Bt=t,It.setAnimationLoop(t),null===t?Rt.stop():Rt.start()},It.addEventListener("sessionstart",Lt),It.addEventListener("sessionend",Pt),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===M)return;!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===It.enabled&&!0===It.isPresenting&&(!0===It.cameraAutoUpdate&&It.updateCamera(e),e=It.getCamera()),!0===t.isScene&&t.onBeforeRender(x,t,e,C),f=ht.get(t,_.length),f.init(),_.push(f),V.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),k.setFromProjectionMatrix(V),O=this.localClippingEnabled,F=ut.init(this.clippingPlanes,O,e),g=ct.get(t,v.length),g.init(),v.push(g),Nt(t,e,0,x.sortObjects),g.finish(),!0===x.sortObjects&&g.sort(R,N),!0===F&&ut.beginShadows();const i=f.state.shadowsArray;if(dt.render(i,t,e),!0===F&&ut.endShadows(),!0===this.info.autoReset&&this.info.reset(),pt.render(g,t),f.setupLights(x.physicallyCorrectLights),e.isArrayCamera){const i=e.cameras;for(let e=0,n=i.length;e<n;e++){const n=i[e];Qt(g,t,n,n.viewport)}}else Qt(g,t,e);null!==C&&(it.updateMultisampleRenderTarget(C),it.updateRenderTargetMipmap(C)),!0===t.isScene&&t.onAfterRender(x,t,e),Mt.resetDefaultState(),b=-1,I=null,_.pop(),f=_.length>0?_[_.length-1]:null,v.pop(),g=v.length>0?v[v.length-1]:null},this.getActiveCubeFace=function(){return y},this.getActiveMipmapLevel=function(){return w},this.getRenderTarget=function(){return C},this.setRenderTargetTextures=function(t,e,i){et.get(t.texture).__webglTexture=e,et.get(t.depthTexture).__webglTexture=i;const n=et.get(t);n.__hasExternalTextures=!0,n.__hasExternalTextures&&(n.__autoAllocateDepthBuffer=void 0===i,n.__autoAllocateDepthBuffer||!0===K.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),n.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(t,e){const i=et.get(t);i.__webglFramebuffer=e,i.__useDefaultFramebuffer=void 0===e},this.setRenderTarget=function(t,e=0,i=0){C=t,y=e,w=i;let n=!0;if(t){const e=et.get(t);void 0!==e.__useDefaultFramebuffer?(X.bindFramebuffer(36160,null),n=!1):void 0===e.__webglFramebuffer?it.setupRenderTarget(t):e.__hasExternalTextures&&it.rebindTextures(t,et.get(t.texture).__webglTexture,et.get(t.depthTexture).__webglTexture)}let r=null,A=!1,s=!1;if(t){const i=t.texture;(i.isData3DTexture||i.isDataArrayTexture)&&(s=!0);const n=et.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(r=n[e],A=!0):r=j.isWebGL2&&t.samples>0&&!1===it.useMultisampledRTT(t)?et.get(t).__webglMultisampledFramebuffer:n,E.copy(t.viewport),S.copy(t.scissor),D=t.scissorTest}else E.copy(Q).multiplyScalar(P).floor(),S.copy(z).multiplyScalar(P).floor(),D=U;if(X.bindFramebuffer(36160,r)&&j.drawBuffers&&n&&X.drawBuffers(t,r),X.viewport(E),X.scissor(S),X.setScissorTest(D),A){const n=et.get(t.texture);wt.framebufferTexture2D(36160,36064,34069+e,n.__webglTexture,i)}else if(s){const n=et.get(t.texture),r=e||0;wt.framebufferTextureLayer(36160,36064,n.__webglTexture,i||0,r)}b=-1},this.readRenderTargetPixels=function(t,e,i,n,r,A,s){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let a=et.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==s&&(a=a[s]),a){X.bindFramebuffer(36160,a);try{const s=t.texture,a=s.format,o=s.type;if(a!==m&&xt.convert(a)!==wt.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const l=o===p&&(K.has("EXT_color_buffer_half_float")||j.isWebGL2&&K.has("EXT_color_buffer_float"));if(!(o===h||xt.convert(o)===wt.getParameter(35738)||o===d&&(j.isWebGL2||K.has("OES_texture_float")||K.has("WEBGL_color_buffer_float"))||l))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");e>=0&&e<=t.width-n&&i>=0&&i<=t.height-r&&wt.readPixels(e,i,n,r,xt.convert(a),xt.convert(o),A)}finally{const t=null!==C?et.get(C).__webglFramebuffer:null;X.bindFramebuffer(36160,t)}}},this.copyFramebufferToTexture=function(t,e,i=0){const n=Math.pow(2,-i),r=Math.floor(e.image.width*n),A=Math.floor(e.image.height*n);it.setTexture2D(e,0),wt.copyTexSubImage2D(3553,i,0,0,t.x,t.y,r,A),X.unbindTexture()},this.copyTextureToTexture=function(t,e,i,n=0){const r=e.image.width,A=e.image.height,s=xt.convert(i.format),a=xt.convert(i.type);it.setTexture2D(i,0),wt.pixelStorei(37440,i.flipY),wt.pixelStorei(37441,i.premultiplyAlpha),wt.pixelStorei(3317,i.unpackAlignment),e.isDataTexture?wt.texSubImage2D(3553,n,t.x,t.y,r,A,s,a,e.image.data):e.isCompressedTexture?wt.compressedTexSubImage2D(3553,n,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,s,e.mipmaps[0].data):wt.texSubImage2D(3553,n,t.x,t.y,s,a,e.image),0===n&&i.generateMipmaps&&wt.generateMipmap(3553),X.unbindTexture()},this.copyTextureToTexture3D=function(t,e,i,n,r=0){if(x.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const A=t.max.x-t.min.x+1,s=t.max.y-t.min.y+1,a=t.max.z-t.min.z+1,o=xt.convert(n.format),l=xt.convert(n.type);let c;if(n.isData3DTexture)it.setTexture3D(n,0),c=32879;else{if(!n.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");it.setTexture2DArray(n,0),c=35866}wt.pixelStorei(37440,n.flipY),wt.pixelStorei(37441,n.premultiplyAlpha),wt.pixelStorei(3317,n.unpackAlignment);const h=wt.getParameter(3314),u=wt.getParameter(32878),d=wt.getParameter(3316),p=wt.getParameter(3315),g=wt.getParameter(32877),m=i.isCompressedTexture?i.mipmaps[0]:i.image;wt.pixelStorei(3314,m.width),wt.pixelStorei(32878,m.height),wt.pixelStorei(3316,t.min.x),wt.pixelStorei(3315,t.min.y),wt.pixelStorei(32877,t.min.z),i.isDataTexture||i.isData3DTexture?wt.texSubImage3D(c,r,e.x,e.y,e.z,A,s,a,o,l,m.data):i.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),wt.compressedTexSubImage3D(c,r,e.x,e.y,e.z,A,s,a,o,m.data)):wt.texSubImage3D(c,r,e.x,e.y,e.z,A,s,a,o,l,m),wt.pixelStorei(3314,h),wt.pixelStorei(32878,u),wt.pixelStorei(3316,d),wt.pixelStorei(3315,p),wt.pixelStorei(32877,g),0===r&&n.generateMipmaps&&wt.generateMipmap(c),X.unbindTexture()},this.initTexture=function(t){it.setTexture2D(t,0),X.unbindTexture()},this.resetState=function(){y=0,w=0,C=null,X.reset(),Mt.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}(class extends mA{}).prototype.isWebGL1Renderer=!0;class fA extends Ce{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}class vA{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=N,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=V()}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,i){t*=this.stride,i*=e.stride;for(let n=0,r=this.stride;n<r;n++)this.array[t+n]=e.array[i+n];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=V()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(e,this.stride);return i.setUsage(this.usage),i}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=V()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const _A=new yt;class xA{constructor(t,e,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=i,this.normalized=!0===n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,i=this.data.count;e<i;e++)_A.fromBufferAttribute(this,e),_A.applyMatrix4(t),this.setXYZ(e,_A.x,_A.y,_A.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)_A.fromBufferAttribute(this,e),_A.applyNormalMatrix(t),this.setXYZ(e,_A.x,_A.y,_A.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)_A.fromBufferAttribute(this,e),_A.transformDirection(t),this.setXYZ(e,_A.x,_A.y,_A.z);return this}setX(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){return this.data.array[t*this.data.stride+this.offset]}getY(t){return this.data.array[t*this.data.stride+this.offset+1]}getZ(t){return this.data.array[t*this.data.stride+this.offset+2]}getW(t){return this.data.array[t*this.data.stride+this.offset+3]}setXY(t,e,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this}setXYZ(t,e,i,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this}setXYZW(t,e,i,n,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this.data.array[t+3]=r,this}clone(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const i=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[i+e])}return new Oe(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new xA(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const i=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[i+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}const MA=new yt,yA=new vt,wA=new vt,CA=new yt,bA=new $t;class IA extends mi{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new $t,this.bindMatrixInverse=new $t}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this}bind(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new vt,e=this.geometry.attributes.skinWeight;for(let i=0,n=e.count;i<n;i++){t.fromBufferAttribute(e,i);const n=1/t.manhattanLength();n!==1/0?t.multiplyScalar(n):t.set(1,0,0,0),e.setXYZW(i,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(t,e){const i=this.skeleton,n=this.geometry;yA.fromBufferAttribute(n.attributes.skinIndex,t),wA.fromBufferAttribute(n.attributes.skinWeight,t),MA.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){const n=wA.getComponent(t);if(0!==n){const r=yA.getComponent(t);bA.multiplyMatrices(i.bones[r].matrixWorld,i.boneInverses[r]),e.addScaledVector(CA.copy(MA).applyMatrix4(bA),n)}}return e.applyMatrix4(this.bindMatrixInverse)}}class EA extends Ce{constructor(){super(),this.isBone=!0,this.type="Bone"}}class SA extends ft{constructor(t=null,e=1,i=1,n,r,A,s,a,o=1003,l=1003,c,h){super(null,A,s,a,o,l,n,r,c,h),this.isDataTexture=!0,this.image={data:t,width:e,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const DA=new $t,TA=new $t;class BA{constructor(t=[],e=[]){this.uuid=V(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(16*t.length),0===e.length)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new $t)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const e=new $t;this.bones[t]&&e.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(e)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&e.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&(e.parent&&e.parent.isBone?(e.matrix.copy(e.parent.matrixWorld).invert(),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))}}update(){const t=this.bones,e=this.boneInverses,i=this.boneMatrices,n=this.boneTexture;for(let n=0,r=t.length;n<r;n++){const r=t[n]?t[n].matrixWorld:TA;DA.multiplyMatrices(r,e[n]),DA.toArray(i,16*n)}null!==n&&(n.needsUpdate=!0)}clone(){return new BA(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(4*this.bones.length);t=K(t),t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const i=new SA(e,t,t,m,d);return i.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=i,this.boneTextureSize=t,this}getBoneByName(t){for(let e=0,i=this.bones.length;e<i;e++){const i=this.bones[e];if(i.name===t)return i}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let i=0,n=t.bones.length;i<n;i++){const n=t.bones[i];let r=e[n];void 0===r&&(console.warn("THREE.Skeleton: No bone found with UUID:",n),r=new EA),this.bones.push(r),this.boneInverses.push((new $t).fromArray(t.boneInverses[i]))}return this.init(),this}toJSON(){const t={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,i=this.boneInverses;for(let n=0,r=e.length;n<r;n++){const r=e[n];t.bones.push(r.uuid);const A=i[n];t.boneInverses.push(A.toArray())}return t}}class LA extends ze{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new ht(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}new yt,new yt,new yt,new yt,new Ne;class PA extends yi{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class RA extends ze{constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ht(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ht(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}const NA={ShadowMaterial:class extends ze{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new ht(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}},SpriteMaterial:class extends ze{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new ht(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}},RawShaderMaterial:PA,ShaderMaterial:yi,PointsMaterial:class extends ze{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new ht(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}},MeshPhysicalMaterial:class extends RA{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new q(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return H(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new ht(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new ht(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new ht(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(t)}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}},MeshStandardMaterial:RA,MeshPhongMaterial:class extends ze{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new ht(16777215),this.specular=new ht(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ht(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}},MeshToonMaterial:class extends ze{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ht(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ht(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}},MeshNormalMaterial:class extends ze{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}},MeshLambertMaterial:class extends ze{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new ht(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ht(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}},MeshDepthMaterial:nA,MeshDistanceMaterial:rA,MeshBasicMaterial:Ue,MeshMatcapMaterial:class extends ze{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ht(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}},LineDashedMaterial:class extends LA{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}},LineBasicMaterial:LA,Material:ze};ze.fromType=function(t){return new NA[t]};const QA={arraySlice:function(t,e,i){return QA.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==i?i:t.length)):t.slice(e,i)},convertArray:function(t,e,i){return!t||!i&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){const e=t.length,i=new Array(e);for(let t=0;t!==e;++t)i[t]=t;return i.sort((function(e,i){return t[e]-t[i]})),i},sortedArray:function(t,e,i){const n=t.length,r=new t.constructor(n);for(let A=0,s=0;s!==n;++A){const n=i[A]*e;for(let i=0;i!==e;++i)r[s++]=t[n+i]}return r},flattenJSON:function(t,e,i,n){let r=1,A=t[0];for(;void 0!==A&&void 0===A[n];)A=t[r++];if(void 0===A)return;let s=A[n];if(void 0!==s)if(Array.isArray(s))do{s=A[n],void 0!==s&&(e.push(A.time),i.push.apply(i,s)),A=t[r++]}while(void 0!==A);else if(void 0!==s.toArray)do{s=A[n],void 0!==s&&(e.push(A.time),s.toArray(i,i.length)),A=t[r++]}while(void 0!==A);else do{s=A[n],void 0!==s&&(e.push(A.time),i.push(s)),A=t[r++]}while(void 0!==A)},subclip:function(t,e,i,n,r=30){const A=t.clone();A.name=e;const s=[];for(let t=0;t<A.tracks.length;++t){const e=A.tracks[t],a=e.getValueSize(),o=[],l=[];for(let t=0;t<e.times.length;++t){const A=e.times[t]*r;if(!(A<i||A>=n)){o.push(e.times[t]);for(let i=0;i<a;++i)l.push(e.values[t*a+i])}}0!==o.length&&(e.times=QA.convertArray(o,e.times.constructor),e.values=QA.convertArray(l,e.values.constructor),s.push(e))}A.tracks=s;let a=1/0;for(let t=0;t<A.tracks.length;++t)a>A.tracks[t].times[0]&&(a=A.tracks[t].times[0]);for(let t=0;t<A.tracks.length;++t)A.tracks[t].shift(-1*a);return A.resetDuration(),A},makeClipAdditive:function(t,e=0,i=t,n=30){n<=0&&(n=30);const r=i.tracks.length,A=e/n;for(let e=0;e<r;++e){const n=i.tracks[e],r=n.ValueTypeName;if("bool"===r||"string"===r)continue;const s=t.tracks.find((function(t){return t.name===n.name&&t.ValueTypeName===r}));if(void 0===s)continue;let a=0;const o=n.getValueSize();n.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(a=o/3);let l=0;const c=s.getValueSize();s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(l=c/3);const h=n.times.length-1;let u;if(A<=n.times[0]){const t=a,e=o-a;u=QA.arraySlice(n.values,t,e)}else if(A>=n.times[h]){const t=h*o+a,e=t+o-a;u=QA.arraySlice(n.values,t,e)}else{const t=n.createInterpolant(),e=a,i=o-a;t.evaluate(A),u=QA.arraySlice(t.resultBuffer,e,i)}if("quaternion"===r){(new Mt).fromArray(u).normalize().conjugate().toArray(u)}const d=s.times.length;for(let t=0;t<d;++t){const e=t*c+l;if("quaternion"===r)Mt.multiplyQuaternionsFlat(s.values,e,u,0,s.values,e);else{const t=c-2*l;for(let i=0;i<t;++i)s.values[e+i]-=u[i]}}}return t.blendMode=2501,t}};class zA{constructor(t,e,i,n){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new e.constructor(i),this.sampleValues=e,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let i=this._cachedIndex,n=e[i],r=e[i-1];t:{e:{let A;i:{n:if(!(t<n)){for(let A=i+2;;){if(void 0===n){if(t<r)break n;return i=e.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===A)break;if(r=n,n=e[++i],t<n)break e}A=e.length;break i}if(t>=r)break t;{const s=e[1];t<s&&(i=2,r=s);for(let A=i-2;;){if(void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(i===A)break;if(n=r,r=e[--i-1],t>=r)break e}A=i,i=0}}for(;i<A;){const n=i+A>>>1;t<e[n]?A=n:i=n+1}if(n=e[i],r=e[i-1],void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===n)return i=e.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,r,n)}return this.interpolate_(i,r,t,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=t*n;for(let t=0;t!==n;++t)e[t]=i[r+t];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class UA extends zA{constructor(t,e,i,n){super(t,e,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:I,endingEnd:I}}intervalChanged_(t,e,i){const n=this.parameterPositions;let r=t-2,A=t+1,s=n[r],a=n[A];if(void 0===s)switch(this.getSettings_().endingStart){case E:r=t,s=2*e-i;break;case S:r=n.length-2,s=e+n[r]-n[r+1];break;default:r=t,s=i}if(void 0===a)switch(this.getSettings_().endingEnd){case E:A=t,a=2*i-e;break;case S:A=1,a=i+n[1]-n[0];break;default:A=t-1,a=e}const o=.5*(i-e),l=this.valueSize;this._weightPrev=o/(e-s),this._weightNext=o/(a-i),this._offsetPrev=r*l,this._offsetNext=A*l}interpolate_(t,e,i,n){const r=this.resultBuffer,A=this.sampleValues,s=this.valueSize,a=t*s,o=a-s,l=this._offsetPrev,c=this._offsetNext,h=this._weightPrev,u=this._weightNext,d=(i-e)/(n-e),p=d*d,g=p*d,m=-h*g+2*h*p-h*d,f=(1+h)*g+(-1.5-2*h)*p+(-.5+h)*d+1,v=(-1-u)*g+(1.5+u)*p+.5*d,_=u*g-u*p;for(let t=0;t!==s;++t)r[t]=m*A[l+t]+f*A[o+t]+v*A[a+t]+_*A[c+t];return r}}class kA extends zA{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t,e,i,n){const r=this.resultBuffer,A=this.sampleValues,s=this.valueSize,a=t*s,o=a-s,l=(i-e)/(n-e),c=1-l;for(let t=0;t!==s;++t)r[t]=A[o+t]*c+A[a+t]*l;return r}}class FA extends zA{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t){return this.copySampleValue_(t-1)}}class OA{constructor(t,e,i,n){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=QA.convertArray(e,this.TimeBufferType),this.values=QA.convertArray(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let i;if(e.toJSON!==this.toJSON)i=e.toJSON(t);else{i={name:t.name,times:QA.convertArray(t.times,Array),values:QA.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(i.interpolation=e)}return i.type=t.ValueTypeName,i}InterpolantFactoryMethodDiscrete(t){return new FA(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new kA(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new UA(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case w:e=this.InterpolantFactoryMethodDiscrete;break;case C:e=this.InterpolantFactoryMethodLinear;break;case b:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return w;case this.InterpolantFactoryMethodLinear:return C;case this.InterpolantFactoryMethodSmooth:return b}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let i=0,n=e.length;i!==n;++i)e[i]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let i=0,n=e.length;i!==n;++i)e[i]*=t}return this}trim(t,e){const i=this.times,n=i.length;let r=0,A=n-1;for(;r!==n&&i[r]<t;)++r;for(;-1!==A&&i[A]>e;)--A;if(++A,0!==r||A!==n){r>=A&&(A=Math.max(A,1),r=A-1);const t=this.getValueSize();this.times=QA.arraySlice(i,r,A),this.values=QA.arraySlice(this.values,r*t,A*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const i=this.times,n=this.values,r=i.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let A=null;for(let e=0;e!==r;e++){const n=i[e];if("number"==typeof n&&isNaN(n)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,n),t=!1;break}if(null!==A&&A>n){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,n,A),t=!1;break}A=n}if(void 0!==n&&QA.isTypedArray(n))for(let e=0,i=n.length;e!==i;++e){const i=n[e];if(isNaN(i)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,i),t=!1;break}}return t}optimize(){const t=QA.arraySlice(this.times),e=QA.arraySlice(this.values),i=this.getValueSize(),n=this.getInterpolation()===b,r=t.length-1;let A=1;for(let s=1;s<r;++s){let r=!1;const a=t[s];if(a!==t[s+1]&&(1!==s||a!==t[0]))if(n)r=!0;else{const t=s*i,n=t-i,A=t+i;for(let s=0;s!==i;++s){const i=e[t+s];if(i!==e[n+s]||i!==e[A+s]){r=!0;break}}}if(r){if(s!==A){t[A]=t[s];const n=s*i,r=A*i;for(let t=0;t!==i;++t)e[r+t]=e[n+t]}++A}}if(r>0){t[A]=t[r];for(let t=r*i,n=A*i,s=0;s!==i;++s)e[n+s]=e[t+s];++A}return A!==t.length?(this.times=QA.arraySlice(t,0,A),this.values=QA.arraySlice(e,0,A*i)):(this.times=t,this.values=e),this}clone(){const t=QA.arraySlice(this.times,0),e=QA.arraySlice(this.values,0),i=new(0,this.constructor)(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}OA.prototype.TimeBufferType=Float32Array,OA.prototype.ValueBufferType=Float32Array,OA.prototype.DefaultInterpolation=C;class GA extends OA{}GA.prototype.ValueTypeName="bool",GA.prototype.ValueBufferType=Array,GA.prototype.DefaultInterpolation=w,GA.prototype.InterpolantFactoryMethodLinear=void 0,GA.prototype.InterpolantFactoryMethodSmooth=void 0;class VA extends OA{}VA.prototype.ValueTypeName="color";class HA extends OA{}HA.prototype.ValueTypeName="number";class WA extends zA{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t,e,i,n){const r=this.resultBuffer,A=this.sampleValues,s=this.valueSize,a=(i-e)/(n-e);let o=t*s;for(let t=o+s;o!==t;o+=4)Mt.slerpFlat(r,0,A,o-s,A,o,a);return r}}class YA extends OA{InterpolantFactoryMethodLinear(t){return new WA(this.times,this.values,this.getValueSize(),t)}}YA.prototype.ValueTypeName="quaternion",YA.prototype.DefaultInterpolation=C,YA.prototype.InterpolantFactoryMethodSmooth=void 0;class JA extends OA{}JA.prototype.ValueTypeName="string",JA.prototype.ValueBufferType=Array,JA.prototype.DefaultInterpolation=w,JA.prototype.InterpolantFactoryMethodLinear=void 0,JA.prototype.InterpolantFactoryMethodSmooth=void 0;class KA extends OA{}KA.prototype.ValueTypeName="vector";class ZA{constructor(t,e=-1,i,n=2500){this.name=t,this.tracks=i,this.duration=e,this.blendMode=n,this.uuid=V(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],i=t.tracks,n=1/(t.fps||1);for(let t=0,r=i.length;t!==r;++t)e.push(jA(i[t]).scale(n));const r=new this(t.name,t.duration,e,t.blendMode);return r.uuid=t.uuid,r}static toJSON(t){const e=[],i=t.tracks,n={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,n=i.length;t!==n;++t)e.push(OA.toJSON(i[t]));return n}static CreateFromMorphTargetSequence(t,e,i,n){const r=e.length,A=[];for(let t=0;t<r;t++){let s=[],a=[];s.push((t+r-1)%r,t,(t+1)%r),a.push(0,1,0);const o=QA.getKeyframeOrder(s);s=QA.sortedArray(s,1,o),a=QA.sortedArray(a,1,o),n||0!==s[0]||(s.push(r),a.push(a[0])),A.push(new HA(".morphTargetInfluences["+e[t].name+"]",s,a).scale(1/i))}return new this(t,-1,A)}static findByName(t,e){let i=t;if(!Array.isArray(t)){const e=t;i=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<i.length;t++)if(i[t].name===e)return i[t];return null}static CreateClipsFromMorphTargetSequences(t,e,i){const n={},r=/^([\w-]*?)([\d]+)$/;for(let e=0,i=t.length;e<i;e++){const i=t[e],A=i.name.match(r);if(A&&A.length>1){const t=A[1];let e=n[t];e||(n[t]=e=[]),e.push(i)}}const A=[];for(const t in n)A.push(this.CreateFromMorphTargetSequence(t,n[t],e,i));return A}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(t,e,i,n,r){if(0!==i.length){const A=[],s=[];QA.flattenJSON(i,A,s,n),0!==A.length&&r.push(new t(e,A,s))}},n=[],r=t.name||"default",A=t.fps||30,s=t.blendMode;let a=t.length||-1;const o=t.hierarchy||[];for(let t=0;t<o.length;t++){const r=o[t].keys;if(r&&0!==r.length)if(r[0].morphTargets){const t={};let e;for(e=0;e<r.length;e++)if(r[e].morphTargets)for(let i=0;i<r[e].morphTargets.length;i++)t[r[e].morphTargets[i]]=-1;for(const i in t){const t=[],A=[];for(let n=0;n!==r[e].morphTargets.length;++n){const n=r[e];t.push(n.time),A.push(n.morphTarget===i?1:0)}n.push(new HA(".morphTargetInfluence["+i+"]",t,A))}a=t.length*A}else{const A=".bones["+e[t].name+"]";i(KA,A+".position",r,"pos",n),i(YA,A+".quaternion",r,"rot",n),i(KA,A+".scale",r,"scl",n)}}if(0===n.length)return null;return new this(r,a,n,s)}resetDuration(){let t=0;for(let e=0,i=this.tracks.length;e!==i;++e){const i=this.tracks[e];t=Math.max(t,i.times[i.times.length-1])}return this.duration=t,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function jA(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return HA;case"vector":case"vector2":case"vector3":case"vector4":return KA;case"color":return VA;case"quaternion":return YA;case"bool":case"boolean":return GA;case"string":return JA}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],i=[];QA.flattenJSON(t.keys,e,i,"value"),t.times=e,t.values=i}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}function qA(){return("undefined"==typeof performance?Date:performance).now()}class XA{constructor(t,e,i){let n,r,A;switch(this.binding=t,this.valueSize=i,e){case"quaternion":n=this._slerp,r=this._slerpAdditive,A=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*i),this._workIndex=5;break;case"string":case"bool":n=this._select,r=this._select,A=this._setAdditiveIdentityOther,this.buffer=new Array(5*i);break;default:n=this._lerp,r=this._lerpAdditive,A=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*i)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=r,this._setIdentity=A,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const i=this.buffer,n=this.valueSize,r=t*n+n;let A=this.cumulativeWeight;if(0===A){for(let t=0;t!==n;++t)i[r+t]=i[t];A=e}else{A+=e;const t=e/A;this._mixBufferRegion(i,r,0,t,n)}this.cumulativeWeight=A}accumulateAdditive(t){const e=this.buffer,i=this.valueSize,n=i*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,n,0,t,i),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,i=this.buffer,n=t*e+e,r=this.cumulativeWeight,A=this.cumulativeWeightAdditive,s=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const t=e*this._origIndex;this._mixBufferRegion(i,n,t,1-r,e)}A>0&&this._mixBufferRegionAdditive(i,n,this._addIndex*e,1,e);for(let t=e,r=e+e;t!==r;++t)if(i[t]!==i[t+e]){s.setValue(i,n);break}}saveOriginalState(){const t=this.binding,e=this.buffer,i=this.valueSize,n=i*this._origIndex;t.getValue(e,n);for(let t=i,r=n;t!==r;++t)e[t]=e[n+t%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let i=t;i<e;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[e+i]=this.buffer[t+i]}_select(t,e,i,n,r){if(n>=.5)for(let n=0;n!==r;++n)t[e+n]=t[i+n]}_slerp(t,e,i,n){Mt.slerpFlat(t,e,t,e,t,i,n)}_slerpAdditive(t,e,i,n,r){const A=this._workIndex*r;Mt.multiplyQuaternionsFlat(t,A,t,e,t,i),Mt.slerpFlat(t,e,t,e,t,A,n)}_lerp(t,e,i,n,r){const A=1-n;for(let s=0;s!==r;++s){const r=e+s;t[r]=t[r]*A+t[i+s]*n}}_lerpAdditive(t,e,i,n,r){for(let A=0;A!==r;++A){const r=e+A;t[r]=t[r]+t[i+A]*n}}}const $A="\\[\\]\\.:\\/",ts=new RegExp("[\\[\\]\\.:\\/]","g"),es="[^\\[\\]\\.:\\/]",is="[^"+$A.replace("\\.","")+"]",ns=/((?:WC+[\/:])*)/.source.replace("WC",es),rs=/(WCOD+)?/.source.replace("WCOD",is),As=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",es),ss=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",es),as=new RegExp("^"+ns+rs+As+ss+"$"),os=["material","materials","bones"];class ls{constructor(t,e,i){this.path=e,this.parsedPath=i||ls.parseTrackName(e),this.node=ls.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,i){return t&&t.isAnimationObjectGroup?new ls.Composite(t,e,i):new ls(t,e,i)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(ts,"")}static parseTrackName(t){const e=as.exec(t);if(null===e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const i={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){const t=i.nodeName.substring(n+1);-1!==os.indexOf(t)&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=t)}if(null===i.propertyName||0===i.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return i}static findNode(t,e){if(void 0===e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const i=t.skeleton.getBoneByName(e);if(void 0!==i)return i}if(t.children){const i=function(t){for(let n=0;n<t.length;n++){const r=t[n];if(r.name===e||r.uuid===e)return r;const A=i(r.children);if(A)return A}return null},n=i(t.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)t[e++]=i[n]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,i=e.objectName,n=e.propertyName;let r=e.propertyIndex;if(t||(t=ls.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(i){let n=e.objectIndex;switch(i){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===n){n=e;break}break;default:if(void 0===t[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[i]}if(void 0!==n){if(void 0===t[n])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[n]}}const A=t[n];if(void 0===A){const i=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+i+"."+n+" but it wasn't found.",t)}let s=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?s=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(s=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===n){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[r]&&(r=t.morphTargetDictionary[r])}a=this.BindingType.ArrayElement,this.resolvedProperty=A,this.propertyIndex=r}else void 0!==A.fromArray&&void 0!==A.toArray?(a=this.BindingType.HasFromToArray,this.resolvedProperty=A):Array.isArray(A)?(a=this.BindingType.EntireArray,this.resolvedProperty=A):this.propertyName=n;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][s]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}ls.Composite=class{constructor(t,e,i){const n=i||ls.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,n)}getValue(t,e){this.bind();const i=this._targetGroup.nCachedObjects_,n=this._bindings[i];void 0!==n&&n.getValue(t,e)}setValue(t,e){const i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,r=i.length;n!==r;++n)i[n].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].unbind()}},ls.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},ls.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},ls.prototype.GetterByBindingType=[ls.prototype._getValue_direct,ls.prototype._getValue_array,ls.prototype._getValue_arrayElement,ls.prototype._getValue_toArray],ls.prototype.SetterByBindingTypeAndVersioning=[[ls.prototype._setValue_direct,ls.prototype._setValue_direct_setNeedsUpdate,ls.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[ls.prototype._setValue_array,ls.prototype._setValue_array_setNeedsUpdate,ls.prototype._setValue_array_setMatrixWorldNeedsUpdate],[ls.prototype._setValue_arrayElement,ls.prototype._setValue_arrayElement_setNeedsUpdate,ls.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[ls.prototype._setValue_fromArray,ls.prototype._setValue_fromArray_setNeedsUpdate,ls.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class cs{constructor(t,e,i=null,n=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=i,this.blendMode=n;const r=e.tracks,A=r.length,s=new Array(A),a={endingStart:I,endingEnd:I};for(let t=0;t!==A;++t){const e=r[t].createInterpolant(null);s[t]=e,e.settings=a}this._interpolantSettings=a,this._interpolants=s,this._propertyBindings=new Array(A),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,i){if(t.fadeOut(e),this.fadeIn(e),i){const i=this._clip.duration,n=t._clip.duration,r=n/i,A=i/n;t.warp(1,r,e),this.warp(A,1,e)}return this}crossFadeTo(t,e,i){return t.crossFadeFrom(this,e,i)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,i){const n=this._mixer,r=n.time,A=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=n._lendControlInterpolant(),this._timeScaleInterpolant=s);const a=s.parameterPositions,o=s.sampleValues;return a[0]=r,a[1]=r+i,o[0]=t/A,o[1]=e/A,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,i,n){if(!this.enabled)return void this._updateWeight(t);const r=this._startTime;if(null!==r){const n=(t-r)*i;if(n<0||0===i)return;this._startTime=null,e=i*n}e*=this._updateTimeScale(t);const A=this._updateTime(e),s=this._updateWeight(t);if(s>0){const t=this._interpolants,e=this._propertyBindings;if(2501===this.blendMode)for(let i=0,n=t.length;i!==n;++i)t[i].evaluate(A),e[i].accumulateAdditive(s);else for(let i=0,r=t.length;i!==r;++i)t[i].evaluate(A),e[i].accumulate(n,s)}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const i=this._weightInterpolant;if(null!==i){const n=i.evaluate(t)[0];e*=n,t>i.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const i=this._timeScaleInterpolant;if(null!==i){e*=i.evaluate(t)[0],t>i.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,i=this.loop;let n=this.time+t,r=this._loopCount;const A=2202===i;if(0===t)return-1===r?n:A&&1==(1&r)?e-n:n;if(2200===i){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(n>=e)n=e;else{if(!(n<0)){this.time=n;break t}n=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===r&&(t>=0?(r=0,this._setEndings(!0,0===this.repetitions,A)):this._setEndings(0===this.repetitions,!0,A)),n>=e||n<0){const i=Math.floor(n/e);n-=e*i,r+=Math.abs(i);const s=this.repetitions-r;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=t>0?e:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===s){const e=t<0;this._setEndings(e,!e,A)}else this._setEndings(!1,!1,A);this._loopCount=r,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:i})}}else this.time=n;if(A&&1==(1&r))return e-n}return n}_setEndings(t,e,i){const n=this._interpolantSettings;i?(n.endingStart=E,n.endingEnd=E):(n.endingStart=t?this.zeroSlopeAtStart?E:I:S,n.endingEnd=e?this.zeroSlopeAtEnd?E:I:S)}_scheduleFading(t,e,i){const n=this._mixer,r=n.time;let A=this._weightInterpolant;null===A&&(A=n._lendControlInterpolant(),this._weightInterpolant=A);const s=A.parameterPositions,a=A.sampleValues;return s[0]=r,a[0]=e,s[1]=r+t,a[1]=i,this}}const hs=new Float32Array(1);class us extends U{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const i=t._localRoot||this._root,n=t._clip.tracks,r=n.length,A=t._propertyBindings,s=t._interpolants,a=i.uuid,o=this._bindingsByRootAndName;let l=o[a];void 0===l&&(l={},o[a]=l);for(let t=0;t!==r;++t){const r=n[t],o=r.name;let c=l[o];if(void 0!==c)++c.referenceCount,A[t]=c;else{if(c=A[t],void 0!==c){null===c._cacheIndex&&(++c.referenceCount,this._addInactiveBinding(c,a,o));continue}const n=e&&e._propertyBindings[t].binding.parsedPath;c=new XA(ls.create(i,o,n),r.ValueTypeName,r.getValueSize()),++c.referenceCount,this._addInactiveBinding(c,a,o),A[t]=c}s[t].resultBuffer=c.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,i=t._clip.uuid,n=this._actionsByClip[i];this._bindAction(t,n&&n.knownActions[0]),this._addInactiveAction(t,i,e)}const e=t._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const i=e[t];0==i.useCount++&&(this._lendBinding(i),i.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const i=e[t];0==--i.useCount&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,i){const n=this._actions,r=this._actionsByClip;let A=r[e];if(void 0===A)A={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=A;else{const e=A.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=n.length,n.push(t),A.actionByRoot[i]=t}_removeInactiveAction(t){const e=this._actions,i=e[e.length-1],n=t._cacheIndex;i._cacheIndex=n,e[n]=i,e.pop(),t._cacheIndex=null;const r=t._clip.uuid,A=this._actionsByClip,s=A[r],a=s.knownActions,o=a[a.length-1],l=t._byClipCacheIndex;o._byClipCacheIndex=l,a[l]=o,a.pop(),t._byClipCacheIndex=null;delete s.actionByRoot[(t._localRoot||this._root).uuid],0===a.length&&delete A[r],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const i=e[t];0==--i.referenceCount&&this._removeInactiveBinding(i)}}_lendAction(t){const e=this._actions,i=t._cacheIndex,n=this._nActiveActions++,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r}_takeBackAction(t){const e=this._actions,i=t._cacheIndex,n=--this._nActiveActions,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r}_addInactiveBinding(t,e,i){const n=this._bindingsByRootAndName,r=this._bindings;let A=n[e];void 0===A&&(A={},n[e]=A),A[i]=t,t._cacheIndex=r.length,r.push(t)}_removeInactiveBinding(t){const e=this._bindings,i=t.binding,n=i.rootNode.uuid,r=i.path,A=this._bindingsByRootAndName,s=A[n],a=e[e.length-1],o=t._cacheIndex;a._cacheIndex=o,e[o]=a,e.pop(),delete s[r],0===Object.keys(s).length&&delete A[n]}_lendBinding(t){const e=this._bindings,i=t._cacheIndex,n=this._nActiveBindings++,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r}_takeBackBinding(t){const e=this._bindings,i=t._cacheIndex,n=--this._nActiveBindings,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let i=t[e];return void 0===i&&(i=new kA(new Float32Array(2),new Float32Array(2),1,hs),i.__cacheIndex=e,t[e]=i),i}_takeBackControlInterpolant(t){const e=this._controlInterpolants,i=t.__cacheIndex,n=--this._nActiveControlInterpolants,r=e[n];t.__cacheIndex=n,e[n]=t,r.__cacheIndex=i,e[i]=r}clipAction(t,e,i){const n=e||this._root,r=n.uuid;let A="string"==typeof t?ZA.findByName(n,t):t;const s=null!==A?A.uuid:t,a=this._actionsByClip[s];let o=null;if(void 0===i&&(i=null!==A?A.blendMode:D),void 0!==a){const t=a.actionByRoot[r];if(void 0!==t&&t.blendMode===i)return t;o=a.knownActions[0],null===A&&(A=o._clip)}if(null===A)return null;const l=new cs(this,A,e,i);return this._bindAction(l,o),this._addInactiveAction(l,s,r),l}existingAction(t,e){const i=e||this._root,n=i.uuid,r="string"==typeof t?ZA.findByName(i,t):t,A=r?r.uuid:t,s=this._actionsByClip[A];return void 0!==s&&s.actionByRoot[n]||null}stopAllAction(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this}update(t){t*=this.timeScale;const e=this._actions,i=this._nActiveActions,n=this.time+=t,r=Math.sign(t),A=this._accuIndex^=1;for(let s=0;s!==i;++s){e[s]._update(n,t,r,A)}const s=this._bindings,a=this._nActiveBindings;for(let t=0;t!==a;++t)s[t].apply(A);return this}setTime(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,i=t.uuid,n=this._actionsByClip,r=n[i];if(void 0!==r){const t=r.knownActions;for(let i=0,n=t.length;i!==n;++i){const n=t[i];this._deactivateAction(n);const r=n._cacheIndex,A=e[e.length-1];n._cacheIndex=null,n._byClipCacheIndex=null,A._cacheIndex=r,e[r]=A,e.pop(),this._removeInactiveBindingsForAction(n)}delete n[i]}}uncacheRoot(t){const e=t.uuid,i=this._actionsByClip;for(const t in i){const n=i[t].actionByRoot[e];void 0!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}const n=this._bindingsByRootAndName[e];if(void 0!==n)for(const t in n){const e=n[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(t,e){const i=this.existingAction(t,e);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}}const ds=new Uint32Array(512),ps=new Uint32Array(512);for(let t=0;t<256;++t){const e=t-127;e<-27?(ds[t]=0,ds[256|t]=32768,ps[t]=24,ps[256|t]=24):e<-14?(ds[t]=1024>>-e-14,ds[256|t]=1024>>-e-14|32768,ps[t]=-e-1,ps[256|t]=-e-1):e<=15?(ds[t]=e+15<<10,ds[256|t]=e+15<<10|32768,ps[t]=13,ps[256|t]=13):e<128?(ds[t]=31744,ds[256|t]=64512,ps[t]=24,ps[256|t]=24):(ds[t]=31744,ds[256|t]=64512,ps[t]=13,ps[256|t]=13)}const gs=new Uint32Array(2048),ms=new Uint32Array(64),fs=new Uint32Array(64);for(let t=1;t<1024;++t){let e=t<<13,i=0;for(;0==(8388608&e);)e<<=1,i-=8388608;e&=-8388609,i+=947912704,gs[t]=e|i}for(let t=1024;t<2048;++t)gs[t]=939524096+(t-1024<<13);for(let t=1;t<31;++t)ms[t]=t<<23;ms[31]=1199570944,ms[32]=2147483648;for(let t=33;t<63;++t)ms[t]=2147483648+(t-32<<23);ms[63]=3347054592;for(let t=1;t<64;++t)32!==t&&(fs[t]=1024);"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:t}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=t);var vs={},_s=Uint8Array,xs=Uint16Array,Ms=Uint32Array,ys=new _s([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),ws=new _s([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Cs=new _s([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),bs=function(t,e){for(var i=new xs(31),n=0;n<31;++n)i[n]=e+=1<<t[n-1];var r=new Ms(i[30]);for(n=1;n<30;++n)for(var A=i[n];A<i[n+1];++A)r[A]=A-i[n]<<5|n;return[i,r]},Is=bs(ys,2),Es=Is[0],Ss=Is[1];Es[28]=258,Ss[258]=28;var Ds=bs(ws,0),Ts=Ds[0];Ds[1];for(var Bs=new xs(32768),Ls=0;Ls<32768;++Ls){var Ps=(43690&Ls)>>>1|(21845&Ls)<<1;Ps=(61680&(Ps=(52428&Ps)>>>2|(13107&Ps)<<2))>>>4|(3855&Ps)<<4,Bs[Ls]=((65280&Ps)>>>8|(255&Ps)<<8)>>>1}var Rs=function(t,e,i){for(var n=t.length,r=0,A=new xs(e);r<n;++r)t[r]&&++A[t[r]-1];var s,a=new xs(e);for(r=0;r<e;++r)a[r]=a[r-1]+A[r-1]<<1;if(i){s=new xs(1<<e);var o=15-e;for(r=0;r<n;++r)if(t[r])for(var l=r<<4|t[r],c=e-t[r],h=a[t[r]-1]++<<c,u=h|(1<<c)-1;h<=u;++h)s[Bs[h]>>>o]=l}else for(s=new xs(n),r=0;r<n;++r)t[r]&&(s[r]=Bs[a[t[r]-1]++]>>>15-t[r]);return s},Ns=new _s(288);for(Ls=0;Ls<144;++Ls)Ns[Ls]=8;for(Ls=144;Ls<256;++Ls)Ns[Ls]=9;for(Ls=256;Ls<280;++Ls)Ns[Ls]=7;for(Ls=280;Ls<288;++Ls)Ns[Ls]=8;var Qs=new _s(32);for(Ls=0;Ls<32;++Ls)Qs[Ls]=5;var zs=Rs(Ns,9,1),Us=Rs(Qs,5,1),ks=function(t){for(var e=t[0],i=1;i<t.length;++i)t[i]>e&&(e=t[i]);return e},Fs=function(t,e,i){var n=e/8|0;return(t[n]|t[n+1]<<8)>>(7&e)&i},Os=function(t,e){var i=e/8|0;return(t[i]|t[i+1]<<8|t[i+2]<<16)>>(7&e)},Gs=function(t){return(t+7)/8|0},Vs=function(t,e,i){(null==e||e<0)&&(e=0),(null==i||i>t.length)&&(i=t.length);var n=new(2==t.BYTES_PER_ELEMENT?xs:4==t.BYTES_PER_ELEMENT?Ms:_s)(i-e);return n.set(t.subarray(e,i)),n},Hs=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],Ws=function(t,e,i){var n=new Error(e||Hs[t]);if(n.code=t,Error.captureStackTrace&&Error.captureStackTrace(n,Ws),!i)throw n;return n},Ys=function(t,e,i){var n=t.length;if(!n||i&&i.f&&!i.l)return e||new _s(0);var r=!e||i,A=!i||i.i;i||(i={}),e||(e=new _s(3*n));var s=function(t){var i=e.length;if(t>i){var n=new _s(Math.max(2*i,t));n.set(e),e=n}},a=i.f||0,o=i.p||0,l=i.b||0,c=i.l,h=i.d,u=i.m,d=i.n,p=8*n;do{if(!c){a=Fs(t,o,1);var g=Fs(t,o+1,3);if(o+=3,!g){var m=t[(E=Gs(o)+4)-4]|t[E-3]<<8,f=E+m;if(f>n){A&&Ws(0);break}r&&s(l+m),e.set(t.subarray(E,f),l),i.b=l+=m,i.p=o=8*f,i.f=a;continue}if(1==g)c=zs,h=Us,u=9,d=5;else if(2==g){var v=Fs(t,o,31)+257,_=Fs(t,o+10,15)+4,x=v+Fs(t,o+5,31)+1;o+=14;for(var M=new _s(x),y=new _s(19),w=0;w<_;++w)y[Cs[w]]=Fs(t,o+3*w,7);o+=3*_;var C=ks(y),b=(1<<C)-1,I=Rs(y,C,1);for(w=0;w<x;){var E,S=I[Fs(t,o,b)];if(o+=15&S,(E=S>>>4)<16)M[w++]=E;else{var D=0,T=0;for(16==E?(T=3+Fs(t,o,3),o+=2,D=M[w-1]):17==E?(T=3+Fs(t,o,7),o+=3):18==E&&(T=11+Fs(t,o,127),o+=7);T--;)M[w++]=D}}var B=M.subarray(0,v),L=M.subarray(v);u=ks(B),d=ks(L),c=Rs(B,u,1),h=Rs(L,d,1)}else Ws(1);if(o>p){A&&Ws(0);break}}r&&s(l+131072);for(var P=(1<<u)-1,R=(1<<d)-1,N=o;;N=o){var Q=(D=c[Os(t,o)&P])>>>4;if((o+=15&D)>p){A&&Ws(0);break}if(D||Ws(2),Q<256)e[l++]=Q;else{if(256==Q){N=o,c=null;break}var z=Q-254;if(Q>264){var U=ys[w=Q-257];z=Fs(t,o,(1<<U)-1)+Es[w],o+=U}var k=h[Os(t,o)&R],F=k>>>4;k||Ws(3),o+=15&k;L=Ts[F];if(F>3){U=ws[F];L+=Os(t,o)&(1<<U)-1,o+=U}if(o>p){A&&Ws(0);break}r&&s(l+131072);for(var O=l+z;l<O;l+=4)e[l]=e[l-L],e[l+1]=e[l+1-L],e[l+2]=e[l+2-L],e[l+3]=e[l+3-L];l=O}}i.l=c,i.p=N,i.b=l,i.f=a,c&&(a=1,i.m=u,i.d=h,i.n=d)}while(!a);return l==e.length?e:Vs(e,0,l)},Js=new _s(0),Ks=function(t,e,i){for(var n=t(),r=t.toString(),A=r.slice(r.indexOf("[")+1,r.lastIndexOf("]")).replace(/\s+/g,"").split(","),s=0;s<n.length;++s){var a=n[s],o=A[s];if("function"==typeof a){e+=";"+o+"=";var l=a.toString();if(a.prototype)if(-1!=l.indexOf("[native code]")){var c=l.indexOf(" ",8)+1;e+=l.slice(c,l.indexOf("(",c))}else for(var h in e+=l,a.prototype)e+=";"+o+".prototype."+h+"="+a.prototype[h].toString();else e+=l}else i[o]=a}return[e,i]},Zs=[],js=function(t,e,i,n){var r;if(!Zs[i]){for(var A="",s={},a=t.length-1,o=0;o<a;++o)A=(r=Ks(t[o],A,s))[0],s=r[1];Zs[i]=Ks(t[a],A,s)}var l=function(t,e){var i={};for(var n in t)i[n]=t[n];for(var n in e)i[n]=e[n];return i}({},Zs[i][1]);return function(t,e,i,n,r){var A=new Worker(vs[e]||(vs[e]=URL.createObjectURL(new Blob([t+';addEventListener("error",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'],{type:"text/javascript"}))));return A.onmessage=function(t){var e=t.data,i=e.$e$;if(i){var n=new Error(i[0]);n.code=i[1],n.stack=i[2],r(n,null)}else r(null,e)},A.postMessage(i,n),A}(Zs[i][0]+";onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage="+e.toString()+"}",i,l,function(t){var e=[];for(var i in t)t[i].buffer&&e.push((t[i]=new t[i].constructor(t[i])).buffer);return e}(l),n)},qs=function(){return[_s,xs,Ms,ys,ws,Cs,Es,Ts,zs,Us,Bs,Hs,Rs,ks,Fs,Os,Gs,Vs,Ws,Ys,ea,Xs,$s]},Xs=function(t){return postMessage(t,[t.buffer])},$s=function(t){return t&&t.size&&new _s(t.size)};function ta(t,e,i){return i||(i=e,e={}),"function"!=typeof i&&Ws(7),function(t,e,i,n,r,A){var s=js(i,n,r,(function(t,e){s.terminate(),A(t,e)}));return s.postMessage([t,e],e.consume?[t.buffer]:[]),function(){s.terminate()}}(t,e,[qs],(function(t){return Xs(ea(t.data[0],$s(t.data[1])))}),1,i)}function ea(t,e){return Ys(t,e)}var ia="undefined"!=typeof TextDecoder&&new TextDecoder;try{ia.decode(Js,{stream:!0}),1}catch(la){}class na extends mi{static setupMaterial(){na.material=new Ue({vertexColors:!0})}constructor({chunkMaterial:t,chunkSize:e,geometry:i,position:n}){na.material||na.setupMaterial(),super(new Xe,t||na.material),this.geometry.boundingBox=new bt,this.geometry.boundingSphere=new Ht,this.update(i),this.chunk=(new yt).copy(n),this.position.copy(n).multiplyScalar(e),this.updateMatrixWorld(),this.castShadow=!0,this.receiveShadow=!0,this.matrixAutoUpdate=!1}dispose(){const{geometry:t}=this;t.dispose()}update({bounds:t,vertices:e}){const{geometry:i}=this,n=new vA(e,9);i.setAttribute("position",new xA(n,3,0)),i.setAttribute("normal",new xA(n,3,3)),i.setAttribute("color",new xA(n,3,6)),i.boundingBox.min.set(t[0],t[1],t[2]),i.boundingBox.max.set(t[3],t[4],t[5]),i.boundingBox.getBoundingSphere(i.boundingSphere)}}class ra{constructor({buffer:t,instances:e=Math.min(navigator.hardwareConcurrency,4),options:i,program:n,script:r}){this.queue=[],n().then((n=>{this.instances=[...Array(e)].map((()=>{const e=new r;t&&(e.buffer=new Uint8Array(t)),e.run=({operation:i,resolve:n})=>{if(e.isBusy=!0,e.resolve=n,t){const t=i[0].length;i.forEach(((i,n)=>{e.buffer.set(i,t*n)})),e.postMessage(e.buffer,[e.buffer.buffer])}else e.postMessage(i)};const A=()=>{e.removeEventListener("message",A),e.addEventListener("message",s)},s=({data:i})=>{t&&(e.buffer=i.buffer,i=i.data);const{resolve:n}=e;delete e.resolve,n(i);const r=this.queue.shift();r?e.run(r):e.isBusy=!1};return e.addEventListener("message",A),e.postMessage({options:i,program:n}),e})),this.queue.length&&this.queue.splice(0,e).forEach((({operation:t,resolve:e})=>this.run(t).then(e)))}))}dispose(){const{instances:t}=this;t.forEach((t=>t.terminate()))}run(t){const{instances:e,queue:i}=this;return new Promise((n=>{if(!e)return void i.push({operation:t,resolve:n});let r;for(let t=0,i=e.length;t<i;t++)if(!e[t].isBusy){r=e[t];break}r?r.run({operation:t,resolve:n}):i.push({operation:t,resolve:n})}))}}let Aa=!1,sa=1;const aa="setImmediate$"+Math.random()+"$",{length:oa}=aa,la=new Map;function ca(t){return la.set(sa,t),window.postMessage(aa+sa,"*"),sa++}function ha(t){if(Aa)setTimeout(ha,0,t);else{const e=la.get(t);if(e){Aa=!0;try{e()}finally{!function(t){la.delete(t)}(t),Aa=!1}}}}function ua(t){return function(t,e,i,n){function r(t,e,i){var n=i?WebAssembly.instantiateStreaming:WebAssembly.instantiate,r=i?WebAssembly.compileStreaming:WebAssembly.compile;return e?n(t,e):r(t)}var A=null,s="undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node;if(e&&s){var a=require("fs"),o=require("path");return new Promise(((t,i)=>{a.readFile(o.resolve(__dirname,e),((e,A)=>{null!=e&&i(e),t(r(A,n,!1))}))}))}if(e)return r(fetch(e),n,!0);if(s)A=Buffer.from(i,"base64");else{var l=globalThis.atob(i),c=l.length;A=new Uint8Array(new ArrayBuffer(c));for(var h=0;h<c;h++)A[h]=l.charCodeAt(h)}if(t){var u=new WebAssembly.Module(A);return n?new WebAssembly.Instance(u,n):u}return r(A,n,!1)}(0,null,"",t)}window.addEventListener("message",(t=>{t.source===window&&"string"==typeof t.data&&0===t.data.indexOf(aa)&&ha(+t.data.slice(oa))}),!1);var da=null;try{var pa="undefined"!=typeof module&&"function"==typeof module.require&&module.require("worker_threads")||"function"==typeof __non_webpack_require__&&__non_webpack_require__("worker_threads")||"function"==typeof require&&require("worker_threads");da=pa.Worker}catch(t){}var ga,ma,fa,va,_a,xa,Ma,ya=(ga="Lyogcm9sbHVwLXBsdWdpbi13ZWItd29ya2VyLWxvYWRlciAqLwohZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7bGV0IGU7Y29uc3Qgcz0oe2RhdGE6e29wdGlvbnM6e2NodW5rU2l6ZTp0fSxwcm9ncmFtOm59fSk9PnsoKHttZW1vcnk6ZSxwcm9ncmFtOnN9KT0+e2NvbnN0IHI9TWF0aC5jZWlsKGUucmVkdWNlKCgoZSx7dHlwZTpzLHNpemU6cn0pPT5lK3Iqcy5CWVRFU19QRVJfRUxFTUVOVCksMCkvNjU1MzYpKzIsdD1uZXcgV2ViQXNzZW1ibHkuTWVtb3J5KHtpbml0aWFsOnIsbWF4aW11bTpyfSk7cmV0dXJuIFdlYkFzc2VtYmx5Lmluc3RhbnRpYXRlKHMse2Vudjp7bWVtb3J5OnR9fSkudGhlbigocz0+KHttZW1vcnk6ZS5yZWR1Y2UoKChlLHtpZDpyLHR5cGU6bixzaXplOm99KT0+e2NvbnN0IGk9cy5leHBvcnRzLm1hbGxvYyhvKm4uQllURVNfUEVSX0VMRU1FTlQpO3JldHVybiBlW3JdPXthZGRyZXNzOmksdmlldzpuZXcgbih0LmJ1ZmZlcixpLG8pfSxlfSkse30pLHJ1bjpzLmV4cG9ydHMucnVufSkpKX0pKHttZW1vcnk6W3tpZDoiY2h1bmtzIix0eXBlOlVpbnQ4QXJyYXksc2l6ZTp0KnQqdCo0Kjh9LHtpZDoidmVydGljZXMiLHR5cGU6RmxvYXQzMkFycmF5LHNpemU6dCp0KnQqMyo5KjV9LHtpZDoiYm91bmRzIix0eXBlOkZsb2F0MzJBcnJheSxzaXplOjZ9XSxwcm9ncmFtOm59KS50aGVuKCgoe21lbW9yeTpuLHJ1bjpvfSk9PntlPXtjaHVua1NpemU6dCxtZW1vcnk6bixydW46b30sc2VsZi5yZW1vdmVFdmVudExpc3RlbmVyKCJtZXNzYWdlIixzKSxzZWxmLmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLHIpLHNlbGYucG9zdE1lc3NhZ2UoITApfSkpfTtzZWxmLmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLHMpO2NvbnN0IHI9KHtkYXRhOnN9KT0+e2UubWVtb3J5LmNodW5rcy52aWV3LnNldChzKTtjb25zdCByPWUucnVuKGUubWVtb3J5LmNodW5rcy5hZGRyZXNzLGUubWVtb3J5LnZlcnRpY2VzLmFkZHJlc3MsZS5tZW1vcnkuYm91bmRzLmFkZHJlc3MsZS5jaHVua1NpemUpO2lmKDA9PT1yKXJldHVybiB2b2lkIHNlbGYucG9zdE1lc3NhZ2Uoe2J1ZmZlcjpzLGRhdGE6ITF9LFtzLmJ1ZmZlcl0pO2NvbnN0IHQ9ZS5tZW1vcnkuYm91bmRzLnZpZXcuc2xpY2UoMCksbj1lLm1lbW9yeS52ZXJ0aWNlcy52aWV3LnNsaWNlKDAsMypyKjkpO3NlbGYucG9zdE1lc3NhZ2Uoe2J1ZmZlcjpzLGRhdGE6e2JvdW5kczp0LHZlcnRpY2VzOm59fSxbcy5idWZmZXIsdC5idWZmZXIsbi5idWZmZXJdKX19KCk7Cgo=",null,!1,"[object process]"===Object.prototype.toString.call("undefined"!=typeof process?process:0)?(va=void 0===(ma=null)?null:ma,_a=function(t,e){return Buffer.from(t,"base64").toString(e?"utf16":"utf8")}(ga,void 0!==(fa=!1)&&fa),xa=_a.indexOf("\n",10)+1,Ma=_a.substring(xa)+(va?"//# sourceMappingURL="+va:""),function(t){return new da(Ma,Object.assign({},t,{eval:!0}))}):function(t,e,i){var n;return function(t){return n=n||function(t,e,i){var n=void 0===e?null:e,r=function(t,e){var i=atob(t);if(e){for(var n=new Uint8Array(i.length),r=0,A=i.length;r<A;++r)n[r]=i.charCodeAt(r);return String.fromCharCode.apply(null,new Uint16Array(n.buffer))}return i}(t,void 0!==i&&i),A=r.indexOf("\n",10)+1,s=r.substring(A)+(n?"//# sourceMappingURL="+n:""),a=new Blob([s],{type:"application/javascript"});return URL.createObjectURL(a)}("Lyogcm9sbHVwLXBsdWdpbi13ZWItd29ya2VyLWxvYWRlciAqLwohZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7bGV0IGU7Y29uc3Qgcz0oe2RhdGE6e29wdGlvbnM6e2NodW5rU2l6ZTp0fSxwcm9ncmFtOm59fSk9PnsoKHttZW1vcnk6ZSxwcm9ncmFtOnN9KT0+e2NvbnN0IHI9TWF0aC5jZWlsKGUucmVkdWNlKCgoZSx7dHlwZTpzLHNpemU6cn0pPT5lK3Iqcy5CWVRFU19QRVJfRUxFTUVOVCksMCkvNjU1MzYpKzIsdD1uZXcgV2ViQXNzZW1ibHkuTWVtb3J5KHtpbml0aWFsOnIsbWF4aW11bTpyfSk7cmV0dXJuIFdlYkFzc2VtYmx5Lmluc3RhbnRpYXRlKHMse2Vudjp7bWVtb3J5OnR9fSkudGhlbigocz0+KHttZW1vcnk6ZS5yZWR1Y2UoKChlLHtpZDpyLHR5cGU6bixzaXplOm99KT0+e2NvbnN0IGk9cy5leHBvcnRzLm1hbGxvYyhvKm4uQllURVNfUEVSX0VMRU1FTlQpO3JldHVybiBlW3JdPXthZGRyZXNzOmksdmlldzpuZXcgbih0LmJ1ZmZlcixpLG8pfSxlfSkse30pLHJ1bjpzLmV4cG9ydHMucnVufSkpKX0pKHttZW1vcnk6W3tpZDoiY2h1bmtzIix0eXBlOlVpbnQ4QXJyYXksc2l6ZTp0KnQqdCo0Kjh9LHtpZDoidmVydGljZXMiLHR5cGU6RmxvYXQzMkFycmF5LHNpemU6dCp0KnQqMyo5KjV9LHtpZDoiYm91bmRzIix0eXBlOkZsb2F0MzJBcnJheSxzaXplOjZ9XSxwcm9ncmFtOm59KS50aGVuKCgoe21lbW9yeTpuLHJ1bjpvfSk9PntlPXtjaHVua1NpemU6dCxtZW1vcnk6bixydW46b30sc2VsZi5yZW1vdmVFdmVudExpc3RlbmVyKCJtZXNzYWdlIixzKSxzZWxmLmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLHIpLHNlbGYucG9zdE1lc3NhZ2UoITApfSkpfTtzZWxmLmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLHMpO2NvbnN0IHI9KHtkYXRhOnN9KT0+e2UubWVtb3J5LmNodW5rcy52aWV3LnNldChzKTtjb25zdCByPWUucnVuKGUubWVtb3J5LmNodW5rcy5hZGRyZXNzLGUubWVtb3J5LnZlcnRpY2VzLmFkZHJlc3MsZS5tZW1vcnkuYm91bmRzLmFkZHJlc3MsZS5jaHVua1NpemUpO2lmKDA9PT1yKXJldHVybiB2b2lkIHNlbGYucG9zdE1lc3NhZ2Uoe2J1ZmZlcjpzLGRhdGE6ITF9LFtzLmJ1ZmZlcl0pO2NvbnN0IHQ9ZS5tZW1vcnkuYm91bmRzLnZpZXcuc2xpY2UoMCksbj1lLm1lbW9yeS52ZXJ0aWNlcy52aWV3LnNsaWNlKDAsMypyKjkpO3NlbGYucG9zdE1lc3NhZ2Uoe2J1ZmZlcjpzLGRhdGE6e2JvdW5kczp0LHZlcnRpY2VzOm59fSxbcy5idWZmZXIsdC5idWZmZXIsbi5idWZmZXJdKX19KCk7Cgo=",null,false),new Worker(n,t)}}());const wa=new yt,Ca=new yt,ba=new yt;class Ia extends cA{constructor({chunkMaterial:t=null,chunkSize:e=32,renderRadius:i=5,storage:n=null,worldgen:r=null}={}){super(),this.chunkMaterial=t,this.chunkSize=e,this.anchorChunk=new yt(1/0,1/0,1/0),this.dataChunks=new Map,this.renderChunks=new Map,this.renderRadius=i,this.renderGrid=Ia.getRenderGrid(i),this.loading={data:new Map,neighbors:new Map,mesh:new Map},this.saving=new Map,this.storage=n,this.workers={mesher:new ra({buffer:e*e*e*4*8,options:{chunkSize:e},program:ua,script:ya}),...r?{worldgen:r(e)}:{}}}dispose(){const{renderChunks:t,workers:e}=this;t.forEach((t=>t.dispose())),[e.mesher,e.worldgen].forEach((t=>{t&&t.dispose()}))}reset(){const{anchorChunk:t,dataChunks:e,renderChunks:i,loading:n,workers:r}=this;t.set(1/0,1/0,1/0),e.clear(),i.forEach((t=>{t.dispose(),this.remove(t)})),i.clear(),n.data.forEach((t=>{t.abort=!0})),n.data.clear(),n.neighbors.clear(),n.mesh.forEach((t=>{t.abort=!0})),n.mesh.clear(),[r.mesher,r.worldgen].forEach((t=>{t&&(t.queue.length=0)}))}importChunks(t,e=!0){const{chunkSize:i,dataChunks:n}=this,[r]=new Uint16Array(t.slice(0,2)),A=JSON.parse((new TextDecoder).decode(t.slice(2,2+r))),s=6+i*i*i*4;if(this.reset(),A.chunkSize!==i)throw new Error("World chunkSize is: ${chunkSize} but imported chunkSize is: ${metadata.chunkSize}. They need to match.");for(let e=2+r;e<t.byteLength;e+=s){const i=new Int16Array(t.slice(e,e+6));n.set(`${i[0]}:${i[1]}:${i[2]}`,new Uint8Array(t.slice(e+6,e+s)))}return e&&(this.scale.setScalar(A.scale),this.updateMatrixWorld()),A}generateChunk(t,e,i){const{chunkSize:n,dataChunks:r,loading:{data:A},storage:s,workers:a}=this,o=`${t}:${e}:${i}`;if(A.has(o))return;const l={abort:!1};A.set(o,l),ca((()=>{l.abort||(s?s.get(o):Promise.resolve(!1)).then((r=>{if(!l.abort)return r||(a.worldgen?a.worldgen.run({x:t,y:e,z:i}):new Uint8Array(n*n*n*4))})).then((n=>{l.abort||(A.delete(o),r.set(o,n),this.loadPendingNeighbors(t,e,i))}))}))}loadChunk(t,e,i){const{chunkMaterial:n,chunkSize:r,dataChunks:A,renderChunks:s,loading:a,workers:o}=this,l=`${t}:${e}:${i}`;if(a.mesh.has(l))return;let c=!1;const h=[];for(let n=i;n<=i+1;n++)for(let i=e;i<=e+1;i++)for(let e=t;e<=t+1;e++){const t=`${e}:${i}:${n}`;A.has(t)?h.push(A.get(t)):(this.generateChunk(e,i,n),c=!0)}if(c)return void a.neighbors.set(l,!0);a.neighbors.delete(l);const u={abort:!1};a.mesh.set(l,u),ca((()=>{u.abort||o.mesher.run(h).then((A=>{if(u.abort)return;const o=s.get(l);if(A)if(a.mesh.delete(l),o)o.update(A);else{const a=new na({chunkMaterial:n,chunkSize:r,geometry:A,position:{x:t,y:e,z:i}});this.add(a),s.set(l,a)}else o&&(o.dispose(),this.remove(o))}))}))}loadPendingNeighbors(t,e,i){const{loading:{neighbors:n}}=this;for(let r=i-1;r<=i+1;r++)for(let i=e-1;i<=e+1;i++)for(let e=t-1;e<=t+1;e++)n.has(`${e}:${i}:${r}`)&&this.loadChunk(e,i,r)}saveChunk(t,e,i){const{dataChunks:n,saving:r,storage:A}=this,s=`${t}:${e}:${i}`;A&&A.set&&!r.has(s)&&(r.set(s,!0),setTimeout((()=>{r.delete(s),A.set(s,n.get(s))}),A.saveInterval||0))}updateChunks(t){const{anchorChunk:e,chunkSize:i,renderChunks:n,renderGrid:r,renderRadius:A}=this;if(this.worldToLocal(wa.copy(t)).divideScalar(i).floor(),e.equals(wa))return;e.copy(wa);const s=1.25*A;n.forEach(((t,i)=>{e.distanceTo(t.chunk)>s&&(t.dispose(),this.remove(t),n.delete(i))})),r.forEach((t=>{wa.addVectors(e,t);const i=`${wa.x}:${wa.y}:${wa.z}`;n.has(i)||this.loadChunk(wa.x,wa.y,wa.z)}))}updateVolume(t,e,i,n){const{chunkSize:r,dataChunks:A,loading:{mesh:s}}=this;this.worldToLocal(Ca.copy(t)).floor();const a=new Map;return Ia.getBrush(e).forEach((t=>{ba.addVectors(Ca,t),wa.copy(ba).divideScalar(r).floor(),ba.addScaledVector(wa,-r).floor();const e=`${wa.x}:${wa.y}:${wa.z}`,s=A.get(e);if(s){const t=4*(ba.z*r*r+ba.y*r+ba.x);s[t]=i,n&&s.set([n.r,n.g,n.b],t+1),this.saveChunk(wa.x,wa.y,wa.z),a.set(e,!0),0===ba.x&&a.set(`${wa.x-1}:${wa.y}:${wa.z}`,!0),0===ba.y&&a.set(`${wa.x}:${wa.y-1}:${wa.z}`,!0),0===ba.z&&a.set(`${wa.x}:${wa.y}:${wa.z-1}`,!0),0===ba.x&&0===ba.y&&0===ba.z&&a.set(`${wa.x-1}:${wa.y-1}:${wa.z-1}`,!0),0===ba.x&&0===ba.y&&a.set(`${wa.x-1}:${wa.y-1}:${wa.z}`,!0),0===ba.y&&0===ba.z&&a.set(`${wa.x}:${wa.y-1}:${wa.z-1}`,!0),0===ba.x&&0===ba.z&&a.set(`${wa.x-1}:${wa.y}:${wa.z-1}`,!0)}})),a.forEach(((t,e)=>{s.has(e)&&(s.get(e).abort=!0,s.delete(e));const[i,n,r]=e.split(":");this.loadChunk(parseInt(i,10),parseInt(n,10),parseInt(r,10))})),a.size}static getBrush(t){const{brushes:e}=Ia;let i=e.get(t);if(!i){i=[];const n=(new yt).setScalar(.5);for(let e=-t;e<=t+1;e+=1)for(let r=-t;r<=t+1;r+=1)for(let A=-t;A<=t+1;A+=1){const s=new yt(A,r,e);s.distanceTo(n)<=t&&i.push(s)}i.sort(((t,e)=>t.distanceTo(n)-e.distanceTo(n))),e.set(t,i)}return i}static getRenderGrid(t){const e=[],i=new yt;for(let n=-t;n<=t;n+=1)for(let r=-t;r<=t;r+=1)for(let A=-t;A<=t;A+=1){const s=new yt(A,r,n);s.distanceTo(i)<=t&&e.push(s)}return e.sort(((t,e)=>t.distanceTo(i)-e.distanceTo(i))),e}}Ia.brushes=new Map;try{var Ea="undefined"!=typeof module&&"function"==typeof module.require&&module.require("worker_threads")||"function"==typeof __non_webpack_require__&&__non_webpack_require__("worker_threads")||"function"==typeof require&&require("worker_threads");Ea.Worker}catch(t){}var Sa="[object process]"===Object.prototype.toString.call("undefined"!=typeof process?process:0);!function(t,e,i){Sa?function(t,e,i){var n=void 0===e?null:e,r=function(t,e){return Buffer.from(t,"base64").toString(e?"utf16":"utf8")}(t,void 0!==i&&i),A=r.indexOf("\n",10)+1,s=r.substring(A)+(n?"//# sourceMappingURL="+n:"")}(t,null,false):function(t,e,i){var n}()}("Lyogcm9sbHVwLXBsdWdpbi13ZWItd29ya2VyLWxvYWRlciAqLwohZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7bGV0IGU7Y29uc3Qgcj17Y2F2ZTowLHRlcnJhaW46MX0scz0oe2RhdGE6e29wdGlvbnM6e2NodW5rU2l6ZTp0LGdlbmVyYXRvcjptLHNlZWQ6b30scHJvZ3JhbTphfX0pPT57KCh7bWVtb3J5OmUscHJvZ3JhbTpyfSk9Pntjb25zdCBzPU1hdGguY2VpbChlLnJlZHVjZSgoKGUse3R5cGU6cixzaXplOnN9KT0+ZStzKnIuQllURVNfUEVSX0VMRU1FTlQpLDApLzY1NTM2KSsyLG49bmV3IFdlYkFzc2VtYmx5Lk1lbW9yeSh7aW5pdGlhbDpzLG1heGltdW06c30pO3JldHVybiBXZWJBc3NlbWJseS5pbnN0YW50aWF0ZShyLHtlbnY6e21lbW9yeTpufX0pLnRoZW4oKHI9Pih7bWVtb3J5OmUucmVkdWNlKCgoZSx7aWQ6cyx0eXBlOnQsc2l6ZTptfSk9Pntjb25zdCBvPXIuZXhwb3J0cy5tYWxsb2MobSp0LkJZVEVTX1BFUl9FTEVNRU5UKTtyZXR1cm4gZVtzXT17YWRkcmVzczpvLHZpZXc6bmV3IHQobi5idWZmZXIsbyxtKX0sZX0pLHt9KSxydW46ci5leHBvcnRzLnJ1bn0pKSl9KSh7bWVtb3J5Olt7aWQ6ImNodW5rIix0eXBlOlVpbnQ4QXJyYXksc2l6ZTp0KnQqdCo0fV0scHJvZ3JhbTphfSkudGhlbigoKHttZW1vcnk6YSxydW46aX0pPT57ZT17Y2h1bmtTaXplOnQsZ2VuZXJhdG9yOnJbbV18fDAsbWVtb3J5OmEscnVuOmksc2VlZDpvfSxzZWxmLnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLHMpLHNlbGYuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsbiksc2VsZi5wb3N0TWVzc2FnZSghMCl9KSl9O3NlbGYuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIscyk7Y29uc3Qgbj0oe2RhdGE6e3g6cix5OnMsejpufX0pPT57ZS5ydW4oZS5tZW1vcnkuY2h1bmsuYWRkcmVzcyxlLmNodW5rU2l6ZSxlLmdlbmVyYXRvcixlLnNlZWQscixzLG4pO2NvbnN0IHQ9ZS5tZW1vcnkuY2h1bmsudmlldy5zbGljZSgwKTtzZWxmLnBvc3RNZXNzYWdlKHQsW3QuYnVmZmVyXSl9fSgpOwoK");const Da="https://rawcdn.githack.com/danielesteban/softxels-example-worlds/561b9e385621338bd82216e6eab25bec53f65a4e/";var Ta={enableDragAndDrop:!0,initialWorldURL:`${Da}world1.bin`,renderRadius:10,worldMenu:[{name:"Museum",url:`${Da}world1.bin`},{name:"Bedroom",url:`${Da}world2.bin`},{name:"Cloister",url:`${Da}world3.bin`}]};class Ba{constructor(t,e){this.dom=document.createElement("div"),this.dom.id="worlds",document.body.appendChild(this.dom),t.forEach((t=>{const i=document.createElement("button");i.innerText=t.name,i.addEventListener("click",(()=>e(t)),!1),this.dom.appendChild(i)}))}dispose(){const{dom:t}=this;document.body.removeChild(t)}}function La(t){let e,i,n,r=0;for(let A=0;A<t.length;++A){const s=t[A];if(s.isInterleavedBufferAttribute)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. InterleavedBufferAttributes are not supported."),null;if(void 0===e&&(e=s.array.constructor),e!==s.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(void 0===i&&(i=s.itemSize),i!==s.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(void 0===n&&(n=s.normalized),n!==s.normalized)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;r+=s.array.length}const A=new e(r);let s=0;for(let e=0;e<t.length;++e)A.set(t[e].array,s),s+=t[e].array.length;return new Oe(A,i,n)}class Pa extends IA{static setupAnimations(){const t=(t,e,i)=>(new Mt).setFromEuler(new le(t,e,i)).toArray(),e=new Float32Array([0,1]),i=new Float32Array([...t(0,0,0),...t(.5*Math.PI,0,0)]),n=new Float32Array([...t(0,0,.5*Math.PI),...t(0,0,.25*Math.PI)]),r=new Float32Array([...t(0,0,0),...t(0,0,-.25*Math.PI)]),A=Array.from({length:3},((t,e)=>new Float32Array([0,1-.2*e])));Pa.animations=[new ZA("thumb",1,Array.from({length:3},((t,i)=>new YA(`.bones[${i+1}].quaternion`,e,0===i?n:r)))),new ZA("index",1,Array.from({length:3},((t,n)=>new YA(`.bones[${n+4}].quaternion`,e,i)))),new ZA("middle",1,Array.from({length:9},((t,e)=>new YA(`.bones[${e+7}].quaternion`,A[Math.floor(e/3)],i))))]}static setupGeometry(){const t=[],e=(e,i)=>{const{w:n,h:r,d:A,x:s,y:a,z:o}=e,l=new vi(n,r,A,Math.round(100*n),Math.round(100*r),Math.round(100*A));l.deleteAttribute("normal"),l.deleteAttribute("uv"),l.translate(s,a,o);const c=l.toNonIndexed(),{count:h}=c.getAttribute("position"),u=new Oe(new Float32Array(3*h),3),d=new Oe(new Float32Array(4*h),4),p=new Oe(new Float32Array(4*h),4);let g;for(let t=0;t<h;t+=1)t%6==0&&(g=1-.1*Math.random()-(i?0:.1)),u.setXYZ(t,g,g,g),d.setXYZW(t,i,0,0,0),p.setXYZW(t,1,0,0,0);c.setAttribute("color",u),c.setAttribute("skinIndex",d),c.setAttribute("skinWeight",p),t.push(c)},{dimensions:{base:i,phalange:n}}=Pa;e(i,0);for(let t=1;t<16;t+=1)e(n,t);Pa.geometry=function(t,e=1e-4){e=Math.max(e,Number.EPSILON);const i={},n=t.getIndex(),r=t.getAttribute("position"),A=n?n.count:r.count;let s=0;const a=Object.keys(t.attributes),o={},l={},c=[],h=["getX","getY","getZ","getW"];for(let e=0,i=a.length;e<i;e++){const i=a[e];o[i]=[];const n=t.morphAttributes[i];n&&(l[i]=new Array(n.length).fill().map((()=>[])))}const u=Math.log10(1/e),d=Math.pow(10,u);for(let e=0;e<A;e++){const r=n?n.getX(e):e;let A="";for(let e=0,i=a.length;e<i;e++){const i=a[e],n=t.getAttribute(i),s=n.itemSize;for(let t=0;t<s;t++)A+=~~(n[h[t]](r)*d)+","}if(A in i)c.push(i[A]);else{for(let e=0,i=a.length;e<i;e++){const i=a[e],n=t.getAttribute(i),A=t.morphAttributes[i],s=n.itemSize,c=o[i],u=l[i];for(let t=0;t<s;t++){const e=h[t];if(c.push(n[e](r)),A)for(let t=0,i=A.length;t<i;t++)u[t].push(A[t][e](r))}}i[A]=s,c.push(s),s++}}const p=t.clone();for(let e=0,i=a.length;e<i;e++){const i=a[e],n=t.getAttribute(i),r=new n.array.constructor(o[i]),A=new Oe(r,n.itemSize,n.normalized);if(p.setAttribute(i,A),i in l)for(let e=0;e<l[i].length;e++){const n=t.morphAttributes[i][e],r=new n.array.constructor(l[i][e]),A=new Oe(r,n.itemSize,n.normalized);p.morphAttributes[i][e]=A}}return p.setIndex(c),p}(function(t,e=!1){const i=null!==t[0].index,n=new Set(Object.keys(t[0].attributes)),r=new Set(Object.keys(t[0].morphAttributes)),A={},s={},a=t[0].morphTargetsRelative,o=new Xe;let l=0;for(let c=0;c<t.length;++c){const h=t[c];let u=0;if(i!==(null!==h.index))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+c+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const t in h.attributes){if(!n.has(t))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+c+'. All geometries must have compatible attributes; make sure "'+t+'" attribute exists among all geometries, or in none of them.'),null;void 0===A[t]&&(A[t]=[]),A[t].push(h.attributes[t]),u++}if(u!==n.size)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+c+". Make sure all geometries have the same number of attributes."),null;if(a!==h.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+c+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const t in h.morphAttributes){if(!r.has(t))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+c+".  .morphAttributes must be consistent throughout all geometries."),null;void 0===s[t]&&(s[t]=[]),s[t].push(h.morphAttributes[t])}if(o.userData.mergedUserData=o.userData.mergedUserData||[],o.userData.mergedUserData.push(h.userData),e){let t;if(i)t=h.index.count;else{if(void 0===h.attributes.position)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+c+". The geometry must have either an index or a position attribute"),null;t=h.attributes.position.count}o.addGroup(l,t,c),l+=t}}if(i){let e=0;const i=[];for(let n=0;n<t.length;++n){const r=t[n].index;for(let t=0;t<r.count;++t)i.push(r.getX(t)+e);e+=t[n].attributes.position.count}o.setIndex(i)}for(const t in A){const e=La(A[t]);if(!e)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the "+t+" attribute."),null;o.setAttribute(t,e)}for(const t in s){const e=s[t][0].length;if(0===e)break;o.morphAttributes=o.morphAttributes||{},o.morphAttributes[t]=[];for(let i=0;i<e;++i){const e=[];for(let n=0;n<s[t].length;++n)e.push(s[t][n][i]);const n=La(e);if(!n)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the "+t+" morphAttribute."),null;o.morphAttributes[t].push(n)}}return o}(t)),Pa.bones=[new yt(0,0,0)];for(let t=0;t<5;t+=1)for(let e=0;e<3;e+=1){let r,A;0===t?(r=-.03,A=-.01):(r=.0225*(t-1)-.034,A=.5*i.h),Pa.bones.push(new yt((0===e?r:0)+.001*Math.random()-5e-4,0===e?A:n.h,.001*Math.random()-5e-4))}}static setupMaterial(){Pa.material=new Ue({color:1118481,vertexColors:!0})}constructor({color:t,handedness:e="right"}={}){Pa.animations||Pa.setupAnimations(),Pa.geometry&&Pa.bones||Pa.setupGeometry(),Pa.material||Pa.setupMaterial();let{material:i}=Pa;t&&(i=i.clone(),i.color.copy(t)),super(Pa.geometry,i),this.handedness=e,this.position.set(0,-.1/3,.05),this.rotation.set(-.5*Math.PI,.5*Math.PI,0),"right"===e&&(this.scale.set(-1,1,1),this.rotation.y=-.5*Math.PI);const n=[new EA];this.add(n[0]);for(let t=0;t<5;t+=1){let t=n[0];for(let e=0;e<3;e+=1){const e=new EA;n.push(e),t.add(e),t=e}}this.bind(new BA(n)),this.skeleton.bones.forEach(((t,e)=>t.position.copy(Pa.bones[e]))),this.mixer=new us(this),this.fingers=Pa.animations.map((t=>{const e=this.mixer.clipAction(t);return e.clampWhenFinished=!0,e.loop=2200,e.timeScale=-1,e.play(),e}))}onAnimationTick(t){const{mixer:e}=this;e.update(t)}setFinger(t,e){const i=this.state||0,n={thumb:1&i,index:2&i,middle:4&i};n[t]=e,this.setFingers(n)}setFingers(t){const{fingers:e}=this,{animationSpeed:i}=Pa;"object"==typeof t&&(t=(t.thumb?1:0)|(t.index?2:0)|(t.middle?4:0)),this.state!==t&&(this.state=t,e.forEach(((e,n)=>{const r=i*(t&1<<n?1:-1);e.timeScale!==r&&(e.timeScale=r,e.paused=!1,e.play())})))}}Pa.animationSpeed=4,Pa.dimensions={base:{w:.08,h:.08,d:.015,x:0,y:0,z:0},phalange:{w:.02,h:.02,d:.02,x:0,y:.01,z:0}};class Ra{constructor(t,e){this.attachments=[],this.buttons={primary:!1,secondary:!1,tertiary:!1,interact:!1,run:!1},this.buttonState={...this.buttons},this.controllers=Array.from({length:2},((t,i)=>{const n=e.getController(i);return n.buttons={trigger:!1,grip:!1,primary:!1,secondary:!1,tertiary:!1},n.joystick=new q,n.addEventListener("connected",(t=>{n.gamepad=t.data.gamepad,n.hand=new Pa({handedness:t.data.handedness}),n.add(n.hand),this.attachments.forEach((t=>{t.handedness===n.hand.handedness&&n.add(t)}))})),n.addEventListener("disconnected",(()=>{this.attachments.forEach((t=>{t.parent===n&&n.remove(t)})),n.remove(n.hand),delete n.gamepad,delete n.hand})),n})),this.gamepad=!1,this.look=new q,this.movement=new q,this.mouse=new q,this.keyboard=new q,this.pointer=new q,this.speed=4,this.target=t,this.onGamepadDisconnected=this.onGamepadDisconnected.bind(this),this.onGamepadConnected=this.onGamepadConnected.bind(this),this.onKeyDown=this.onKeyDown.bind(this),this.onKeyUp=this.onKeyUp.bind(this),this.onMouseDown=this.onMouseDown.bind(this),this.onMouseUp=this.onMouseUp.bind(this),this.onMouseMove=this.onMouseMove.bind(this),this.onMouseWheel=this.onMouseWheel.bind(this),this.onPointerLock=this.onPointerLock.bind(this),window.addEventListener("gamepaddisconnected",this.onGamepadDisconnected,!1),window.addEventListener("gamepadconnected",this.onGamepadConnected,!1),window.addEventListener("keydown",this.onKeyDown,!1),window.addEventListener("keyup",this.onKeyUp,!1),t.addEventListener("mousedown",this.onMouseDown,!1),window.addEventListener("mouseup",this.onMouseUp,!1),window.addEventListener("mousemove",this.onMouseMove,!1),window.addEventListener("wheel",this.onMouseWheel,{passive:!1}),document.addEventListener("pointerlockchange",this.onPointerLock,!1)}dispose(){window.removeEventListener("gamepaddisconnected",this.onGamepadDisconnected),window.removeEventListener("gamepadconnected",this.onGamepadConnected),window.removeEventListener("keydown",this.onKeyDown),window.removeEventListener("keyup",this.onKeyUp),this.target.removeEventListener("mousedown",this.onMouseDown),window.removeEventListener("mouseup",this.onMouseUp),window.removeEventListener("mousemove",this.onMouseMove),window.removeEventListener("wheel",this.onMouseWheel),document.removeEventListener("pointerlockchange",this.onPointerLock),document.body.classList.remove("pointerlock")}lock(){const{isLocked:t,target:e}=this;t||e.requestPointerLock()}unlock(){const{isLocked:t}=this;t&&document.exitPointerLock()}onAnimationTick(t){const{buttons:e,buttonState:i,controllers:n,gamepad:r,keyboard:A,look:s,mouse:a,movement:o}=this;n.forEach((({buttons:e,gamepad:i,hand:n,joystick:r})=>{i&&([["trigger",i.buttons[0]&&i.buttons[0].pressed],["grip",i.buttons[1]&&i.buttons[1].pressed],["primary",i.buttons[4]&&i.buttons[4].pressed],["secondary",i.buttons[5]&&i.buttons[5].pressed],["tertiary",i.buttons[3]&&i.buttons[3].pressed],["forwards",i.axes[3]<=-.75],["backwards",i.axes[3]>=.75],["leftwards",i.axes[2]<=-.75],["rightwards",i.axes[2]>=.75]].forEach((([t,i])=>{e[`${t}Down`]=i&&e[t]!==i,e[`${t}Up`]=!i&&e[t]!==i,e[t]=i})),n.setFingers({thumb:i.buttons[3]&&i.buttons[3].touched,index:i.buttons[0]&&i.buttons[0].pressed,middle:i.buttons[1]&&i.buttons[1].pressed}),n.onAnimationTick(t),r.set(Math.abs(i.axes[2])>.1?i.axes[2]:0,Math.abs(i.axes[3])>.1?-i.axes[3]:0))})),s.copy(a),a.set(0,0),o.copy(A);let l={};if(!1!==r){const{axes:t,buttons:e}=navigator.getGamepads()[r];Math.max(Math.abs(t[0]),Math.abs(t[1]))>.1&&o.set(t[0],-t[1]),Math.max(Math.abs(t[2]),Math.abs(t[3]))>.1&&s.set(.03*-t[2],.03*t[3]),l={primary:e[6]&&e[6].pressed,secondary:e[7]&&e[7].pressed,tertiary:!1,interact:e[0]&&e[0].pressed,run:e[10]&&e[10].pressed}}["primary","secondary","tertiary","interact","run"].forEach((t=>{const n=i[t]||l[t];e[`${t}Down`]=n&&e[t]!==n,e[`${t}Up`]=!n&&e[t]!==n,e[t]=n}))}onGamepadDisconnected({gamepad:{index:t}}){const{gamepad:e}=this;e===t&&(this.gamepad=!1)}onGamepadConnected({gamepad:{index:t}}){this.gamepad=t}onKeyDown({key:t,repeat:e,target:i}){const{buttonState:n,isLocked:r,keyboard:A}=this;if(r&&!e&&"INPUT"!==i.tagName)switch(t.toLowerCase()){case"w":A.y=1;break;case"s":A.y=-1;break;case"a":A.x=-1;break;case"d":A.x=1;break;case"e":n.interact=!0;break;case"shift":n.run=!0}}onKeyUp({key:t}){const{buttonState:e,isLocked:i,keyboard:n}=this;if(i)switch(t.toLowerCase()){case"w":n.y>0&&(n.y=0);break;case"s":n.y<0&&(n.y=0);break;case"a":n.x<0&&(n.x=0);break;case"d":n.x>0&&(n.x=0);break;case"e":e.interact=!1;break;case"shift":e.run=!1}}onMouseDown({button:t}){const{buttonState:e,isLocked:i}=this;if(i)switch(t){case 0:e.primary=!0;break;case 1:e.tertiary=!0;break;case 2:e.secondary=!0}else this.lock()}onMouseUp({button:t}){const{buttonState:e,isLocked:i}=this;if(i)switch(t){case 0:e.primary=!1;break;case 1:e.tertiary=!1;break;case 2:e.secondary=!1}}onMouseMove({clientX:t,clientY:e,movementX:i,movementY:n}){const{isLocked:r,mouse:A,pointer:s}=this;r&&(A.x-=.003*i,A.y-=.003*n,s.set(t/window.innerWidth*2-1,-e/window.innerHeight*2+1))}onMouseWheel(t){t.ctrlKey&&t.preventDefault();const{minSpeed:e,speedRange:i}=Ra,{speed:n}=this,r=Math.min(Math.max((Math.log(n)-e)/i-3e-4*t.deltaY,0),1);this.speed=Math.exp(e+r*i)}onPointerLock(){const{buttonState:t,keyboard:e}=this;this.isLocked=!!document.pointerLockElement,document.body.classList[this.isLocked?"add":"remove"]("pointerlock"),this.isLocked||(t.primary=!1,t.secondary=!1,t.tertiary=!1,t.interact=!1,t.run=!1,e.set(0,0))}}Ra.minSpeed=Math.log(1),Ra.maxSpeed=Math.log(10),Ra.speedRange=Ra.maxSpeed-Ra.minSpeed;const Na=new yt,Qa=new yt,za=new yt,Ua=new yt,ka=new yt,Fa=new yt(0,1,0),Oa=new $t,Ga=new $t;const Va=new Ci(75,window.innerWidth/window.innerHeight,.1,1e3),Ha=new class{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=qA(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=qA();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}},Wa={dom:document.getElementById("fps"),count:0,lastTick:Ha.oldTime/1e3},Ya=new mA({antialias:!0,powerPreference:"high-performance",stencil:!1});Ya.outputEncoding=B,Ya.setSize(window.innerWidth,window.innerHeight),document.getElementById("renderer").appendChild(Ya.domElement);const Ja=new class{constructor({enabled:t,samples:e}){this.blurScale=.5,this.isEnabled=t;const i=new Ui(2,2,1,1);i.deleteAttribute("normal"),i.deleteAttribute("uv");const n=["precision highp float;","in vec3 position;","out vec2 uv;","void main() {","  gl_Position = vec4(position.xy, 0, 1);","  uv = position.xy * 0.5 + 0.5;","}"].join("\n");this.blurTargetA=new _t(window.innerWidth*this.blurScale,window.innerHeight*this.blurScale,{depthBuffer:!1,samples:e,type:d}),this.blurTargetB=new _t(this.blurTargetA.width,this.blurTargetA.height,{depthBuffer:!1,samples:e,type:d}),this.blur=new mi(i,new PA({glslVersion:Q,uniforms:{direction:{value:new q},inputTexture:{value:null},resolution:{value:new q(this.blurTargetA.width,this.blurTargetA.height)}},vertexShader:n,fragmentShader:["precision highp float;","in vec2 uv;","out vec4 fragColor;","uniform vec2 direction;","uniform sampler2D inputTexture;","uniform vec2 resolution;","void main() {","  vec2 off1 = vec2(1.3846153846) * direction;","  vec2 off2 = vec2(3.2307692308) * direction;","  vec3 color = texture(inputTexture, uv).rgb * 0.2270270270;","  color += texture(inputTexture, uv + (off1 / resolution)).rgb * 0.3162162162;","  color += texture(inputTexture, uv - (off1 / resolution)).rgb * 0.3162162162;","  color += texture(inputTexture, uv + (off2 / resolution)).rgb * 0.0702702703;","  color += texture(inputTexture, uv - (off2 / resolution)).rgb * 0.0702702703;","  fragColor = vec4(color, 1.0);","}"].join("\n")})),this.blur.frustumCulled=!1,this.blur.matrixAutoUpdate=!1,this.screenTarget=new _t(window.innerWidth,window.innerHeight,{depthTexture:new dA(window.innerWidth,window.innerHeight,u),samples:e,type:d}),this.screen=new mi(i,new PA({glslVersion:Q,uniforms:{cameraNear:{value:0},cameraFar:{value:0},resolution:this.blur.material.uniforms.resolution,blurTexture:{value:this.blurTargetB.texture},colorTexture:{value:this.screenTarget.texture},depthTexture:{value:this.screenTarget.depthTexture}},vertexShader:n,fragmentShader:["precision highp float;","in vec2 uv;","out vec4 fragColor;","uniform float cameraNear;","uniform float cameraFar;","uniform vec2 resolution;","uniform sampler2D blurTexture;","uniform sampler2D colorTexture;","uniform sampler2D depthTexture;","float perspectiveDepthToViewZ(const in float invClipZ, const in float near, const in float far) {","  return (near * far) / ((far - near) * invClipZ - far);","}","vec3 LinearTosRGB(in vec3 value) {","  return vec3( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ) );","}","vec3 composite(const in vec2 uv) {","  vec3 blur = texture(blurTexture, uv).rgb;","  vec3 color = texture(colorTexture, uv).rgb;","  float depth = -perspectiveDepthToViewZ(texture(depthTexture, uv).r, cameraNear, cameraFar);","  float vignette = smoothstep(-0.2, 0.2, 0.4 - distance(uv, vec2(0.5, 0.5)));","  return mix(color, blur, clamp(depth / 24.0, 0.0, 1.0) * 0.6 - vignette * 0.3);","}","void main() {","  fragColor = vec4(LinearTosRGB(composite(uv)), 1.0);","  if (fract(uv.y * resolution.y / 2.0) > 0.6) {","    float vignette = smoothstep(-0.2, 0.2, 0.6 - distance(uv, vec2(0.5, 0.5)));","    fragColor.rgb *= mix(vec3(1.0), vec3(0.8), 1.0 - vignette);","  }","}"].join("\n")})),this.screen.frustumCulled=!1,this.screen.matrixAutoUpdate=!1}onResize(t,e){const{blur:i,blurScale:n,blurTargetA:r,blurTargetB:A,screenTarget:s}=this;r.setSize(t*n,e*n),A.setSize(r.width,r.height),i.material.uniforms.resolution.value.set(r.width,r.height),s.setSize(t,e)}render(t,e,i){const{blur:n,blurTargetA:r,blurTargetB:A,screen:s,screenTarget:a}=this;t.setRenderTarget(a),t.render(e,i),n.material.uniforms.direction.value.set(1,0),n.material.uniforms.inputTexture.value=a.texture,t.setRenderTarget(r),t.render(n,i),n.material.uniforms.direction.value.set(0,1),n.material.uniforms.inputTexture.value=r.texture,t.setRenderTarget(A),t.render(n,i),s.material.uniforms.cameraNear.value=i.near,s.material.uniforms.cameraFar.value=i.far,t.setRenderTarget(null),t.render(s,i)}}({enabled:!localStorage.getItem("vfx:disabled")&&!navigator.userAgent.includes("Mobile")&&!navigator.userAgent.includes("Quest"),samples:4}),Ka=new class extends fA{constructor({camera:t,renderer:e}){super(),this.world=new Ia({renderRadius:Ta.renderRadius}),this.add(this.world),this.input=new Ra(e.domElement,e.xr),this.player=new cA,this.player.camera=t,this.player.head=new yt,this.player.targetFloor=this.player.position.y,this.player.targetPosition=this.player.position.clone(),this.player.targetRotation=this.player.camera.rotation.clone(),this.player.add(t),this.add(this.player),this.loading=document.getElementById("loading"),this.onDragEnter=this.onDragEnter.bind(this),this.onDragOver=this.onDragOver.bind(this),this.onDrop=this.onDrop.bind(this),window.addEventListener("dragenter",this.onDragEnter,!1),window.addEventListener("dragover",this.onDragOver,!1),window.addEventListener("drop",this.onDrop,!1),Ta.initialWorldURL&&this.load(Ta.initialWorldURL),Ta.worldMenu&&(this.menu=new Ba(Ta.worldMenu,(t=>{this.world.reset(),this.load(t.url)})))}onUnload(){const{input:t,loading:e,menu:i,world:n}=this;t.dispose(),e.classList.remove("enabled"),i&&i.dispose(),n.dispose(),window.removeEventListener("dragenter",this.onDragEnter),window.removeEventListener("dragover",this.onDragOver),window.removeEventListener("drop",this.onDrop)}load(t){const{loading:e,player:i,world:n}=this;this.isLoading=!0,e.classList.add("enabled"),("string"==typeof t?fetch(t).then((t=>t.arrayBuffer())):Promise.resolve(t)).then((t=>new Promise(((e,i)=>ta(new Uint8Array(t),((t,n)=>{t?i(t):e(n.buffer)})))))).then((t=>{const r=n.importChunks(t);Ta.autoUpdateRenderRadius||n.updateChunks(n.localToWorld(Ua.set(0,n.chunkSize*n.renderRadius*.25,0))),i.position.fromArray(r.spawn),i.position.y=i.targetFloor=this.ground(i.position,4),i.isWalking=-1!==i.targetFloor,i.targetPosition.copy(i.position),i.camera.position.set(0,1.6,0),i.camera.rotation.set(0,0,0,"YXZ"),i.targetRotation.copy(i.camera.rotation),i.camera.getWorldPosition(i.head),this.isLoading=!1,e.classList.remove("enabled")}))}onAnimationTick(t,e,i){const{input:n,isLoading:r,player:A,world:s}=this;n.onAnimationTick(t),this.processPlayerInput(i.xr),this.processPlayerMovement(t,i.xr),Ta.autoUpdateRenderRadius&&!r&&s.updateChunks(A.head)}onEnterVR(){const{input:t,player:e}=this;t.controllers.forEach((t=>e.add(t)))}onExitVR(){const{input:t,player:e}=this;e.camera.position.set(0,1.6,0),e.camera.rotation.copy(e.targetRotation),t.controllers.forEach((t=>e.remove(t)))}onDragEnter(t){t.preventDefault()}onDragOver(t){t.preventDefault()}onDrop(t){t.preventDefault();const[e]=t.dataTransfer.files;if(!e)return;const i=new FileReader;i.onload=()=>this.load(i.result),i.readAsArrayBuffer(e)}processPlayerInput(t){const{input:e,player:i}=this;let n=e.buttons.interactDown;if(t.isPresenting&&e.controllers.forEach((e=>{e.hand&&(e.buttons.secondaryDown&&Promise.resolve().then((()=>t.getSession().end())),n=n||e.buttons.primaryDown)})),n&&(i.isWalking=!i.isWalking,i.isWalking)){const t=this.ground(i.targetPosition,4);-1!==t&&(i.targetFloor=t)}}processPlayerMovement(t,e){const{input:i,player:n}=this;let r=n.camera,A=i.movement.x||i.movement.y?i.movement:null,s=i.buttons.run;if(e.isPresenting?(e.updateCamera(n.camera),r=e.getCamera(),i.controllers.forEach((t=>{t.hand&&("left"===t.hand.handedness&&(t.joystick.x||t.joystick.y)&&(A=t.joystick,s=t.buttons.tertiary),"right"===t.hand.handedness&&(t.buttons.leftwardsDown||t.buttons.rightwardsDown)&&(r.getWorldPosition(Ua),Ua.y=n.position.y,Ga.makeTranslation(Ua.x,Ua.y,Ua.z),Ga.multiply(Oa.makeRotationAxis(Fa,Math.PI*(t.buttons.leftwardsDown?.25:-.25))),Ga.multiply(Oa.makeTranslation(-Ua.x,-Ua.y,-Ua.z)),n.applyMatrix4(Ga),n.updateMatrixWorld(),n.targetPosition.copy(n.position),e.updateCamera(n.camera)))}))):((i.look.x||i.look.y)&&(n.targetRotation.y+=i.look.x,n.targetRotation.x+=i.look.y,n.targetRotation.x=Math.min(Math.max(n.targetRotation.x,-.5*Math.PI),.5*Math.PI)),r.rotation.y=j.damp(r.rotation.y,n.targetRotation.y,20,t),r.rotation.x=j.damp(r.rotation.x,n.targetRotation.x,20,t)),A){r.getWorldDirection(Qa),n.isWalking&&(Qa.y=0,Qa.normalize()),za.crossVectors(Qa,Fa).normalize(),Na.set(0,0,0).addScaledVector(za,A.x).addScaledVector(Qa,A.y);const e=Na.length();e>1&&Na.divideScalar(e);const a=i.speed*(s?2:1)*t;if(r.getWorldPosition(Qa).sub(n.position).add(n.targetPosition).addScaledVector(Na,a),n.isWalking){const t=this.ground(Qa,4);-1!==t&&Math.abs(t-n.targetPosition.y)<2&&(n.targetPosition.addScaledVector(Na,a),n.targetFloor=t)}else n.targetPosition.addScaledVector(Na,a)}n.isWalking&&(n.targetPosition.y=j.damp(n.targetPosition.y,n.targetFloor,10,t)),n.position.x=j.damp(n.position.x,n.targetPosition.x,10,t),n.position.y=j.damp(n.position.y,n.targetPosition.y,10,t),n.position.z=j.damp(n.position.z,n.targetPosition.z,10,t),n.updateMatrixWorld(),e.isPresenting&&e.updateCamera(n.camera),r.getWorldPosition(n.head)}ground(t,e=4){const{world:i}=this;if(i.worldToLocal(ka.copy(t)).floor(),this.test(ka.x,ka.y,ka.z))return-1;for(ka.y--;ka.y>=0;ka.y--)if(this.test(ka.x,ka.y,ka.z)){for(let t=1;t<=e;t++)if(this.test(ka.x,ka.y+t,ka.z))return-1;return ka.y++,i.localToWorld(ka).y}return-1}test(t,e,i){const{world:n}=this;for(let r=0;r<2;r++)for(let A=0;A<2;A++)for(let s=0;s<2;s++){let a=t+r,o=e+A,l=i+s;const c=Math.floor(a/n.chunkSize),h=Math.floor(o/n.chunkSize),u=Math.floor(l/n.chunkSize),d=n.dataChunks.get(`${c}:${h}:${u}`);if(!d)return!1;a-=c*n.chunkSize,o-=h*n.chunkSize,l-=u*n.chunkSize;if(d[4*(l*n.chunkSize*n.chunkSize+o*n.chunkSize+a)]>=128)return!0}return!1}}({camera:Va,renderer:Ya});window.addEventListener("resize",(()=>{Ya.setSize(window.innerWidth,window.innerHeight),Ja.onResize(window.innerWidth,window.innerHeight),Va.aspect=window.innerWidth/window.innerHeight,Va.updateProjectionMatrix(),Ka.onResize&&Ka.onResize(window.innerWidth,window.innerHeight)}),!1),document.addEventListener("visibilitychange",(()=>{"visible"===document.visibilityState&&(Ha.start(),Wa.count=-1,Wa.lastTick=Ha.oldTime/1e3)}),!1),Ya.setAnimationLoop((()=>{const t=Math.min(Ha.getDelta(),1),e=Ha.oldTime/1e3;if(Ka.onAnimationTick(t,e,Ya),Ja.isEnabled&&!Ya.xr.isPresenting?Ja.render(Ya,Ka,Va):Ya.render(Ka,Va),Wa.count+=1,e>=Wa.lastTick+1){const t=Math.round(Wa.count/(e-Wa.lastTick));Wa.dom.innerText=`${t}fps`,Wa.lastTick=e,Wa.count=0}}));{const t=Ya.getContext(),e=t.getExtension("WEBGL_debug_renderer_info");e&&(document.getElementById("debug").innerText=t.getParameter(e.UNMASKED_RENDERER_WEBGL))}{const t=document.createElement("div");t.className="dialog controls";const e=()=>t.classList.toggle("enabled");document.getElementById("controls").addEventListener("click",e,!1),t.addEventListener("click",e,!1);const i=document.createElement("div");t.appendChild(i),document.body.appendChild(t),[["Mouse & Keyboard",[["W A S D","Move"],["Shift","Run"],["Mouse","Look"],["E","Walk/Fly"],["Wheel","Set speed"]]],["Gamepad",[["Left stick","Move (press to run)"],["Right stick","Look"],["A","Walk/Fly"]]],["VR",[["Left stick","Move (press to run)"],["Right stick","Rotate view"],["A/X","Walk/Fly"],["B/Y","Exit VR"]]]].forEach((([t,e])=>{const n=document.createElement("div"),r=document.createElement("h1");r.innerText=t,n.appendChild(r),e.forEach((t=>{const e=document.createElement("div");t.forEach(((t,i)=>{const n=document.createElement("div");n.innerText=`${t}${0===i?":":""}`,e.appendChild(n)})),n.appendChild(e)})),i.appendChild(n)}))}{const t=document.getElementById("vfx"),e=t.getElementsByTagName("span")[0],i=()=>{const{isEnabled:t}=Ja;e.className=t?"enabled":"",e.innerText=t?"[ON]":"[OFF]"};i(),t.addEventListener("click",(()=>{Ja.isEnabled=!Ja.isEnabled,i(),localStorage[(Ja.isEnabled?"remove":"set")+"Item"]("vfx:disabled","1")}),!1)}navigator.xr&&(Ya.xr.enabled=!0,Ya.xr.cameraAutoUpdate=!1,navigator.xr.isSessionSupported("immersive-vr").then((t=>{if(!t)return;const e=document.createElement("div");e.id="vr";{const t="http://www.w3.org/2000/svg",i=document.createElementNS(t,"svg");i.setAttribute("width",24),i.setAttribute("height",24),i.setAttribute("viewBox","0 0 512 512"),i.setAttribute("fill","currentColor"),["m299.452 386.371c-27.984 9.338-58.852 9.336-86.916-.004-7.863-2.618-16.354 1.635-18.969 9.495-2.616 7.86 1.635 16.354 9.496 18.97 17.09 5.688 35.031 8.531 52.967 8.531s35.868-2.846 52.918-8.535c7.858-2.622 12.103-11.118 9.48-18.977-2.621-7.857-11.116-12.1-18.976-9.48z","m430.736 97.999c-6.384-45.79-45.703-81.932-94.402-81.932h-17.134v-1.067c0-8.284-6.716-15-15-15h-96.4c-8.284 0-15 6.716-15 15v1.066h-17.133c-48.291 0-87.664 35.638-94.36 81.922-28.118 6.399-49.173 31.584-49.173 61.611v128.534c0 41.106 33.483 57.859 48.692 61.474 6.868 92.539 84.571 162.393 175.174 162.393 92.396 0 168.358-71.705 175.167-162.389 39.424-9.36 48.699-45.128 48.699-61.477v-128.534c.001-30.012-21.034-55.187-49.13-61.601zm-111.536-51.933h17.133c42.442 0 59.975 34.701 63.62 50.334h-80.753zm-96.4-16.066h66.4v66.4h-66.4zm-47.133 16.066h17.133v50.334h-80.691c9.729-40.756 46.651-50.334 63.558-50.334zm80.333 435.934c-74.035 0-137.32-56.086-144.904-130.667h73.97c18.407 0 36.417-7.459 49.412-20.464.077-.077.153-.155.229-.234 5.643-5.52 13.385-8.679 21.293-8.679 7.91 0 15.652 3.16 21.294 8.68.075.078.151.156.229.233 12.995 13.005 31.005 20.464 49.413 20.464h73.963c-7.533 73.301-69.642 130.667-144.899 130.667zm193.867-193.866c0 18.564-15.131 33.199-33.2 33.199h-89.731c-10.392 0-20.558-4.161-27.948-11.428-.081-.085-.163-.169-.246-.253-11.246-11.246-26.824-17.696-42.741-17.696-15.916 0-31.494 6.45-42.74 17.696-.083.083-.166.167-.247.252-7.391 7.268-17.557 11.429-27.948 11.429h-89.733c-18.012 0-33.2-14.572-33.2-33.199v-128.534c0-18.306 14.894-33.199 33.2-33.199h321.333c18.307 0 33.2 14.894 33.2 33.199v128.534z"].forEach((e=>{const n=document.createElementNS(t,"path");n.setAttribute("d",e),i.appendChild(n)})),e.appendChild(i)}const i=document.createElement("div");i.innerText="Enter VR",e.appendChild(i);let n=null;const r=()=>{n.removeEventListener("end",r),n=null,i.innerText="Enter VR",Ka.onExitVR&&Ka.onExitVR()};e.addEventListener("click",(()=>{n?n.end():navigator.xr.requestSession("immersive-vr",{optionalFeatures:["local-floor"]}).then((t=>{t.addEventListener("end",r),Ya.xr.setSession(t).then((()=>{n=t,i.innerText="Exit VR",Ka.onEnterVR&&Ka.onEnterVR()}))}))}),!1),document.body.appendChild(e)}))),window.addEventListener("contextmenu",(t=>t.preventDefault()),!1)}();
